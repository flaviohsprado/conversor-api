var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AllExceptionsFilter.html",[0,0.026,1,3.125]],["body/classes/AllExceptionsFilter.html",[0,0.027,1,4.319,2,1.201,3,0.117,4,0.117,5,0.105,6,3.774,7,3.603,8,6.666,9,0.241,10,1.782,11,2.419,12,2.347,13,3.808,14,0.849,15,7.158,16,1.665,17,0.618,18,5.86,19,0.423,20,0.011,21,5.86,22,4.914,23,7.158,24,4.3,25,0.623,26,0.585,27,0.531,28,5.86,29,0.623,30,2.119,31,0.523,32,2.644,33,0.789,34,2.791,35,0.117,36,2.963,37,4.3,38,1.715,39,4.3,40,2.151,41,4.3,42,4.3,43,2.644,44,4.3,45,4.3,46,4.933,47,4.3,48,4.3,49,4.3,50,4.3,51,6.666,52,2.498,53,5.86,54,5.86,55,5.86,56,5.86,57,4.3,58,4.3,59,2.887,60,4.3,61,4.3,62,4.3,63,4.3,64,4.3,65,0.007,66,0.007]],["title/interfaces/AmbientConfig.html",[67,0.735,68,3.125]],["body/interfaces/AmbientConfig.html",[3,0.17,4,0.17,5,0.153,9,0.353,14,1.081,17,0.583,20,0.01,29,0.91,35,0.17,65,0.009,66,0.009,67,1.089,68,5.503,69,2.084,70,5.516,71,7.233,72,6.284,73,1.016]],["title/interfaces/ApiConfig.html",[67,0.735,74,3.38]],["body/interfaces/ApiConfig.html",[3,0.17,4,0.17,5,0.153,9,0.353,14,1.081,17,0.583,20,0.01,29,0.91,35,0.17,65,0.009,66,0.009,67,1.089,69,2.084,73,1.016,74,5.952,75,5.516,76,7.233,77,6.284]],["title/modules/ApiConfigModule.html",[78,1.253,79,2.752]],["body/modules/ApiConfigModule.html",[0,0.03,3,0.129,4,0.129,5,0.116,20,0.011,31,0.692,33,0.876,35,0.17,40,1.371,65,0.008,66,0.008,78,1.857,79,5.412,80,1.904,81,2.679,82,4.191,83,4.191,84,4.191,85,5.541,86,4.06,87,2.873,88,2.183,89,2.183,90,3.806,91,3.097,92,3.097,93,4.774,94,3.806,95,3.359,96,3.294,97,3.099,98,2.936,99,4.774,100,5.011,101,1.538,102,3.509,103,1.296,104,4.191,105,4.191,106,3.222,107,4.774,108,2.551,109,3.29]],["title/injectables/ApiConfigService.html",[85,2.752,110,1.151]],["body/injectables/ApiConfigService.html",[0,0.031,3,0.135,4,0.135,5,0.121,9,0.279,12,1.75,14,0.935,16,1.242,17,0.599,19,0.517,20,0.011,25,1.038,26,0.878,27,0.797,29,0.72,31,0.677,33,0.913,35,0.135,40,1.428,43,3.968,65,0.008,66,0.008,73,0.975,85,4.189,94,3.963,101,2.308,103,1.752,110,1.752,111,2.119,112,4.363,113,1.558,114,5.664,115,4.971,116,8.054,117,4.971,118,5.664,119,4.971,120,3.664,121,4.363,122,4.363,123,3.963,124,4.447,125,4.363,126,2.548,127,3.227,128,1.804,129,4.971,130,4.971,131,4.971,132,1.313]],["title/modules/AppModule.html",[78,1.253,133,2.922]],["body/modules/AppModule.html",[0,0.023,3,0.099,4,0.099,5,0.089,20,0.011,31,0.749,33,0.671,34,2.374,35,0.099,65,0.006,66,0.006,78,1.546,79,4.766,80,1.459,81,2.231,87,2.393,88,1.672,89,1.672,91,2.578,95,3.924,96,1.614,97,2.374,106,2.683,133,5.845,134,3.211,135,3.211,136,3.211,137,4.515,138,4.295,139,4.295,140,5.06,141,5.06,142,3.658,143,4.594,144,5.233,145,5.233,146,2.249,147,3.658,148,3.211,149,1.955,150,3.658,151,2.916,152,3.858,153,3.658,154,3.658,155,3.858,156,3.658,157,3.658,158,3.658,159,3.658,160,3.606,161,3.658,162,3.658,163,3.658,164,3.658,165,3.658,166,2.374,167,5.233,168,3.658,169,5.233,170,5.233,171,5.233,172,4.594,173,5.233,174,3.658,175,3.658,176,2.916,177,4.505,178,5.233,179,6.111,180,3.658,181,3.658,182,3.658]],["title/controllers/AuthController.html",[183,2.607,184,3.125]],["body/controllers/AuthController.html",[0,0.028,3,0.123,4,0.123,5,0.111,9,0.254,11,1.644,12,1.595,14,0.879,16,1.132,17,0.42,19,0.327,20,0.011,25,0.656,26,0.616,27,0.559,29,0.656,31,0.736,33,0.832,35,0.123,38,1.807,40,1.301,46,3.122,65,0.007,66,0.007,101,2.205,108,2.421,113,1.32,132,1.196,183,2.786,184,4.475,185,3.122,186,3.977,187,3.612,188,4.531,189,6.419,190,4.531,191,4.747,192,1.999,193,4.531,194,3.977,195,4.531,196,6.07,197,3.612,198,2.53,199,6.07,200,3.612,201,2.786,202,3.941,203,2.786,204,3.612,205,3.977,206,3.122,207,3.612,208,2.786,209,4.005,210,3.34,211,3.122,212,3.244,213,2.941,214,2.786,215,4.531,216,2.941,217,4.531,218,4.531,219,3.612,220,3.977,221,3.34,222,2.65,223,4.531,224,4.531,225,3.977,226,4.531,227,2.149,228,4.531,229,3.612,230,4.531,231,4.531]],["title/classes/AuthDTO.html",[0,0.026,191,2.752]],["body/classes/AuthDTO.html",[0,0.033,2,1.503,3,0.146,4,0.146,5,0.131,9,0.302,10,2.065,16,1.345,17,0.69,19,0.536,20,0.011,25,0.78,26,0.732,27,0.664,31,0.48,35,0.146,65,0.008,66,0.008,73,1.063,113,1.788,191,5.228,192,2.996,232,4.725,233,3.975,234,4.153,235,5.414,236,6.79,237,5.005,238,4.711,239,5.383,240,4.725,241,3.31]],["title/classes/AuthPresenter.html",[0,0.026,216,2.752]],["body/classes/AuthPresenter.html",[0,0.035,2,1.584,3,0.154,4,0.154,5,0.138,9,0.318,10,2.133,16,1.417,17,0.651,19,0.506,20,0.011,25,0.821,26,0.772,27,0.7,31,0.506,35,0.154,65,0.009,66,0.009,73,0.954,113,1.656,192,2.503,216,5.309,238,4.456,240,4.979,241,3.488,242,4.979,243,6.687,244,7.016,245,7.016,246,6.158]],["title/modules/AuthUsecasesProxyModule.html",[78,1.253,208,2.607]],["body/modules/AuthUsecasesProxyModule.html",[0,0.022,3,0.098,4,0.098,5,0.088,13,2.563,14,0.525,17,0.336,20,0.011,29,0.525,31,0.739,33,0.666,35,0.098,38,2.075,65,0.006,66,0.006,78,1.797,80,1.446,81,2.217,87,2.378,88,1.658,89,1.658,91,1.787,92,1.787,95,3.912,96,2.295,97,2.354,106,2.666,108,1.938,109,2.499,132,0.958,137,4.502,138,4.283,139,4.283,149,3.25,166,4.753,177,2.673,202,3.376,203,2.23,204,2.891,208,5.186,209,3.043,210,3.834,212,2.78,214,2.23,247,3.183,248,3.183,249,4.502,250,3.584,251,2.891,252,4.849,253,3.626,254,4.483,255,2.891,256,3.396,257,2.673,258,2.891,259,3.396,260,2.673,261,2.891,262,3.74,263,2.025,264,3.183,265,3.759,266,3.183,267,3.626,268,3.948,269,3.626,270,2.673,271,3.626,272,3.626,273,5.201,274,4.147,275,2.467,276,4.565]],["title/modules/BcryptModule.html",[78,1.253,137,2.607]],["body/modules/BcryptModule.html",[0,0.035,3,0.154,4,0.154,5,0.138,20,0.011,31,0.626,33,1.041,35,0.154,65,0.009,66,0.009,78,2.073,80,2.262,81,2.991,87,3.208,88,2.593,89,2.593,91,3.457,92,3.457,137,5.193,265,4.672,277,4.979,278,4.979,279,4.979,280,5.672,281,5.672]],["title/injectables/BcryptService.html",[110,1.151,265,2.266]],["body/injectables/BcryptService.html",[0,0.03,3,0.131,4,0.131,5,0.118,9,0.272,14,0.919,17,0.589,19,0.457,20,0.011,25,0.919,26,0.863,27,0.783,29,0.919,31,0.631,33,0.889,35,0.131,40,1.391,65,0.008,66,0.008,73,1.156,101,2.576,103,2.039,110,1.723,111,2.064,113,1.739,126,2.482,128,2.568,132,1.675,265,3.39,282,4.251,283,5.569,284,5.569,285,5.569,286,6.59,287,4.842,288,5.569,289,4.842,290,3.901,291,4.842,292,5.569,293,6.344,294,4.842,295,4.842,296,4.842]],["title/modules/CacheConfigModule.html",[78,1.253,297,2.752]],["body/modules/CacheConfigModule.html",[0,0.03,3,0.129,4,0.129,5,0.116,20,0.011,22,4.633,31,0.711,33,0.876,35,0.17,40,1.371,65,0.008,66,0.008,78,1.857,80,1.904,81,2.679,86,3.097,87,2.873,88,2.183,89,2.183,91,3.097,92,3.097,96,2.106,98,2.936,102,2.666,106,2.447,297,5.272,298,4.191,299,4.191,300,4.191,301,5.249,302,3.806,303,4.774,304,4.191,305,3.519,306,6.167,307,3.806,308,3.806,309,5.011,310,5.602,311,4.774,312,3.29,313,4.774,314,3.806,315,5.517,316,4.191,317,5.011,318,4.191,319,5.517,320,5.517,321,4.191,322,4.774,323,4.774]],["title/injectables/CacheService.html",[110,1.151,301,2.607]],["body/injectables/CacheService.html",[0,0.028,3,0.125,4,0.125,5,0.112,9,0.258,11,1.667,14,0.887,16,1.147,17,0.639,19,0.497,20,0.011,25,0.998,26,0.938,27,0.851,29,0.887,31,0.615,33,0.843,35,0.125,40,1.76,65,0.007,66,0.007,73,1.072,101,2.538,103,1.997,108,2.454,110,1.663,111,1.958,113,1.713,126,2.354,128,2.223,132,1.213,301,3.767,307,6.107,308,3.661,324,4.031,325,5.377,326,5.377,327,4.592,328,4.592,329,3.976,330,5.377,331,4.592,332,4.221,333,5.377,334,4.032,335,4.592,336,4.592,337,3.42,338,4.592,339,4.592,340,2.981,341,4.592,342,4.592,343,6.125,344,4.592,345,4.592]],["title/modules/ControllersModule.html",[78,1.253,160,2.922]],["body/modules/ControllersModule.html",[0,0.03,3,0.13,4,0.13,5,0.117,20,0.011,31,0.725,33,0.879,35,0.13,65,0.008,66,0.008,78,1.861,80,1.91,81,2.684,87,2.879,88,2.189,89,2.189,92,2.359,106,3.228,160,5.802,184,5.186,185,4.339,208,4.775,209,4.663,210,3.529,211,4.849,346,4.202,347,4.202,348,5.041,349,5.041,350,4.788,351,5.186,352,5.186,353,3.817,354,3.817,355,4.788,356,4.788,357,4.788,358,6.297,359,6.297,360,6.297]],["title/classes/CreateTransactionDTO.html",[0,0.026,361,2.752]],["body/classes/CreateTransactionDTO.html",[0,0.034,2,1.077,3,0.105,4,0.105,5,0.094,9,0.217,10,1.653,16,0.964,17,0.727,19,0.565,20,0.011,25,0.559,26,0.525,27,0.476,31,0.609,35,0.147,65,0.007,66,0.007,73,1.111,113,1.894,192,3.388,235,5.017,237,4.639,238,4.662,241,3.342,361,4.675,362,3.076,363,4.337,364,4.337,365,4.337,366,4.337,367,4.337,368,4.337,369,3.815,370,5.435,371,2.874,372,5.779,373,3.858,374,2.578,375,4.639,376,3.858,377,3.858,378,3.858,379,3.858,380,3.858,381,3.528,382,2.844,383,3.387,384,3.387,385,2.844,386,3.746,387,2.154]],["title/classes/CreateTransactionUseCase.html",[0,0.026,388,2.922]],["body/classes/CreateTransactionUseCase.html",[0,0.02,2,0.904,3,0.088,4,0.088,5,0.079,9,0.182,11,2.713,12,2.366,13,2.359,14,0.693,16,1.196,17,0.529,19,0.411,20,0.011,25,0.825,26,0.775,27,0.703,29,0.693,31,0.681,32,1.991,33,0.594,35,0.088,38,2.273,40,2.091,43,1.991,52,1.38,59,2.359,65,0.006,66,0.006,73,1.114,86,3.103,96,1.428,98,1.991,101,2.267,103,1.71,113,1.239,124,4.34,125,2.841,128,2.068,132,1.265,227,1.535,275,2.703,361,3.108,363,2.231,364,2.231,365,2.231,366,2.231,367,2.231,368,2.231,369,3.182,371,2.634,387,4.174,388,3.3,389,3.103,390,5.528,391,2.386,392,3.103,393,5.699,394,2.101,395,3.365,396,2.605,397,3.684,398,2.879,399,4.543,400,5.699,401,2.841,402,2.581,403,3.237,404,3.237,405,3.237,406,2.581,407,2.801,408,3.504,409,3.237,410,3.237,411,2.841,412,3.237,413,2.605,414,2.231,415,2.101,416,5.002,417,3.237,418,3.237,419,3.237,420,3.237,421,3.237,422,4.203,423,3.237,424,2.231,425,3.237,426,2.841,427,3.237,428,1.991,429,3.237,430,3.237,431,3.237,432,3.237,433,3.237,434,3.237,435,3.237,436,3.237,437,1.807,438,3.237,439,3.237]],["title/classes/CreateUserDTO.html",[0,0.026,440,2.607]],["body/classes/CreateUserDTO.html",[0,0.04,2,1.392,3,0.135,4,0.135,5,0.122,9,0.28,10,1.966,17,0.666,19,0.517,20,0.011,31,0.64,35,0.175,65,0.008,66,0.008,73,1.144,113,1.868,192,3.166,233,4.057,234,4.239,238,4.602,381,4.929,382,3.675,385,3.675,440,3.976,441,3.975,442,3.892,443,5.289,444,4.985,445,4.985,446,4.985,447,4.376,448,3.066]],["title/classes/CreateUserUseCase.html",[0,0.026,449,2.922]],["body/classes/CreateUserUseCase.html",[0,0.026,2,1.18,3,0.115,4,0.115,5,0.103,9,0.237,11,2.579,12,2.501,13,2.852,14,0.838,16,1.446,17,0.537,19,0.417,20,0.011,25,0.838,26,0.788,27,0.715,29,0.612,31,0.702,32,2.598,33,0.776,35,0.115,38,1.685,40,1.214,52,1.801,65,0.007,66,0.007,101,2.128,103,1.572,113,1.436,128,2.397,132,1.116,233,2.258,263,2.359,265,3.53,275,3.133,290,4.369,389,3.254,392,3.254,394,2.743,395,3.797,396,3.02,398,3.248,406,3.368,415,2.743,424,2.911,426,3.708,437,2.359,440,4.369,449,3.99,450,5.798,451,2.911,452,3.642,453,3.708,454,5.082,455,3.708,456,2.325,457,3.368,458,2.471,459,3.368,460,3.708,461,3.708,462,3.708,463,3.708,464,3.708,465,2.598,466,3.708,467,3.114,468,3.708,469,5.082,470,4.225,471,4.225]],["title/interfaces/DatabaseConfig.html",[67,0.735,472,3.125]],["body/interfaces/DatabaseConfig.html",[3,0.135,4,0.135,5,0.122,9,0.28,14,0.936,17,0.772,20,0.011,29,1.204,35,0.135,65,0.008,66,0.008,67,0.864,69,1.654,73,1.169,371,2.42,472,4.766,473,4.376,474,6.664,475,6.664,476,6.664,477,6.664,478,6.664,479,6.664,480,6.664,481,6.664,482,4.985,483,4.985,484,4.985,485,4.985,486,4.985,487,4.985,488,3.782,489,4.985,490,4.985]],["title/injectables/DatabaseTransactionRepository.html",[110,1.151,491,2.752]],["body/injectables/DatabaseTransactionRepository.html",[0,0.023,3,0.102,4,0.102,5,0.092,9,0.211,11,1.366,12,1.325,14,0.773,16,1.334,17,0.662,19,0.515,20,0.011,25,1.033,26,0.971,27,0.881,29,0.979,31,0.637,33,0.691,35,0.102,40,1.534,65,0.007,66,0.007,73,1.078,101,2.644,103,2.115,110,1.45,111,1.604,113,1.784,126,1.929,128,1.938,132,1.784,369,2.982,396,3.089,397,3.124,413,3.561,416,3.304,491,3.467,492,3.304,493,3.467,494,3.124,495,3.467,496,3.467,497,3.764,498,3.764,499,5.341,500,4.688,501,3.764,502,3.467,503,3.764,504,2.379,505,4.688,506,3.764,507,3.467,508,3.764,509,3.304,510,2.594,511,2.314,512,3.304,513,3.764,514,3.764,515,3.764,516,5.341,517,3.764,518,3.764,519,3.764]],["title/injectables/DatabaseUserRepository.html",[110,1.151,262,2.607]],["body/injectables/DatabaseUserRepository.html",[0,0.018,3,0.079,4,0.079,5,0.071,9,0.164,11,1.057,12,1.026,14,0.641,16,1.105,17,0.672,19,0.507,20,0.011,25,1.018,26,0.956,27,0.868,29,1.018,31,0.573,33,0.535,35,0.079,40,1.537,65,0.005,66,0.005,73,1.148,101,2.686,103,2.164,110,1.202,111,1.242,113,1.813,126,1.493,128,2.168,132,1.959,227,2.099,262,2.721,332,4.427,334,4.339,396,2.731,452,2.268,456,2.853,493,2.872,494,2.588,495,3.878,496,2.872,502,2.872,504,2.663,507,2.872,509,2.557,510,2.008,511,1.791,520,2.557,521,5.639,522,3.884,523,3.528,524,2.913,525,2.913,526,4.425,527,2.557,528,2.913,529,1.891,530,3.528,531,2.913,532,2.913,533,2.913,534,3.884,535,2.913,536,2.913,537,3.528,538,2.913,539,2.323,540,2.913,541,2.913,542,2.913,543,5.974,544,2.913,545,2.913,546,2.913,547,2.913,548,2.913,549,2.913,550,1.332]],["title/classes/DeleteTransactionUseCase.html",[0,0.026,551,2.922]],["body/classes/DeleteTransactionUseCase.html",[0,0.028,2,1.249,3,0.121,4,0.121,5,0.109,9,0.251,11,2.468,12,2.394,13,2.964,14,0.871,16,1.503,17,0.558,19,0.434,20,0.011,25,0.871,26,0.818,27,0.743,29,0.647,31,0.677,32,2.749,33,0.821,35,0.121,40,1.284,52,1.906,65,0.007,66,0.007,73,0.925,101,2.19,103,1.634,113,1.478,128,1.623,132,1.181,222,2.615,275,3.225,389,3.35,391,3.296,392,3.35,394,2.902,395,3.887,396,3.109,397,4.255,398,3.325,401,3.924,413,3.109,414,3.081,415,2.902,424,3.081,437,2.496,504,2.118,551,4.146,552,5.969,553,4.471,554,3.7,555,3.081,556,3.296,557,6.8,558,3.924,559,4.471,560,3.564,561,2.902,562,3.924]],["title/classes/DeleteUserUseCase.html",[0,0.026,563,2.922]],["body/classes/DeleteUserUseCase.html",[0,0.028,2,1.249,3,0.121,4,0.121,5,0.109,9,0.251,11,2.468,12,2.394,13,2.964,14,0.871,16,1.503,17,0.558,19,0.434,20,0.011,25,0.871,26,0.818,27,0.743,29,0.647,31,0.677,32,2.749,33,0.821,35,0.121,40,1.284,52,1.906,65,0.007,66,0.007,73,0.925,101,2.19,103,1.634,113,1.478,128,1.623,132,1.181,222,2.615,263,2.496,275,3.225,389,3.35,392,3.35,394,2.902,395,3.887,396,3.109,398,3.325,415,2.902,424,3.081,437,2.496,451,3.081,452,3.729,456,2.394,504,2.118,539,3.564,554,3.7,558,3.924,560,3.564,561,2.902,562,3.924,563,4.146,564,5.969,565,4.471,566,4.471,567,3.924,568,6.8,569,4.471]],["title/modules/EnvironmentConfigModule.html",[78,1.253,95,2.266]],["body/modules/EnvironmentConfigModule.html",[0,0.032,3,0.142,4,0.142,5,0.128,20,0.011,31,0.69,33,0.964,35,0.142,65,0.008,66,0.008,78,1.975,80,2.094,81,2.849,86,4.263,87,3.055,88,2.4,89,2.4,91,3.293,92,3.293,95,4.437,96,2.316,98,3.228,106,2.691,304,4.607,305,3.869,312,4.605,321,4.607,550,2.4,570,4.607,571,4.607,572,5.249,573,3.407,574,5.249,575,4.605,576,5.249,577,5.249,578,5.249,579,5.249]],["title/injectables/EnvironmentConfigService.html",[86,2.089,110,1.151]],["body/injectables/EnvironmentConfigService.html",[0,0.018,3,0.078,4,0.078,5,0.07,9,0.161,14,0.634,16,0.718,17,0.744,19,0.207,20,0.011,25,0.416,26,0.391,27,0.355,29,1.151,31,0.6,33,0.528,35,0.078,65,0.005,66,0.005,68,3.228,71,5.207,73,1.137,76,5.207,86,2.157,96,3.567,110,1.189,111,1.225,113,1.9,126,1.473,127,1.865,132,2.098,305,2.118,309,2.291,371,2.221,472,3.228,474,5.207,475,5.207,476,5.207,477,5.207,478,5.207,479,5.207,480,5.207,481,5.207,488,2.561,573,5.247,580,2.522,581,5.207,582,5.207,583,5.207,584,5.207,585,2.874,586,6.728,587,2.874,588,2.874,589,2.874,590,2.874,591,2.874,592,2.874,593,2.874,594,2.874,595,2.874,596,2.874,597,2.874,598,2.874,599,2.874,600,2.874,601,2.874,602,2.874,603,2.874,604,3.228,605,2.874,606,3.228,607,2.874,608,2.874,609,2.874,610,2.874,611,2.874,612,1.98,613,2.874,614,2.874,615,2.291,616,2.874,617,2.874,618,2.874,619,2.874,620,2.874,621,2.874,622,2.874,623,2.874,624,2.874,625,2.874,626,2.291,627,2.874]],["title/classes/EnvironmentVariables.html",[0,0.026,628,3.38]],["body/classes/EnvironmentVariables.html",[0,0.036,2,0.934,3,0.091,4,0.091,5,0.082,9,0.188,10,1.492,17,0.726,19,0.564,20,0.011,31,0.438,35,0.091,38,1.335,40,1.409,65,0.006,66,0.006,73,1.112,96,3.501,102,1.868,113,1.889,132,0.884,192,3.453,227,1.587,312,4.907,371,1.837,488,2.87,550,1.53,573,5.15,628,3.912,629,2.466,630,5.81,631,5.81,632,5.81,633,5.81,634,5.81,635,5.81,636,5.81,637,5.81,638,5.81,639,7.229,640,3.346,641,3.346,642,3.346,643,3.346,644,5.81,645,3.346,646,5.81,647,3.346,648,3.346,649,4.907,650,3.346,651,3.346,652,3.346,653,3.346,654,2.668,655,3.346,656,3.346,657,2.668,658,3.346,659,3.381,660,3.617,661,3.617,662,3.912,663,2.937,664,2.937,665,2.668,666,4.907,667,3.346,668,3.346,669,3.346,670,3.346,671,3.346,672,3.346,673,2.937,674,2.668,675,3.346]],["title/modules/ExceptionsModule.html",[78,1.253,138,2.48]],["body/modules/ExceptionsModule.html",[0,0.035,3,0.154,4,0.154,5,0.138,20,0.011,31,0.626,33,1.041,35,0.154,65,0.009,66,0.009,78,2.073,80,2.262,81,2.991,87,3.208,88,2.593,89,2.593,91,3.457,92,3.457,138,4.94,256,4.881,676,4.979,677,4.979,678,4.979,679,5.672,680,5.672]],["title/injectables/ExceptionsService.html",[110,1.151,256,2.367]],["body/injectables/ExceptionsService.html",[0,0.026,3,0.114,4,0.114,5,0.103,9,0.236,14,0.836,17,0.689,19,0.536,20,0.011,25,1.076,26,1.011,27,0.917,29,1.076,30,4.05,31,0.515,33,0.772,35,0.114,38,2.964,65,0.007,66,0.007,110,1.567,111,1.792,126,2.155,256,3.222,398,2.638,529,4.603,567,3.69,674,5.924,681,3.69,682,5.065,683,5.065,684,5.065,685,5.065,686,5.065,687,4.6,688,5.899,689,4.204,690,6.522,691,4.6,692,4.204,693,4.6,694,4.204,695,4.6,696,4.204,697,4.6,698,4.204,699,3.69,700,4.204,701,4.204,702,3.69,703,4.204,704,4.204,705,4.204,706,4.204,707,4.204,708,4.204]],["title/classes/FindAllTransactionUseCase.html",[0,0.026,709,2.922]],["body/classes/FindAllTransactionUseCase.html",[0,0.03,2,1.341,3,0.13,4,0.13,5,0.117,9,0.27,11,2.29,12,2.221,14,0.914,16,1.576,17,0.585,19,0.455,20,0.011,25,0.914,26,0.858,27,0.779,29,0.695,31,0.629,35,0.13,40,1.812,65,0.008,66,0.008,73,0.959,101,2.27,103,1.713,113,1.532,128,2.557,132,1.666,329,4.574,337,4.178,369,2.681,389,3.471,392,3.108,396,2.884,397,4.377,402,5.03,413,2.195,414,3.309,556,3.539,709,4.347,710,5.617,711,4.214,712,3.309,713,4.801,714,4.801,715,3.309,716,7.046,717,4.801,718,5.617,719,4.801,720,4.801]],["title/classes/FindAllUserUseCase.html",[0,0.026,721,2.922]],["body/classes/FindAllUserUseCase.html",[0,0.03,2,1.368,3,0.133,4,0.133,5,0.12,9,0.275,11,2.32,12,2.25,14,0.926,16,1.597,17,0.593,19,0.353,20,0.011,25,0.709,26,0.666,27,0.605,29,0.709,31,0.635,35,0.133,40,1.836,65,0.008,66,0.008,101,2.292,103,1.736,113,1.547,128,2.582,132,1.688,263,2.735,329,4.619,337,4.211,389,3.506,392,3.716,396,2.922,452,3.866,456,1.725,458,2.866,712,3.376,715,3.376,721,4.405,722,5.245,723,4.3,724,4.899,725,4.899,726,7.115,727,4.3,728,6.62,729,4.899,730,4.899]],["title/classes/FindOneTransactionUseCase.html",[0,0.026,731,2.922]],["body/classes/FindOneTransactionUseCase.html",[0,0.028,2,1.259,3,0.122,4,0.122,5,0.11,9,0.253,11,2.478,12,2.404,14,0.876,16,1.511,17,0.561,19,0.436,20,0.011,25,0.876,26,0.823,27,0.747,29,0.653,31,0.651,35,0.122,40,1.737,52,1.921,65,0.007,66,0.007,73,0.929,101,2.199,103,1.643,113,1.484,128,2.478,132,1.597,222,2.636,275,3.238,329,4.432,337,4.074,389,3.364,391,3.322,392,2.98,396,2.765,397,4.269,398,3.336,413,3.66,414,3.106,504,1.587,554,3.719,555,3.106,556,3.322,561,2.925,710,5.443,712,3.106,715,3.106,731,4.168,732,5.443,733,4.507,734,4.507,735,6.827,736,4.507,737,3.956,738,4.507]],["title/classes/FindOneUserUseCase.html",[0,0.026,739,2.922]],["body/classes/FindOneUserUseCase.html",[0,0.028,2,1.259,3,0.122,4,0.122,5,0.11,9,0.253,11,2.478,12,2.404,14,0.876,16,1.511,17,0.561,19,0.436,20,0.011,25,0.876,26,0.823,27,0.747,29,0.653,31,0.651,35,0.122,40,1.737,52,1.921,65,0.007,66,0.007,73,0.929,101,2.199,103,1.643,113,1.484,128,2.478,132,1.597,222,2.636,263,2.516,275,3.238,329,4.432,337,4.074,389,3.364,392,2.98,396,2.765,398,3.336,451,3.106,452,3.741,456,2.818,458,2.636,504,1.587,554,3.719,555,3.106,561,2.925,712,3.106,715,3.106,722,5.033,732,5.443,737,3.956,739,4.168,740,4.507,741,4.507,742,5.993,743,4.507,744,4.507]],["title/classes/FindUserByKeyUseCase.html",[0,0.026,745,3.125]],["body/classes/FindUserByKeyUseCase.html",[0,0.027,2,1.229,3,0.119,4,0.119,5,0.107,9,0.247,11,2.448,12,2.375,14,0.862,16,1.487,17,0.552,19,0.429,20,0.011,25,0.862,26,0.81,27,0.735,29,0.637,31,0.645,35,0.119,40,1.71,52,1.876,65,0.007,66,0.007,73,1.059,101,2.173,103,1.617,113,1.467,128,2.448,132,1.572,222,2.574,263,2.457,275,3.199,329,4.379,332,3.033,334,4.227,337,4.035,389,3.324,392,2.933,396,2.721,398,3.304,452,3.705,456,2.919,458,2.574,555,3.033,561,2.857,712,3.033,715,3.033,722,4.972,727,3.863,742,5.921,745,4.388,746,3.863,747,4.401,748,5.953,749,4.401,750,4.401,751,4.401,752,4.401]],["title/interfaces/IApiService.html",[67,0.735,124,2.922]],["body/interfaces/IApiService.html",[3,0.16,4,0.16,5,0.144,9,0.331,14,1.04,17,0.546,19,0.518,20,0.011,25,1.04,26,0.801,27,0.727,29,0.853,31,0.525,35,0.16,65,0.009,66,0.009,67,1.021,69,1.953,73,1.054,103,1.95,114,6.302,118,6.302,120,4.341,121,5.169,122,5.169,123,4.695,124,4.948,753,5.169,754,5.889]],["title/interfaces/IAuth.html",[67,0.735,755,2.922]],["body/interfaces/IAuth.html",[3,0.165,4,0.165,5,0.149,9,0.343,10,2.23,19,0.529,20,0.01,35,0.165,65,0.009,66,0.009,67,1.057,69,2.024,73,1.153,442,4.184,504,2.873,755,5.055,756,5.356]],["title/interfaces/IAuthRepository.html",[67,0.735,757,3.38]],["body/interfaces/IAuthRepository.html",[3,0.143,4,0.143,5,0.129,9,0.297,14,0.972,17,0.622,19,0.484,20,0.011,25,0.972,26,0.913,27,0.828,29,0.972,31,0.658,35,0.143,65,0.008,66,0.008,67,0.915,69,1.752,73,1.113,103,2.107,189,5.889,191,5.036,216,3.429,229,4.211,233,3.586,234,4.117,456,1.859,458,3.09,757,5.349,758,4.636,759,6.473,760,6.709,761,5.282,762,4.636,763,5.282,764,4.636,765,4.636]],["title/interfaces/IAuthRequest.html",[67,0.735,766,3.125]],["body/interfaces/IAuthRequest.html",[3,0.163,4,0.163,5,0.146,7,4.462,9,0.337,10,2.206,19,0.432,20,0.011,31,0.647,35,0.163,65,0.009,66,0.009,67,1.039,69,1.988,456,2.856,755,5.59,766,5.349,767,5.261,768,5.754,769,4.418,770,5.994]],["title/interfaces/IBcryptService.html",[67,0.735,290,2.607]],["body/interfaces/IBcryptService.html",[3,0.151,4,0.151,5,0.136,9,0.313,14,1.006,17,0.644,19,0.501,20,0.01,25,1.006,26,0.945,27,0.857,29,1.006,35,0.151,65,0.008,66,0.008,67,0.967,69,1.85,73,1.181,103,2.149,283,6.095,284,6.095,285,6.095,286,6.637,288,6.095,290,4.27,771,4.896,772,5.578,773,5.578]],["title/interfaces/ICacheManager.html",[67,0.735,337,2.367]],["body/interfaces/ICacheManager.html",[3,0.151,4,0.151,5,0.136,9,0.312,14,1.004,17,0.643,19,0.544,20,0.01,25,1.093,26,0.943,27,0.855,29,1.004,35,0.151,65,0.008,66,0.008,67,0.963,69,1.844,73,1.128,103,2.146,120,4.098,325,6.083,326,6.083,330,6.083,332,4.775,333,6.083,334,4.416,337,3.869,774,4.88,775,5.56,776,5.56]],["title/interfaces/IExceptionService.html",[67,0.735,398,1.938]],["body/interfaces/IExceptionService.html",[3,0.124,4,0.124,5,0.112,9,0.257,14,0.885,17,0.71,19,0.552,20,0.011,25,1.108,26,1.041,27,0.945,29,1.108,30,4.116,35,0.166,52,1.952,59,2.257,65,0.007,66,0.007,67,1.06,69,1.519,73,0.832,371,1.714,398,2.795,437,2.557,529,4.768,682,5.367,683,5.367,684,5.367,685,5.367,686,5.367,687,4.875,688,5.961,690,6.717,691,4.875,693,4.875,695,4.875,697,4.875,777,3.651,778,4.58,779,4.58,780,4.58,781,4.58,782,4.58]],["title/interfaces/IFormatExceptionMessage.html",[67,0.735,688,2.922]],["body/interfaces/IFormatExceptionMessage.html",[3,0.148,4,0.148,5,0.133,9,0.306,10,2.081,19,0.54,20,0.01,27,0.969,30,3.983,35,0.186,52,3.345,59,3.867,65,0.008,66,0.008,67,1.186,69,1.808,73,1.122,371,2.801,398,2.493,437,4.382,687,4.347,688,5.771,691,4.347,693,4.347,695,4.347,697,4.347,777,4.347]],["title/interfaces/IInfo.html",[67,0.735,783,2.607]],["body/interfaces/IInfo.html",[3,0.146,4,0.065,5,0.059,9,0.135,10,1.16,19,0.389,20,0.01,35,0.129,59,1.186,65,0.005,66,0.005,67,1.084,69,0.798,73,0.976,227,1.142,340,1.562,371,3.389,374,1.809,387,2.13,407,1.408,408,1.48,428,1.48,488,1.408,550,1.744,783,3.316,784,1.48,785,3.716,786,4.31,787,3.077,788,1.659,789,1.659,790,1.659,791,1.659,792,1.659,793,1.659,794,1.659,795,1.659,796,1.659,797,1.659,798,1.659,799,1.659,800,1.659,801,1.659,802,1.659,803,1.659,804,1.659,805,1.659,806,1.562,807,1.659,808,1.659,809,1.659,810,1.659,811,1.659,812,1.659,813,1.659,814,1.659,815,1.659,816,1.659,817,1.659,818,1.659,819,1.659,820,1.659,821,1.659,822,1.659,823,1.659,824,1.659,825,1.659,826,1.659,827,1.659,828,1.659,829,1.659,830,1.659,831,1.659,832,1.659,833,1.562,834,1.659,835,1.659,836,1.659,837,1.659,838,1.659,839,1.659,840,1.659,841,1.659,842,1.659,843,1.659,844,1.659,845,1.659,846,1.659,847,1.659,848,1.659,849,1.659,850,1.659,851,1.659,852,1.659,853,1.659,854,1.659,855,1.659,856,1.659,857,1.659,858,1.659,859,1.659,860,1.562,861,1.659,862,1.659,863,1.659,864,1.659,865,1.659,866,1.659,867,1.659,868,1.659,869,1.659,870,1.659,871,1.659,872,1.659,873,1.659,874,1.659,875,1.659,876,1.659,877,1.659,878,1.659,879,1.659,880,1.659,881,1.659,882,1.659,883,1.659,884,1.659,885,1.659,886,1.659,887,1.659,888,1.659,889,1.659,890,1.659,891,1.659,892,1.659,893,1.659,894,1.659,895,1.659,896,1.659,897,1.659,898,1.659,899,1.659,900,1.659,901,1.659,902,1.659,903,1.659,904,1.659,905,1.659,906,1.659,907,1.659,908,1.659,909,1.659,910,1.659,911,1.659,912,1.659,913,1.659,914,1.659,915,1.659,916,1.659,917,1.659,918,1.659,919,1.659,920,1.659,921,1.659,922,1.659,923,1.659,924,1.659,925,1.659,926,1.659,927,1.659,928,1.659,929,1.659,930,1.659,931,1.659,932,1.659,933,1.659,934,1.659,935,1.659,936,1.659,937,1.659,938,1.659,939,1.659,940,1.659,941,1.659,942,1.659,943,1.659,944,1.659,945,1.659,946,1.659,947,1.659,948,1.659,949,1.659,950,1.659,951,1.659,952,1.659,953,1.659,954,1.659,955,1.659,956,2.346,957,1.659,958,2.914,959,3.716,960,2.477,961,2.629,962,2.629,963,1.48]],["title/interfaces/IJwtService.html",[67,0.735,964,2.752]],["body/interfaces/IJwtService.html",[3,0.149,4,0.149,5,0.134,9,0.308,14,0.995,17,0.638,19,0.496,20,0.011,25,0.995,26,0.935,27,0.848,29,0.995,35,0.186,65,0.008,66,0.008,67,1.191,69,1.82,73,1.153,103,1.866,221,4.045,442,2.813,504,1.932,964,4.462,965,4.375,966,6.033,967,6.033,968,5.48,969,5.487,970,5.48,971,5.421,972,5.487,973,4.375,974,4.817]],["title/interfaces/IJwtServicePayload.html",[67,0.735,971,2.922]],["body/interfaces/IJwtServicePayload.html",[3,0.153,4,0.153,5,0.138,9,0.317,10,2.129,19,0.548,20,0.011,27,0.864,35,0.19,65,0.009,66,0.009,67,1.213,69,1.875,73,1.183,103,1.535,442,4.075,504,2.799,964,3.67,965,4.507,968,4.507,970,4.507,971,5.242,974,6.978]],["title/interfaces/ILogger.html",[67,0.735,395,2.266]],["body/interfaces/ILogger.html",[3,0.117,4,0.117,5,0.105,9,0.243,14,0.852,17,0.696,19,0.541,20,0.01,25,1.087,26,1.021,27,0.926,29,1.087,30,4.071,35,0.117,52,3.646,59,2.897,65,0.007,66,0.007,67,0.749,69,1.434,73,1.21,395,3.142,529,2.806,975,3.794,976,5.161,977,3.817,978,5.161,979,5.161,980,5.161,981,4.322,982,5.531,983,5.161,984,5.866,985,4.322,986,5.161,987,4.322,988,5.161,989,4.322,990,5.161,991,4.322]],["title/interfaces/IQuery.html",[67,0.735,958,2.607]],["body/interfaces/IQuery.html",[3,0.146,4,0.065,5,0.059,9,0.135,10,1.159,19,0.424,20,0.01,35,0.128,59,1.184,65,0.005,66,0.005,67,1.083,69,0.797,73,1.041,227,1.14,340,1.56,371,3.389,374,1.807,387,3.28,407,1.406,408,1.478,428,1.478,488,1.406,550,1.742,783,2.912,784,1.478,785,1.656,786,3.263,787,3.074,788,1.656,789,1.656,790,1.656,791,1.656,792,1.656,793,1.656,794,1.656,795,1.656,796,1.656,797,1.656,798,1.656,799,1.656,800,1.656,801,1.656,802,1.656,803,1.656,804,1.656,805,1.656,806,1.56,807,1.656,808,1.656,809,1.656,810,1.656,811,1.656,812,1.656,813,1.656,814,1.656,815,1.656,816,1.656,817,1.656,818,1.656,819,1.656,820,1.656,821,1.656,822,1.656,823,1.656,824,1.656,825,1.656,826,1.656,827,1.656,828,1.656,829,1.656,830,1.656,831,1.656,832,1.656,833,1.56,834,1.656,835,1.656,836,1.656,837,1.656,838,1.656,839,1.656,840,1.656,841,1.656,842,1.656,843,1.656,844,1.656,845,1.656,846,1.656,847,1.656,848,1.656,849,1.656,850,1.656,851,1.656,852,1.656,853,1.656,854,1.656,855,1.656,856,1.656,857,1.656,858,1.656,859,1.656,860,1.56,861,1.656,862,1.656,863,1.656,864,1.656,865,1.656,866,1.656,867,1.656,868,1.656,869,1.656,870,1.656,871,1.656,872,1.656,873,1.656,874,1.656,875,1.656,876,1.656,877,1.656,878,1.656,879,1.656,880,1.656,881,1.656,882,1.656,883,1.656,884,1.656,885,1.656,886,1.656,887,1.656,888,1.656,889,1.656,890,1.656,891,1.656,892,1.656,893,1.656,894,1.656,895,1.656,896,1.656,897,1.656,898,1.656,899,1.656,900,1.656,901,1.656,902,1.656,903,1.656,904,1.656,905,1.656,906,1.656,907,1.656,908,1.656,909,1.656,910,1.656,911,1.656,912,1.656,913,1.656,914,1.656,915,1.656,916,1.656,917,1.656,918,1.656,919,1.656,920,1.656,921,1.656,922,1.656,923,1.656,924,1.656,925,1.656,926,1.656,927,1.656,928,1.656,929,1.656,930,1.656,931,1.656,932,1.656,933,1.656,934,1.656,935,1.656,936,1.656,937,1.656,938,1.656,939,1.656,940,1.656,941,1.656,942,1.656,943,1.656,944,1.656,945,1.656,946,1.656,947,1.656,948,1.656,949,1.656,950,1.656,951,1.656,952,1.656,953,1.656,954,1.656,955,1.656,956,2.343,957,1.656,958,3.313,959,3.713,960,2.474,961,2.626,962,2.626,963,1.478]],["title/interfaces/ISuccessTransaction.html",[67,0.735,407,2.48]],["body/interfaces/ISuccessTransaction.html",[3,0.173,4,0.061,5,0.055,9,0.126,10,1.096,19,0.493,20,0.01,27,0.929,35,0.123,59,1.104,65,0.004,66,0.004,67,1.05,69,0.743,73,1.024,227,1.063,340,3.361,371,3.384,374,2.691,387,2.012,407,2.108,408,1.378,428,1.378,488,1.311,550,1.647,783,3.489,784,1.378,785,1.544,786,4.176,787,3.683,788,1.544,789,1.544,790,1.544,791,1.544,792,1.544,793,1.544,794,1.544,795,1.544,796,1.544,797,1.544,798,1.544,799,1.544,800,1.544,801,1.544,802,1.544,803,1.544,804,1.544,805,1.544,806,1.455,807,1.544,808,1.544,809,1.544,810,1.544,811,1.544,812,1.544,813,1.544,814,1.544,815,1.544,816,1.544,817,1.544,818,1.544,819,1.544,820,1.544,821,1.544,822,1.544,823,1.544,824,1.544,825,1.544,826,1.544,827,1.544,828,1.544,829,1.544,830,1.544,831,1.544,832,1.544,833,1.455,834,1.544,835,1.544,836,1.544,837,1.544,838,1.544,839,1.544,840,1.544,841,1.544,842,1.544,843,1.544,844,1.544,845,1.544,846,1.544,847,1.544,848,1.544,849,1.544,850,1.544,851,1.544,852,1.544,853,1.544,854,1.544,855,1.544,856,1.544,857,1.544,858,1.544,859,1.544,860,1.455,861,1.544,862,1.544,863,1.544,864,1.544,865,1.544,866,1.544,867,1.544,868,1.544,869,1.544,870,1.544,871,1.544,872,1.544,873,1.544,874,1.544,875,1.544,876,1.544,877,1.544,878,1.544,879,1.544,880,1.544,881,1.544,882,1.544,883,1.544,884,1.544,885,1.544,886,1.544,887,1.544,888,1.544,889,1.544,890,1.544,891,1.544,892,1.544,893,1.544,894,1.544,895,1.544,896,1.544,897,1.544,898,1.544,899,1.544,900,1.544,901,1.544,902,1.544,903,1.544,904,1.544,905,1.544,906,1.544,907,1.544,908,1.544,909,1.544,910,1.544,911,1.544,912,1.544,913,1.544,914,1.544,915,1.544,916,1.544,917,1.544,918,1.544,919,1.544,920,1.544,921,1.544,922,1.544,923,1.544,924,1.544,925,1.544,926,1.544,927,1.544,928,1.544,929,1.544,930,1.544,931,1.544,932,1.544,933,1.544,934,1.544,935,1.544,936,1.544,937,1.544,938,1.544,939,1.544,940,1.544,941,1.544,942,1.544,943,1.544,944,1.544,945,1.544,946,1.544,947,1.544,948,1.544,949,1.544,950,1.544,951,1.544,952,1.544,953,1.544,954,1.544,955,1.544,956,2.216,957,1.544,958,3.489,959,4.39,960,3.683,961,3.91,962,3.91,963,1.378]],["title/interfaces/ITransactionError.html",[67,0.735,956,2.607]],["body/interfaces/ITransactionError.html",[3,0.177,4,0.065,5,0.058,9,0.134,10,1.151,19,0.488,20,0.01,35,0.128,59,1.174,65,0.005,66,0.005,67,1.079,69,0.79,73,1.039,227,1.13,340,1.547,371,3.388,374,1.795,387,2.113,407,1.394,408,1.465,428,1.465,488,1.394,550,1.73,783,2.895,784,1.465,785,1.642,786,3.245,787,3.057,788,1.642,789,1.642,790,1.642,791,1.642,792,1.642,793,1.642,794,1.642,795,1.642,796,1.642,797,1.642,798,1.642,799,1.642,800,1.642,801,1.642,802,1.642,803,1.642,804,1.642,805,1.642,806,1.547,807,1.642,808,1.642,809,1.642,810,1.642,811,1.642,812,1.642,813,1.642,814,1.642,815,1.642,816,1.642,817,1.642,818,1.642,819,1.642,820,1.642,821,1.642,822,1.642,823,1.642,824,1.642,825,1.642,826,1.642,827,1.642,828,1.642,829,1.642,830,1.642,831,1.642,832,1.642,833,1.547,834,1.642,835,1.642,836,1.642,837,1.642,838,1.642,839,1.642,840,1.642,841,1.642,842,1.642,843,1.642,844,1.642,845,1.642,846,1.642,847,1.642,848,1.642,849,1.642,850,1.642,851,1.642,852,1.642,853,1.642,854,1.642,855,1.642,856,1.642,857,1.642,858,1.642,859,1.642,860,1.547,861,1.642,862,1.642,863,1.642,864,1.642,865,1.642,866,1.642,867,1.642,868,1.642,869,1.642,870,1.642,871,1.642,872,1.642,873,1.642,874,1.642,875,1.642,876,1.642,877,1.642,878,1.642,879,1.642,880,1.642,881,1.642,882,1.642,883,1.642,884,1.642,885,1.642,886,1.642,887,1.642,888,1.642,889,1.642,890,1.642,891,1.642,892,1.642,893,1.642,894,1.642,895,1.642,896,1.642,897,1.642,898,1.642,899,1.642,900,1.642,901,1.642,902,1.642,903,1.642,904,1.642,905,1.642,906,1.642,907,1.642,908,1.642,909,1.642,910,1.642,911,1.642,912,1.642,913,1.642,914,1.642,915,1.642,916,1.642,917,1.642,918,1.642,919,1.642,920,1.642,921,1.642,922,1.642,923,1.642,924,1.642,925,1.642,926,1.642,927,1.642,928,1.642,929,1.642,930,1.642,931,1.642,932,1.642,933,1.642,934,1.642,935,1.642,936,1.642,937,1.642,938,1.642,939,1.642,940,1.642,941,1.642,942,1.642,943,1.642,944,1.642,945,1.642,946,1.642,947,1.642,948,1.642,949,1.642,950,1.642,951,1.642,952,1.642,953,1.642,954,1.642,955,1.642,956,2.895,957,3.696,958,2.895,959,3.696,960,2.457,961,2.608,962,2.608,963,1.465]],["title/interfaces/ITransactionOptions.html",[67,0.735,963,2.607]],["body/interfaces/ITransactionOptions.html",[3,0.146,4,0.065,5,0.059,9,0.135,10,1.159,19,0.424,20,0.01,35,0.128,59,1.184,65,0.005,66,0.005,67,1.083,69,0.797,73,1.041,227,1.14,340,1.56,371,3.389,374,1.807,387,3.28,407,1.406,408,1.478,428,1.478,488,1.406,550,1.742,783,2.912,784,1.478,785,1.656,786,3.263,787,3.074,788,1.656,789,1.656,790,1.656,791,1.656,792,1.656,793,1.656,794,1.656,795,1.656,796,1.656,797,1.656,798,1.656,799,1.656,800,1.656,801,1.656,802,1.656,803,1.656,804,1.656,805,1.656,806,1.56,807,1.656,808,1.656,809,1.656,810,1.656,811,1.656,812,1.656,813,1.656,814,1.656,815,1.656,816,1.656,817,1.656,818,1.656,819,1.656,820,1.656,821,1.656,822,1.656,823,1.656,824,1.656,825,1.656,826,1.656,827,1.656,828,1.656,829,1.656,830,1.656,831,1.656,832,1.656,833,1.56,834,1.656,835,1.656,836,1.656,837,1.656,838,1.656,839,1.656,840,1.656,841,1.656,842,1.656,843,1.656,844,1.656,845,1.656,846,1.656,847,1.656,848,1.656,849,1.656,850,1.656,851,1.656,852,1.656,853,1.656,854,1.656,855,1.656,856,1.656,857,1.656,858,1.656,859,1.656,860,1.56,861,1.656,862,1.656,863,1.656,864,1.656,865,1.656,866,1.656,867,1.656,868,1.656,869,1.656,870,1.656,871,1.656,872,1.656,873,1.656,874,1.656,875,1.656,876,1.656,877,1.656,878,1.656,879,1.656,880,1.656,881,1.656,882,1.656,883,1.656,884,1.656,885,1.656,886,1.656,887,1.656,888,1.656,889,1.656,890,1.656,891,1.656,892,1.656,893,1.656,894,1.656,895,1.656,896,1.656,897,1.656,898,1.656,899,1.656,900,1.656,901,1.656,902,1.656,903,1.656,904,1.656,905,1.656,906,1.656,907,1.656,908,1.656,909,1.656,910,1.656,911,1.656,912,1.656,913,1.656,914,1.656,915,1.656,916,1.656,917,1.656,918,1.656,919,1.656,920,1.656,921,1.656,922,1.656,923,1.656,924,1.656,925,1.656,926,1.656,927,1.656,928,1.656,929,1.656,930,1.656,931,1.656,932,1.656,933,1.656,934,1.656,935,1.656,936,1.656,937,1.656,938,1.656,939,1.656,940,1.656,941,1.656,942,1.656,943,1.656,944,1.656,945,1.656,946,1.656,947,1.656,948,1.656,949,1.656,950,1.656,951,1.656,952,1.656,953,1.656,954,1.656,955,1.656,956,2.343,957,1.656,958,2.912,959,3.713,960,2.474,961,2.626,962,2.626,963,2.343]],["title/interfaces/ITransactionRepository.html",[67,0.735,397,2.48]],["body/interfaces/ITransactionRepository.html",[3,0.133,4,0.133,5,0.12,9,0.275,14,0.926,17,0.7,19,0.544,20,0.011,25,1.092,26,1.026,27,0.931,29,1.092,31,0.57,35,0.133,65,0.008,66,0.008,67,0.849,69,1.625,73,1.14,103,2.25,361,4.896,369,2.735,397,3.739,413,2.922,414,3.376,493,4.149,494,3.739,495,4.149,496,4.149,500,5.611,502,4.149,504,2.25,505,5.611,507,4.149,992,4.3,993,4.899,994,4.899,995,4.899,996,4.899,997,4.899]],["title/interfaces/IUserRepository.html",[67,0.735,452,2.174]],["body/interfaces/IUserRepository.html",[3,0.109,4,0.109,5,0.098,9,0.226,14,0.812,17,0.721,19,0.546,20,0.011,25,1.098,26,1.031,27,0.936,29,1.126,31,0.5,35,0.109,65,0.007,66,0.007,67,0.699,69,1.338,73,1.188,103,2.288,332,3.864,334,4.433,440,4.284,448,4.284,452,2.874,456,2.577,457,3.215,458,2.359,493,3.64,494,3.28,495,4.522,496,3.64,502,3.64,504,2.668,507,3.64,521,4.922,522,4.922,523,4.47,527,4.922,529,2.618,530,4.47,534,4.922,537,4.47,998,3.54,999,4.033,1000,4.033,1001,4.033,1002,4.033,1003,4.033,1004,4.033,1005,4.033]],["title/interfaces/JWTConfig.html",[67,0.735,604,3.125]],["body/interfaces/JWTConfig.html",[3,0.164,4,0.164,5,0.148,9,0.34,14,1.058,17,0.678,20,0.01,29,1.058,35,0.164,65,0.009,66,0.009,67,1.05,69,2.009,73,1.108,581,7.146,582,7.146,604,5.384,1006,5.318,1007,6.058,1008,6.058]],["title/injectables/JwtAuthGuard.html",[110,1.151,152,3.125]],["body/injectables/JwtAuthGuard.html",[0,0.028,3,0.125,4,0.125,5,0.112,7,2.824,9,0.258,14,0.887,16,1.147,17,0.639,19,0.442,20,0.011,25,0.998,26,0.938,27,0.851,29,0.887,31,0.656,33,0.843,34,2.981,35,0.125,36,3.165,38,1.832,40,1.319,65,0.007,66,0.007,110,1.663,111,1.958,127,2.981,132,1.82,146,2.824,152,4.515,205,4.031,456,2.697,550,2.1,674,3.661,702,5.377,982,3.385,1009,6.454,1010,3.661,1011,6.125,1012,6.125,1013,4.592,1014,6.916,1015,4.592,1016,6.125,1017,6.454,1018,4.592,1019,6.125,1020,4.592,1021,6.892,1022,3.661,1023,3.661,1024,4.592,1025,5.377,1026,4.592,1027,4.592,1028,4.592,1029,4.592]],["title/modules/JwtModule.html",[78,1.253,166,2.752]],["body/modules/JwtModule.html",[0,0.032,3,0.141,4,0.141,5,0.127,20,0.011,31,0.653,33,0.955,35,0.141,65,0.008,66,0.008,78,1.963,80,2.074,81,2.832,87,3.037,88,2.378,89,2.378,91,3.273,92,3.273,106,3.406,166,5.543,268,5.61,612,5.493,1030,4.565,1031,4.565,1032,4.565,1033,4.565,1034,5.2,1035,4.146,1036,5.2,1037,5.2,1038,5.2,1039,4.565,1040,5.2,1041,5.2,1042,5.2]],["title/injectables/JwtStrategy.html",[110,1.151,140,2.922]],["body/injectables/JwtStrategy.html",[0,0.032,3,0.139,4,0.139,5,0.125,7,3.159,9,0.288,14,0.955,16,1.818,17,0.612,19,0.37,20,0.011,25,0.744,26,0.699,27,0.634,29,0.744,31,0.685,33,0.943,35,0.139,36,3.54,65,0.008,66,0.008,101,2.345,110,1.79,111,2.19,132,1.357,140,4.542,146,3.159,197,4.096,227,2.436,442,2.633,504,1.809,575,4.542,612,3.54,755,5.292,973,4.096,1039,4.509,1043,4.509,1044,5.137,1045,6.591,1046,5.137,1047,4.509,1048,5.137,1049,4.509,1050,4.096,1051,5.137,1052,4.509,1053,5.137,1054,5.137,1055,5.137,1056,5.137,1057,5.137,1058,5.137]],["title/injectables/JwtTokenService.html",[110,1.151,268,2.752]],["body/injectables/JwtTokenService.html",[0,0.03,3,0.133,4,0.133,5,0.12,9,0.275,12,1.725,14,0.926,16,1.224,17,0.66,19,0.513,20,0.011,25,1.03,26,0.968,27,0.878,29,0.926,31,0.635,33,0.899,35,0.133,65,0.008,66,0.008,73,1.064,101,2.292,103,1.736,110,1.736,111,2.088,126,2.511,127,3.18,128,1.778,132,1.688,221,3.611,268,4.149,274,6.396,964,4.149,966,5.611,967,5.611,968,5.096,970,5.096,971,5.197,973,3.906,1035,3.906,1059,4.3,1060,4.899,1061,4.899,1062,4.899,1063,4.899,1064,4.899,1065,4.899,1066,4.899]],["title/injectables/LocalAuthGuard.html",[110,1.151,1067,3.38]],["body/injectables/LocalAuthGuard.html",[0,0.039,3,0.17,4,0.17,5,0.153,7,3.864,20,0.011,31,0.666,33,1.154,35,0.17,65,0.009,66,0.009,110,2.027,111,2.679,146,3.864,1010,5.01,1022,5.01,1067,5.952,1068,5.516,1069,6.284]],["title/injectables/LocalStrategy.html",[110,1.151,141,2.922]],["body/injectables/LocalStrategy.html",[0,0.024,3,0.107,4,0.107,5,0.096,7,2.422,9,0.221,11,2.31,12,2.241,13,3.136,14,0.799,16,1.378,17,0.512,19,0.398,20,0.011,25,0.799,26,0.75,27,0.681,29,0.57,31,0.703,33,0.723,35,0.107,36,2.715,40,1.132,52,2.351,65,0.007,66,0.007,73,1.023,101,2.05,103,1.498,108,2.105,110,1.498,111,1.679,113,1.384,128,1.43,132,1.04,141,4.386,146,2.422,202,2.557,203,2.422,204,3.14,208,2.422,209,3.723,210,2.904,211,2.715,212,3.685,213,2.557,214,2.422,225,3.458,233,4.211,234,4.471,256,3.85,257,2.904,259,3.85,260,2.904,275,3.018,392,1.941,456,2.241,550,1.801,575,3.801,661,2.904,699,3.458,1047,3.458,1049,3.458,1050,3.14,1052,3.458,1070,3.458,1071,3.939,1072,3.939,1073,5.515,1074,5.515,1075,3.939,1076,3.939,1077,3.939,1078,3.939,1079,5.515,1080,5.515,1081,3.939,1082,2.904,1083,3.939,1084,4.841]],["title/entities/Log.html",[977,2.752,1085,2.607]],["body/entities/Log.html",[0,0.021,3,0.094,4,0.094,5,0.084,9,0.194,10,1.527,17,0.756,19,0.588,20,0.011,31,0.58,35,0.094,65,0.006,66,0.006,73,1.17,113,1.917,151,4.719,192,3.597,198,3.305,371,1.88,437,3.305,504,2.084,511,2.125,977,3.261,1085,3.089,1086,2.243,1087,3.033,1088,5.195,1089,5.195,1090,4.078,1091,5.195,1092,5.195,1093,4.719,1094,5.195,1095,5.195,1096,5.195,1097,5.872,1098,3.456,1099,4.719,1100,3.456,1101,3.456,1102,3.456,1103,3.456,1104,4.005,1105,3.456,1106,3.456,1107,3.456,1108,3.456,1109,3.456,1110,3.456,1111,4.363,1112,3.456,1113,3.456,1114,3.456,1115,3.033,1116,3.033,1117,2.755]],["title/injectables/LoggerMiddleware.html",[110,1.151,1118,3.38]],["body/injectables/LoggerMiddleware.html",[0,0.026,3,0.113,4,0.113,5,0.102,9,0.234,14,0.831,17,0.387,19,0.301,20,0.011,25,0.604,26,0.568,27,0.515,29,0.604,30,2.056,31,0.631,33,0.766,35,0.113,38,2.618,40,2.296,43,4.915,65,0.007,66,0.007,101,1.344,110,1.559,111,1.779,126,2.139,128,1.514,151,3.327,198,3.205,374,1.979,437,3.205,511,2.566,768,5.645,769,3.076,977,2.709,1088,5.039,1089,5.039,1090,3.956,1091,5.039,1092,5.039,1093,4.577,1094,5.039,1095,3.663,1096,5.039,1118,4.577,1119,3.663,1120,5.039,1121,5.74,1122,6.505,1123,7.068,1124,4.173,1125,5.74,1126,4.173,1127,4.173,1128,5.74,1129,4.173,1130,4.173,1131,4.173,1132,4.173,1133,4.173,1134,3.663,1135,4.173,1136,4.173,1137,4.173,1138,4.173,1139,4.173,1140,4.173,1141,4.173,1142,4.173,1143,4.173,1144,4.173,1145,4.173,1146,4.173,1147,4.173,1148,4.173,1149,4.173,1150,4.173,1151,4.173]],["title/modules/LoggerModule.html",[78,1.253,139,2.48]],["body/modules/LoggerModule.html",[0,0.035,3,0.154,4,0.154,5,0.138,20,0.011,31,0.626,33,1.041,35,0.154,65,0.009,66,0.009,78,2.073,80,2.262,81,2.991,87,3.208,88,2.593,89,2.593,91,3.457,92,3.457,139,4.94,259,4.881,1152,4.979,1153,4.979,1154,4.979,1155,5.672,1156,5.672]],["title/injectables/LoggerService.html",[110,1.151,259,2.367]],["body/injectables/LoggerService.html",[0,0.022,3,0.095,4,0.095,5,0.086,7,3.126,9,0.197,12,1.237,13,2.943,14,0.736,16,0.878,17,0.672,19,0.522,20,0.011,25,1.049,26,0.985,27,0.894,29,1.006,30,3.423,31,0.533,33,0.645,35,0.095,36,2.421,52,3.626,59,2.505,65,0.006,66,0.006,73,1.192,86,3.226,96,2.243,98,2.16,102,2.839,110,1.381,111,1.498,113,1.804,126,1.801,127,2.281,259,2.839,395,2.717,529,2.281,659,3.503,976,4.462,977,3.3,978,4.462,979,4.462,980,4.462,982,5.834,983,4.462,984,5.747,986,4.462,988,4.462,990,4.462,1157,3.084,1158,3.513,1159,3.513,1160,3.513,1161,3.513,1162,3.513,1163,3.513,1164,3.513,1165,3.513,1166,5.084,1167,3.513,1168,3.513,1169,3.513,1170,3.513,1171,3.513]],["title/classes/LoginUseCase.html",[0,0.026,202,2.752]],["body/classes/LoginUseCase.html",[0,0.022,2,1.011,3,0.098,4,0.098,5,0.088,9,0.203,11,2.798,12,2.474,13,2.559,14,0.752,16,1.297,17,0.564,19,0.438,20,0.011,25,0.88,26,0.826,27,0.75,29,0.752,31,0.688,35,0.098,38,1.443,40,1.745,52,2.214,65,0.006,66,0.006,73,0.995,101,2.357,103,1.41,113,1.321,128,2.205,132,1.371,191,4.309,197,2.885,202,3.371,216,3.371,222,3.038,229,2.885,233,2.775,234,3.392,243,4.558,263,2.02,265,3.246,274,4.843,275,2.881,276,5.332,290,4.082,389,3.27,392,2.993,394,2.349,395,3.547,398,3.035,415,2.349,442,1.855,452,3.403,456,2.653,458,2.117,459,2.885,467,3.828,494,2.117,504,1.274,555,2.494,561,3.371,759,4.558,762,4.558,764,3.176,765,3.176,964,4.309,1172,3.176,1173,3.618,1174,5.193,1175,3.618,1176,3.618,1177,3.618,1178,5.193,1179,3.618,1180,3.618,1181,3.618,1182,3.618,1183,3.618,1184,3.618,1185,3.618,1186,3.618,1187,3.618,1188,3.618,1189,3.618]],["title/classes/NestResponse.html",[0,0.026,1190,2.922]],["body/classes/NestResponse.html",[0,0.033,2,1.508,3,0.146,4,0.146,5,0.132,9,0.303,10,2.069,16,1.349,17,0.726,19,0.564,20,0.011,25,0.782,26,0.735,27,0.667,35,0.146,43,4.184,46,5.134,65,0.008,66,0.008,113,1.854,198,4.16,241,3.32,371,2.547,1090,5.134,1190,5.556,1191,4.74,1192,6.804,1193,6.804,1194,6.235,1195,5.4,1196,5.4]],["title/classes/NestResponseBuilder.html",[0,0.026,1197,3.38]],["body/classes/NestResponseBuilder.html",[0,0.026,2,1.165,3,0.113,4,0.113,5,0.102,9,0.234,10,1.745,11,2.382,14,0.831,17,0.688,19,0.51,20,0.011,25,0.95,26,0.893,27,0.81,29,1.024,31,0.512,32,2.566,33,0.766,35,0.113,38,1.664,43,4.035,46,4.871,65,0.007,66,0.007,113,1.817,132,1.867,198,3.947,334,2.441,371,2.456,1090,4.871,1190,5.278,1194,6.106,1197,6.372,1198,3.663,1199,6.204,1200,5.74,1201,5.74,1202,5.74,1203,3.663,1204,5.74,1205,4.173,1206,4.173,1207,5.74,1208,4.173,1209,5.74,1210,4.173,1211,5.74,1212,4.173,1213,4.173,1214,4.173,1215,4.173,1216,4.173]],["title/interfaces/RedisConfig.html",[67,0.735,606,3.125]],["body/interfaces/RedisConfig.html",[3,0.164,4,0.164,5,0.148,9,0.34,14,1.058,17,0.678,20,0.01,29,1.058,35,0.164,65,0.009,66,0.009,67,1.05,69,2.009,73,0.994,371,2.734,583,7.146,584,7.146,606,5.384,1217,5.318,1218,6.058,1219,6.058]],["title/modules/RepositoriesModule.html",[78,1.253,249,2.607]],["body/modules/RepositoriesModule.html",[0,0.03,3,0.13,4,0.13,5,0.117,20,0.011,31,0.725,33,0.881,35,0.13,65,0.008,66,0.008,78,1.864,80,1.915,81,2.689,87,2.884,88,2.195,89,2.195,91,3.108,92,3.108,106,3.234,249,5.254,262,5.254,413,2.884,456,1.69,491,5.546,510,3.309,512,4.214,539,3.828,1220,4.214,1221,4.214,1222,4.214,1223,4.214,1224,5.498,1225,4.801,1226,4.214,1227,4.801,1228,4.801,1229,4.801,1230,4.801]],["title/classes/SetupContainer.html",[0,0.026,1231,3.38]],["body/classes/SetupContainer.html",[0,0.042,2,1.523,3,0.148,4,0.148,5,0.133,9,0.306,14,0.991,17,0.506,19,0.583,20,0.011,25,0.79,26,0.742,27,0.673,29,0.79,30,2.686,31,0.611,33,1.001,35,0.148,65,0.008,66,0.008,133,5.157,149,3.999,254,5.785,465,3.353,550,2.493,657,4.347,1231,5.458,1232,4.786,1233,4.717,1234,5.408,1235,5.452,1236,5.452,1237,5.452,1238,5.452]],["title/classes/SetupDocumentBuilder.html",[0,0.026,1239,3.38]],["body/classes/SetupDocumentBuilder.html",[0,0.031,2,1.384,3,0.134,4,0.134,5,0.121,9,0.278,14,0.933,17,0.46,19,0.357,20,0.011,25,0.718,26,0.674,27,0.612,29,0.718,30,2.442,31,0.575,33,0.91,35,0.134,38,1.977,40,1.85,65,0.008,66,0.008,80,1.977,102,3.596,149,3.824,201,3.048,246,4.35,399,3.951,413,2.266,456,1.745,465,3.961,626,5.705,662,5.135,1199,4.35,1233,4.438,1234,5.22,1239,5.135,1240,4.35,1241,4.956,1242,6.441,1243,4.956,1244,4.956,1245,4.956,1246,4.956,1247,4.956,1248,4.956,1249,4.956,1250,4.956,1251,4.956,1252,4.956,1253,4.956,1254,4.956,1255,4.956,1256,4.956,1257,4.956,1258,4.956,1259,4.956,1260,4.956,1261,4.956,1262,4.956,1263,4.956,1264,4.956,1265,4.956,1266,4.956,1267,4.956,1268,4.956,1269,6.441,1270,4.956,1271,4.956]],["title/classes/SetupGlobalFilters.html",[0,0.026,1272,3.38]],["body/classes/SetupGlobalFilters.html",[0,0.036,1,5.237,2,1.617,3,0.157,4,0.157,5,0.141,9,0.325,14,1.029,17,0.537,19,0.417,20,0.011,25,0.838,26,0.787,27,0.715,29,0.838,30,2.852,31,0.634,33,1.063,35,0.157,65,0.009,66,0.009,149,4.108,465,3.559,1233,4.896,1234,5.524,1272,5.664,1273,5.081,1274,5.788,1275,5.788,1276,5.788]],["title/classes/SetupGlobalInterceptors.html",[0,0.026,1277,3.38]],["body/classes/SetupGlobalInterceptors.html",[0,0.035,2,1.6,3,0.155,4,0.155,5,0.14,9,0.322,14,1.022,17,0.532,19,0.413,20,0.011,25,0.83,26,0.779,27,0.707,29,0.83,30,2.823,31,0.63,33,1.052,34,3.719,35,0.155,38,2.285,65,0.009,66,0.009,143,5.029,149,4.089,465,3.523,1014,5.029,1233,4.865,1234,5.504,1277,5.629,1278,5.029,1279,5.729,1280,5.729,1281,5.729]],["title/classes/SetupGlobalPipes.html",[0,0.026,1282,3.38]],["body/classes/SetupGlobalPipes.html",[0,0.036,2,1.622,3,0.157,4,0.157,5,0.142,9,0.326,14,1.031,17,0.539,19,0.419,20,0.011,25,0.841,26,0.79,27,0.717,29,0.841,30,2.862,31,0.518,33,1.066,35,0.157,65,0.009,66,0.009,149,4.114,465,3.572,550,2.655,1233,4.906,1234,5.53,1282,5.676,1283,5.098,1284,5.808,1285,7.119,1286,5.808,1287,5.808]],["title/entities/Transaction.html",[413,1.938,1085,2.607]],["body/entities/Transaction.html",[0,0.023,3,0.102,4,0.102,5,0.091,9,0.21,10,1.619,17,0.734,19,0.571,20,0.011,26,0.51,31,0.635,35,0.102,65,0.007,66,0.007,73,1.058,113,1.897,192,3.493,363,4.268,364,4.268,365,4.268,366,4.268,367,4.268,368,4.268,369,3.977,371,2.771,374,2.525,413,2.434,456,2.787,504,2.18,511,2.304,1085,3.274,1086,2.432,1097,5.247,1104,4.245,1111,5.612,1115,3.289,1116,3.289,1117,2.987,1288,3.289,1289,3.747,1290,4.938,1291,3.747,1292,3.747,1293,3.747,1294,3.747,1295,3.747,1296,3.747,1297,3.747,1298,5.324,1299,4.673,1300,3.747,1301,3.747,1302,3.747,1303,3.747,1304,5.324,1305,5.324,1306,3.747,1307,3.289]],["title/controllers/TransactionController.html",[183,2.607,352,3.125]],["body/controllers/TransactionController.html",[0,0.018,3,0.08,4,0.08,5,0.072,9,0.165,11,2.178,12,2.113,14,0.645,16,0.734,17,0.557,19,0.433,20,0.011,25,0.869,26,0.816,27,0.741,29,0.869,31,0.712,33,0.539,35,0.08,38,2.394,40,1.949,65,0.005,66,0.005,73,0.959,101,2.516,103,1.972,108,1.57,113,1.735,128,2.178,132,1.585,146,1.807,183,1.807,185,2.025,187,2.343,192,2.648,198,2.487,200,2.343,201,1.807,203,1.807,206,2.025,207,2.343,209,3.146,211,2.025,212,3.446,213,1.908,214,1.807,348,1.908,352,3.283,353,2.343,369,3.003,386,4.444,387,2.487,388,3.069,402,3.551,413,2.459,422,2.579,493,3.491,494,2.605,495,3.491,496,2.891,502,1.908,504,2.389,507,1.908,551,3.069,554,1.807,709,3.069,718,3.551,731,3.069,766,5.197,768,4.423,1022,2.343,1082,3.964,1308,2.579,1309,2.939,1310,6.001,1311,2.939,1312,2.939,1313,2.579,1314,2.939,1315,2.939,1316,2.939,1317,2.939,1318,5.378,1319,2.939,1320,2.579,1321,2.343,1322,5.378,1323,2.939,1324,2.939,1325,2.939,1326,2.579,1327,2.939,1328,2.166,1329,2.579,1330,2.166,1331,2.579,1332,2.939,1333,2.166,1334,2.939,1335,2.939,1336,2.939,1337,2.939,1338,2.939,1339,2.939,1340,2.939,1341,4.454,1342,4.454,1343,2.939,1344,2.939,1345,4.454,1346,2.579,1347,2.939,1348,2.939,1349,4.454,1350,2.939,1351,2.939,1352,2.579,1353,2.579,1354,2.579,1355,2.939]],["title/classes/TransactionOptionsDTO.html",[0,0.026,386,2.922]],["body/classes/TransactionOptionsDTO.html",[0,0.036,2,1.192,3,0.116,4,0.116,5,0.104,9,0.24,10,1.772,16,1.066,17,0.693,19,0.539,20,0.011,25,0.618,26,0.581,27,0.527,31,0.637,35,0.158,65,0.007,66,0.007,73,1.121,113,1.885,192,3.148,235,5.293,237,4.894,238,4.7,241,3.585,361,3.784,362,3.402,363,2.941,364,2.941,365,2.941,366,2.941,367,2.941,368,2.941,369,3.984,371,2.796,372,5.684,374,2.024,375,4.297,381,4.31,382,3.146,383,3.746,384,3.746,385,3.146,386,5.148,387,3.707,1356,5.829,1357,4.267,1358,4.267,1359,4.267]],["title/classes/TransactionPresenter.html",[0,0.026,1333,3.125]],["body/classes/TransactionPresenter.html",[0,0.025,2,1.151,3,0.112,4,0.112,5,0.101,9,0.231,10,1.731,16,1.03,17,0.75,19,0.583,20,0.011,25,0.597,26,0.561,27,0.509,31,0.368,35,0.112,65,0.007,66,0.007,73,1.084,113,1.902,192,3.516,201,2.535,241,2.535,363,4.493,364,4.493,365,4.493,366,4.493,367,4.493,368,4.493,369,3.64,371,2.856,374,2.7,413,2.602,504,2.295,1333,5.439,1360,3.618,1361,5.692,1362,5.692,1363,6.836,1364,4.122,1365,4.122,1366,4.122,1367,4.122,1368,4.122,1369,4.122,1370,4.122]],["title/modules/TransactionUsecasesProxyModule.html",[78,1.253,348,2.752]],["body/modules/TransactionUsecasesProxyModule.html",[0,0.018,3,0.08,4,0.08,5,0.072,13,2.965,14,0.428,17,0.274,20,0.011,29,0.428,31,0.719,33,0.542,35,0.08,38,2.902,65,0.005,66,0.005,78,1.594,79,4.415,80,1.178,81,1.906,85,3.502,86,2.658,87,2.044,88,1.351,89,1.351,91,1.455,92,1.455,95,3.634,96,2.381,97,1.918,98,1.816,102,2.497,106,2.292,108,3.216,109,4.146,132,0.78,138,3.978,139,3.978,149,3.634,177,4.435,203,1.816,209,2.616,212,3.454,214,1.816,249,4.182,250,3.081,251,2.355,252,4.302,254,3.977,255,2.355,256,3.944,257,2.177,258,2.355,259,3.609,260,2.177,261,2.355,270,2.177,275,3.225,297,4.415,301,4.579,348,5.309,353,3.565,388,3.081,396,3.229,399,3.565,411,2.593,491,4.834,551,3.081,556,2.177,709,2.036,731,3.081,1371,2.954,1372,2.954,1373,2.954,1374,2.954,1375,2.954,1376,2.954,1377,2.593,1378,2.593,1379,2.954,1380,2.954,1381,2.954,1382,2.954,1383,2.954,1384,2.954,1385,2.954,1386,2.954,1387,4.471,1388,2.954,1389,4.471,1390,4.471,1391,4.471]],["title/injectables/TransformResponseInterceptor.html",[110,1.151,155,3.125]],["body/injectables/TransformResponseInterceptor.html",[0,0.025,3,0.111,4,0.111,5,0.1,9,0.23,10,1.722,11,2.357,14,0.82,16,1.022,17,0.603,19,0.468,20,0.011,25,0.82,26,0.77,27,0.699,29,0.593,31,0.625,33,0.751,34,2.656,35,0.111,40,2.114,43,3.994,46,3.903,65,0.007,66,0.007,103,1.538,110,1.538,111,1.744,126,2.098,132,1.715,155,4.175,198,3.162,769,3.016,982,4.175,1017,6.153,1090,2.82,1093,3.262,1120,4.971,1122,5.701,1190,4.476,1392,3.592,1393,6.495,1394,6.495,1395,5.663,1396,7.009,1397,5.663,1398,4.092,1399,4.092,1400,7.009,1401,4.092,1402,6.495,1403,6.495,1404,5.663,1405,4.092,1406,3.592,1407,4.092,1408,4.092,1409,4.092,1410,3.592,1411,4.092,1412,4.092,1413,4.092,1414,4.092,1415,4.092,1416,4.092,1417,4.092,1418,4.092,1419,5.663,1420,4.092,1421,4.092,1422,4.092,1423,4.092,1424,5.663,1425,4.092,1426,4.092,1427,4.092,1428,4.092]],["title/modules/TypeOrmConfigModule.html",[78,1.253,1224,2.922]],["body/modules/TypeOrmConfigModule.html",[0,0.03,3,0.133,4,0.133,5,0.12,19,0.354,20,0.011,22,3.622,31,0.673,33,0.902,35,0.174,40,1.411,65,0.008,66,0.008,78,1.892,80,1.96,86,3.51,95,3.422,96,2.826,97,3.189,98,3.021,102,2.743,106,3.283,108,2.626,109,3.386,227,2.33,234,2.743,312,4.413,317,3.917,442,2.519,510,3.386,615,3.917,659,3.386,660,4.721,1086,3.189,1224,4.413,1226,4.312,1429,3.917,1430,6.254,1431,5.106,1432,4.312,1433,4.312,1434,4.312,1435,4.312,1436,4.312,1437,4.312,1438,4.312,1439,4.312,1440,4.312,1441,5.621,1442,6.254,1443,4.312,1444,4.312,1445,4.312,1446,4.913]],["title/classes/UpdateUserDTO.html",[0,0.026,448,2.607]],["body/classes/UpdateUserDTO.html",[0,0.04,2,1.368,3,0.133,4,0.133,5,0.12,9,0.275,10,1.943,17,0.66,19,0.513,20,0.011,27,0.99,31,0.635,35,0.173,65,0.008,66,0.008,73,1.14,113,1.863,192,3.139,233,4.03,234,4.211,238,4.162,381,5.304,382,3.611,385,3.611,440,3.012,441,3.906,442,3.866,443,4.712,447,4.3,448,3.931,1447,4.899,1448,4.899,1449,4.899]],["title/classes/UpdateUserUseCase.html",[0,0.026,1450,2.922]],["body/classes/UpdateUserUseCase.html",[0,0.026,2,1.154,3,0.112,4,0.112,5,0.101,9,0.232,11,2.555,12,2.478,13,2.809,14,0.826,16,1.424,17,0.529,19,0.411,20,0.011,25,0.826,26,0.776,27,0.704,29,0.598,31,0.698,32,2.541,33,0.758,35,0.112,40,1.187,52,1.761,65,0.007,66,0.007,73,0.888,101,2.103,103,1.548,113,1.419,128,2.369,132,1.091,233,2.208,263,2.307,265,3.489,275,3.096,290,4.328,389,3.216,392,3.216,394,2.682,395,3.762,396,2.985,398,3.218,406,3.294,415,2.682,424,2.847,437,2.307,448,4.328,451,2.847,452,3.608,453,3.627,455,3.627,456,2.688,457,3.294,458,2.417,459,3.294,460,3.627,461,3.627,462,3.627,463,3.627,464,3.627,465,2.541,466,3.627,467,4.203,468,3.627,504,2.298,554,3.506,1450,3.929,1451,5.73,1452,5.005,1453,4.132,1454,4.132,1455,3.627]],["title/classes/UseCaseProxy.html",[0,0.026,212,2.266]],["body/classes/UseCaseProxy.html",[0,0.035,2,1.579,3,0.153,4,0.153,5,0.138,9,0.317,12,1.99,14,1.014,16,1.412,17,0.65,19,0.408,20,0.011,25,0.819,26,0.769,27,0.698,29,0.819,35,0.153,65,0.009,66,0.009,113,1.654,120,6.023,127,3.67,132,1.493,212,3.742,213,4.938,250,5.242,270,5.161,1082,5.86,1456,4.962,1457,5.653,1458,5.653,1459,5.653,1460,5.653]],["title/entities/User.html",[456,1.493,1085,2.607]],["body/entities/User.html",[0,0.025,3,0.11,4,0.11,5,0.099,9,0.229,10,1.716,17,0.723,19,0.562,20,0.011,27,0.697,31,0.578,35,0.11,65,0.007,66,0.007,73,1.081,113,1.886,192,3.439,233,3.462,234,3.617,374,3.318,413,3.475,442,3.321,456,1.987,504,2.281,511,2.504,550,3.198,718,5.165,1085,3.471,1086,2.643,1097,5.371,1104,4.5,1117,3.246,1299,4.954,1307,6.14,1461,3.574,1462,5.686,1463,5.686,1464,5.686,1465,4.072,1466,4.072,1467,4.072,1468,4.072,1469,4.072,1470,5.644,1471,4.954,1472,4.072,1473,5.686,1474,4.072,1475,4.072,1476,5.644,1477,4.072,1478,4.072]],["title/controllers/UserController.html",[183,2.607,351,3.125]],["body/controllers/UserController.html",[0,0.018,3,0.079,4,0.079,5,0.071,9,0.163,11,2.328,12,2.258,14,0.639,16,0.725,17,0.595,19,0.43,20,0.011,25,0.864,26,0.811,27,0.736,29,0.929,31,0.703,33,0.533,35,0.079,38,2.379,40,1.713,65,0.005,66,0.005,73,1.008,101,2.588,103,2.052,108,1.552,113,1.773,128,2.328,132,1.694,183,1.785,185,2.001,187,2.315,192,2.83,194,2.548,198,2.464,200,2.315,201,1.785,203,1.785,206,2.001,207,2.315,209,3.123,211,2.001,212,3.61,213,1.885,214,1.785,227,1.377,349,1.885,351,3.253,354,2.315,440,3.667,448,3.667,449,3.041,454,2.548,456,2.547,469,2.548,493,2.865,494,2.582,495,3.871,496,2.865,502,1.885,504,2.661,507,1.885,523,4.256,530,2.315,537,2.315,554,1.785,563,3.041,721,3.041,728,3.874,739,3.041,1082,3.253,1313,2.548,1320,2.548,1321,2.315,1326,2.548,1328,2.14,1329,2.548,1330,2.14,1331,2.548,1346,2.548,1352,2.548,1353,2.548,1354,2.548,1450,3.041,1452,2.548,1479,2.548,1480,2.903,1481,2.903,1482,2.903,1483,5.964,1484,2.903,1485,2.903,1486,4.413,1487,2.903,1488,2.548,1489,2.315,1490,2.903,1491,2.903,1492,2.903,1493,2.14,1494,2.903,1495,2.903,1496,2.903,1497,2.903,1498,2.903,1499,2.903,1500,2.903,1501,2.903,1502,2.903,1503,2.903,1504,4.413,1505,2.903,1506,2.903,1507,2.903,1508,2.903,1509,2.903,1510,2.903,1511,2.903,1512,2.903,1513,2.903]],["title/classes/UserPresenter.html",[0,0.026,1493,3.125]],["body/classes/UserPresenter.html",[0,0.028,2,1.279,3,0.124,4,0.124,5,0.112,9,0.257,10,1.859,16,1.144,17,0.73,19,0.568,20,0.011,25,0.663,26,0.623,27,0.565,31,0.545,35,0.124,65,0.007,66,0.007,73,1.071,113,1.873,192,3.377,201,2.816,233,3.678,241,2.816,374,3.483,442,3.529,456,2.772,467,3.376,494,2.679,504,2.423,1363,6.716,1462,6.042,1463,6.042,1488,4.02,1493,4.507,1514,4.02,1515,6.114,1516,6.114,1517,4.58,1518,4.58,1519,4.58,1520,4.58]],["title/modules/UserUsecasesProxyModule.html",[78,1.253,349,2.752]],["body/modules/UserUsecasesProxyModule.html",[0,0.017,3,0.073,4,0.073,5,0.066,13,3.061,14,0.392,17,0.251,20,0.011,29,0.392,31,0.7,33,0.496,35,0.073,38,3.011,65,0.005,66,0.005,78,1.509,80,1.078,81,1.781,87,1.91,88,1.236,89,1.236,91,1.332,92,1.332,95,3.509,96,1.844,97,1.755,106,2.142,108,3.509,109,4.525,132,0.714,137,4.038,138,3.841,139,3.841,149,3.779,177,4.841,203,1.662,209,2.444,212,3.509,214,1.662,249,4.038,250,2.879,251,2.155,252,4.072,254,3.765,255,2.155,256,4.214,257,1.993,258,2.155,259,3.823,260,1.993,261,2.155,262,4.773,263,1.509,264,2.373,265,3.879,266,2.373,270,1.993,275,3.517,297,4.263,301,4.773,349,5.23,354,3.331,396,3.451,449,2.879,563,1.863,721,1.863,739,2.879,745,3.08,1377,2.373,1378,2.373,1450,2.879,1521,2.703,1522,2.703,1523,2.703,1524,2.703,1525,2.703,1526,2.703,1527,2.703,1528,2.703,1529,2.703,1530,2.703,1531,2.703,1532,2.703,1533,2.703,1534,2.703,1535,2.703,1536,2.703,1537,4.178,1538,2.703,1539,2.703,1540,4.178,1541,4.178,1542,4.178,1543,4.178,1544,4.178,1545,2.703]],["title/coverage.html",[176,4.627]],["body/coverage.html",[0,0.05,1,1.384,5,0.046,6,1.648,19,0.135,20,0.011,38,0.749,65,0.004,66,0.004,67,1.371,68,1.384,70,1.648,74,1.497,75,1.648,85,1.219,86,0.925,90,1.497,96,1.764,100,1.497,110,1.982,112,1.648,113,0.408,124,1.294,140,1.294,141,1.294,152,1.384,155,1.384,172,1.648,176,1.497,183,2.459,184,1.384,186,1.648,191,1.219,202,1.219,206,1.294,212,1.003,213,1.219,216,1.219,232,1.648,238,1.098,242,1.648,250,1.294,256,1.048,259,1.048,262,1.154,265,1.003,268,1.219,282,1.648,290,1.154,301,1.154,302,1.497,314,1.497,324,1.648,337,1.048,351,1.384,352,1.384,361,1.219,362,2.486,372,1.384,375,1.384,381,1.219,386,1.294,388,1.294,389,3.345,390,1.648,391,2.948,395,1.003,397,1.098,398,0.858,407,1.098,413,0.858,440,1.154,441,2.486,443,1.384,448,1.154,449,1.294,450,1.648,451,3.209,452,0.962,456,1.098,472,1.384,473,1.648,491,1.219,492,1.648,520,1.648,551,1.294,552,1.648,563,1.294,564,1.648,573,2.596,575,1.294,580,1.648,604,1.384,606,1.384,628,1.497,629,2.298,663,2.737,673,7.774,681,1.648,688,1.294,709,1.294,710,2.486,711,1.648,721,1.294,722,2.948,723,1.648,731,1.294,732,2.486,739,1.294,745,1.384,746,1.648,753,1.648,755,1.294,756,1.648,757,1.497,758,1.648,766,1.384,767,1.648,771,1.648,774,1.648,777,2.486,783,1.154,784,3.427,787,1.219,956,1.154,958,1.154,963,1.154,964,1.219,965,2.486,971,1.294,975,1.648,977,1.219,992,1.648,998,1.648,1006,1.648,1009,1.648,1010,2.486,1023,1.497,1043,1.648,1059,1.648,1067,1.497,1068,1.648,1070,1.648,1085,2.459,1087,1.648,1097,1.294,1099,1.497,1111,1.384,1118,1.497,1119,1.648,1157,1.648,1172,1.648,1190,1.294,1191,1.648,1197,1.497,1198,1.648,1217,1.648,1231,1.497,1232,1.648,1239,1.497,1240,1.648,1272,1.497,1273,1.648,1277,1.497,1278,1.648,1282,1.497,1283,1.648,1288,1.648,1290,1.497,1308,1.648,1328,1.384,1330,1.384,1333,1.384,1360,1.648,1392,1.648,1429,1.497,1431,1.497,1450,1.294,1451,1.648,1456,1.648,1461,1.648,1479,1.648,1489,1.497,1493,1.384,1514,1.648,1546,1.877,1547,1.877,1548,6.789,1549,4.657,1550,7.862,1551,5.906,1552,3.999,1553,8.196,1554,7.298,1555,1.877,1556,1.877,1557,1.877,1558,1.877,1559,7.996,1560,1.877,1561,3.118,1562,1.648,1563,1.648,1564,1.648,1565,1.648,1566,1.648,1567,1.648,1568,1.648,1569,1.648,1570,2.737,1571,1.648,1572,1.648,1573,1.648,1574,1.648,1575,1.648,1576,1.648,1577,1.648,1578,1.648,1579,2.737,1580,1.648,1581,1.648,1582,1.648,1583,1.648,1584,1.648,1585,1.648,1586,1.648,1587,1.648,1588,1.648,1589,1.648,1590,1.648,1591,1.648,1592,1.648,1593,1.877,1594,1.877]],["title/dependencies.html",[81,2.176,1595,3.101]],["body/dependencies.html",[0,0.041,20,0.011,33,0.935,34,3.305,65,0.008,66,0.008,81,2.17,94,4.059,123,4.059,146,3.13,148,4.468,149,2.72,201,3.13,292,4.468,305,3.752,307,5.225,308,5.225,309,5.225,310,4.059,510,3.508,511,3.13,612,3.508,654,4.059,657,4.059,661,3.752,769,3.752,1035,4.059,1050,5.778,1406,4.468,1596,6.553,1597,7.247,1598,5.091,1599,6.553,1600,5.091,1601,5.091,1602,5.091,1603,5.091,1604,5.091,1605,5.091,1606,5.091,1607,5.091,1608,5.091,1609,5.091,1610,5.091,1611,5.091,1612,5.091,1613,5.091,1614,5.091,1615,5.091,1616,5.091,1617,5.091,1618,5.091,1619,5.091,1620,5.091,1621,5.091]],["title/miscellaneous/enumerations.html",[1622,2.066,1623,4.48]],["body/miscellaneous/enumerations.html",[9,0.35,20,0.01,65,0.009,66,0.009,96,2.752,312,5.122,334,4.809,573,4.049,629,5.479,659,5.122,660,5.479,661,5.479,662,5.926,1622,3.649,1623,5.475,1624,5.475]],["title/miscellaneous/functions.html",[1622,2.066,1625,4.48]],["body/miscellaneous/functions.html",[9,0.353,19,0.453,20,0.01,25,0.91,26,0.855,27,0.776,65,0.009,66,0.009,96,2.773,102,3.509,573,4.079,575,5.145,629,5.503,664,5.516,665,5.952,1562,5.516,1563,6.991,1622,3.676,1624,5.516,1625,5.516,1626,6.284]],["title/index.html",[9,0.198,1627,3.532,1628,3.532]],["body/index.html",[20,0.007,65,0.006,66,0.006,428,2.058,504,2.253,626,3.912,806,2.172,833,2.172,860,2.172,1134,2.937,1410,2.937,1629,3.346,1630,8.42,1631,5.81,1632,3.346,1633,6.399,1634,3.346,1635,6.813,1636,3.346,1637,4.907,1638,3.346,1639,3.346,1640,5.81,1641,7.699,1642,4.907,1643,3.346,1644,3.346,1645,4.907,1646,3.346,1647,3.346,1648,6.813,1649,3.346,1650,3.346,1651,6.399,1652,3.346,1653,5.81,1654,3.346,1655,6.813,1656,6.813,1657,3.346,1658,3.346,1659,3.346,1660,6.399,1661,6.813,1662,4.907,1663,3.346,1664,3.346,1665,6.399,1666,3.346,1667,4.907,1668,4.907,1669,3.346,1670,5.81,1671,5.81,1672,4.907,1673,4.907,1674,4.907,1675,6.813,1676,3.346,1677,4.907,1678,3.346,1679,7.12,1680,3.346,1681,3.346,1682,3.346,1683,4.907,1684,3.346,1685,3.346,1686,3.346,1687,3.346,1688,3.346,1689,3.346,1690,3.346,1691,6.399,1692,6.399,1693,5.81,1694,5.81,1695,4.907,1696,4.907,1697,4.907,1698,4.907,1699,3.346,1700,4.907,1701,4.907,1702,3.346,1703,3.346,1704,3.346,1705,3.346,1706,3.346,1707,3.346,1708,3.346,1709,3.346,1710,3.346,1711,5.81,1712,3.346,1713,3.346,1714,3.346,1715,3.346,1716,3.346,1717,4.907,1718,3.346,1719,3.346,1720,3.346,1721,3.346,1722,3.346,1723,3.346,1724,3.346,1725,3.346,1726,3.346,1727,3.346,1728,3.346,1729,3.346,1730,3.346,1731,4.907,1732,3.346,1733,3.346,1734,3.346,1735,3.346,1736,3.346,1737,3.346,1738,3.346,1739,3.346,1740,3.346,1741,3.346,1742,3.346,1743,3.346,1744,3.346,1745,3.346,1746,3.346,1747,4.907,1748,3.346,1749,4.907,1750,3.346,1751,3.346,1752,3.346,1753,3.346,1754,3.346,1755,3.346,1756,3.346,1757,3.346,1758,3.346,1759,3.346,1760,3.346,1761,3.346,1762,3.346,1763,3.346,1764,3.346,1765,3.346]],["title/modules.html",[80,2.315]],["body/modules.html",[20,0.008,65,0.008,66,0.008,79,3.483,80,2.14,95,2.867,133,3.698,137,3.299,138,3.139,139,3.139,160,3.698,166,3.483,208,3.299,249,3.299,297,3.483,348,3.483,349,3.483,1224,3.698,1766,8.716,1767,8.716,1768,8.716,1769,8.749,1770,5.365,1771,5.365]],["title/overview.html",[1772,5.094]],["body/overview.html",[2,0.84,20,0.011,65,0.006,66,0.006,69,0.997,79,4.858,80,1.199,81,1.932,82,2.639,83,2.639,84,2.639,85,4.613,86,3.603,87,2.072,88,1.375,89,1.375,95,3.999,111,1.282,133,5.614,134,2.639,135,2.639,136,2.639,137,4.497,138,4.378,139,4.378,140,3.758,141,3.758,160,5.04,166,4.747,185,2.072,208,4.972,247,2.639,248,2.639,249,4.881,256,3.967,259,3.967,262,4.369,265,3.797,268,4.613,277,2.639,278,2.639,279,2.639,297,4.613,298,2.639,299,2.639,300,2.639,301,4.369,346,2.639,347,2.639,348,5.249,349,5.249,491,4.613,570,2.639,571,2.639,612,3.758,676,2.639,677,2.639,678,2.639,1030,2.639,1031,2.639,1032,2.639,1033,2.639,1086,1.952,1152,2.639,1153,2.639,1154,2.639,1220,2.639,1221,2.639,1222,2.639,1223,2.639,1224,3.758,1772,2.639,1773,3.007,1774,4.531,1775,3.007,1776,3.007,1777,3.007]],["title/properties.html",[10,1.552,1595,3.101]],["body/properties.html",[10,2,20,0.011,65,0.009,66,0.009,219,5.244,1778,6.577,1779,6.577,1780,6.577,1781,6.577,1782,6.577,1783,6.577]],["title/miscellaneous/typealiases.html",[1622,2.066,1784,5.104]],["body/miscellaneous/typealiases.html",[9,0.375,19,0.482,20,0.009,65,0.009,66,0.009,408,4.759,784,4.108,1622,3.908,1785,6.681,1786,6.681]],["title/miscellaneous/variables.html",[1622,2.066,1787,4.48]],["body/miscellaneous/variables.html",[9,0.081,19,0.469,20,0.011,22,1.833,26,0.602,52,2.341,59,2.179,65,0.003,66,0.003,73,0.839,86,1.619,90,1.146,100,1.983,101,0.463,102,2.186,103,0.39,104,1.262,105,1.262,113,0.541,132,1.997,198,2.469,206,1.714,219,6.478,220,3.882,221,3.26,222,2.587,227,2.463,234,0.803,237,5.145,238,1.455,302,1.146,306,1.262,310,1.146,314,1.983,315,1.262,316,1.262,317,1.983,318,1.262,319,1.262,320,1.262,334,4.51,371,1.465,372,1.833,374,1.179,375,1.833,381,1.614,442,0.737,443,1.833,456,2.103,550,3.092,560,1.146,615,1.146,639,4.558,654,1.983,659,0.991,660,1.833,665,1.146,768,4.403,960,2.871,1023,1.983,1025,1.262,1084,3.882,1086,0.933,1097,1.714,1099,1.983,1111,1.833,1194,3.121,1203,6.684,1290,1.983,1321,4.583,1328,1.833,1330,1.833,1363,5.482,1429,1.146,1430,2.183,1431,1.983,1432,1.262,1433,1.262,1434,1.262,1435,1.262,1436,1.262,1437,1.262,1438,1.262,1439,1.262,1440,1.262,1441,2.183,1442,2.884,1443,1.262,1444,1.262,1445,1.262,1455,1.262,1464,2.183,1471,4.82,1473,2.183,1489,1.983,1564,1.262,1565,2.183,1566,1.262,1567,2.183,1568,1.262,1569,1.262,1570,3.436,1571,1.262,1572,2.183,1573,1.262,1574,2.183,1575,1.262,1576,1.262,1577,1.262,1578,1.262,1579,1.262,1580,1.262,1581,1.262,1582,1.262,1583,2.183,1584,1.262,1585,1.262,1586,1.262,1587,2.183,1588,1.262,1589,1.262,1590,1.262,1591,1.262,1592,1.262,1622,0.841,1787,1.262,1788,1.438,1789,1.438,1790,1.438,1791,1.438,1792,1.438,1793,1.438,1794,2.487,1795,1.438,1796,1.438,1797,1.438,1798,1.438,1799,1.438,1800,1.438,1801,1.438,1802,1.438,1803,1.438,1804,1.438,1805,1.438,1806,1.438,1807,1.438,1808,1.438,1809,1.438,1810,1.438,1811,1.438,1812,1.438,1813,6.876,1814,1.438,1815,4.423,1816,5.973,1817,6.498,1818,4.423,1819,4.423,1820,4.423,1821,4.423,1822,4.841,1823,4.423,1824,4.423,1825,4.423,1826,4.423,1827,4.423,1828,4.423,1829,4.423,1830,4.423,1831,4.423,1832,4.423,1833,5.973,1834,4.423,1835,4.423,1836,4.423,1837,4.423,1838,4.423,1839,4.423,1840,5.749,1841,3.915,1842,1.438,1843,2.487,1844,1.438,1845,1.438,1846,5.749,1847,3.915,1848,5.491,1849,4.423,1850,2.487,1851,2.487,1852,2.487,1853,2.487,1854,2.487,1855,2.487,1856,5.749,1857,3.915,1858,1.438,1859,2.487,1860,1.438,1861,1.438,1862,1.438,1863,1.438,1864,1.438,1865,1.438,1866,1.438]]],"invertedIndex":[["",{"_index":20,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":673,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["0.1.13",{"_index":1617,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1609,"title":{},"body":{"dependencies.html":{}}}],["0.2.42",{"_index":1619,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1608,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1610,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1553,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["0/171",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1551,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["1.0",{"_index":1779,"title":{},"body":{"properties.html":{}}}],["1.0.0",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["1.2.1",{"_index":1604,"title":{},"body":{"dependencies.html":{}}}],["1000).tolocalestring",{"_index":420,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["14",{"_index":1773,"title":{},"body":{"overview.html":{}}}],["15",{"_index":1775,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":1607,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}],["24",{"_index":1777,"title":{},"body":{"overview.html":{}}}],["24h",{"_index":1042,"title":{},"body":{"modules/JwtModule.html":{}}}],["29",{"_index":1776,"title":{},"body":{"overview.html":{}}}],["3",{"_index":1774,"title":{},"body":{"overview.html":{}}}],["3.0.0",{"_index":1601,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":1614,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1681,"title":{},"body":{"index.html":{}}}],["4.0.0",{"_index":1611,"title":{},"body":{"dependencies.html":{}}}],["400",{"_index":1704,"title":{},"body":{"index.html":{}}}],["401",{"_index":218,"title":{},"body":{"controllers/AuthController.html":{}}}],["5.1.0",{"_index":1605,"title":{},"body":{"dependencies.html":{}}}],["5.1.4",{"_index":1606,"title":{},"body":{"dependencies.html":{}}}],["6.1.3",{"_index":1602,"title":{},"body":{"dependencies.html":{}}}],["6.2.13",{"_index":1621,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":320,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["7.6.0",{"_index":1618,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":1613,"title":{},"body":{"dependencies.html":{}}}],["9.0.0",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1603,"title":{},"body":{"dependencies.html":{}}}],["9.2.1",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["abstracthttpadapter",{"_index":1403,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["access",{"_index":1832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["access_key",{"_index":630,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["accesskey",{"_index":104,"title":{},"body":{"modules/ApiConfigModule.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":243,"title":{},"body":{"classes/AuthPresenter.html":{},"classes/LoginUseCase.html":{}}}],["adapter",{"_index":1411,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["adapterhost",{"_index":1398,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["adapterhost.httpadapter",{"_index":1413,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["addbasicauth",{"_index":1268,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["addbearerauth",{"_index":1267,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["addtag('authentication",{"_index":1265,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["addtag('transaction",{"_index":1266,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["addtag('user",{"_index":1264,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["adicionar",{"_index":1713,"title":{},"body":{"index.html":{}}}],["aed",{"_index":788,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["afn",{"_index":789,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["agent",{"_index":1130,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["aliases",{"_index":1785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":1,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/SetupGlobalFilters.html":{},"coverage.html":{}}}],["allowed",{"_index":1831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":463,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["alreadyexists",{"_index":521,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{}}}],["alreadyexists(key",{"_index":527,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{}}}],["alreadyexists.id",{"_index":549,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["ambient",{"_index":610,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["ambientconfig",{"_index":68,"title":{"interfaces/AmbientConfig.html":{}},"body":{"interfaces/AmbientConfig.html":{},"injectables/EnvironmentConfigService.html":{},"coverage.html":{}}}],["amd",{"_index":790,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["amount",{"_index":387,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{}}}],["ang",{"_index":791,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["aoa",{"_index":792,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["apenas",{"_index":1733,"title":{},"body":{"index.html":{}}}],["api",{"_index":626,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"classes/SetupDocumentBuilder.html":{},"index.html":{}}}],["api.service",{"_index":99,"title":{},"body":{"modules/ApiConfigModule.html":{}}}],["apibadrequestresponse",{"_index":1823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiconfig",{"_index":74,"title":{"interfaces/ApiConfig.html":{}},"body":{"interfaces/ApiConfig.html":{},"coverage.html":{}}}],["apiconfigmodule",{"_index":79,"title":{"modules/ApiConfigModule.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["apiconfigservice",{"_index":85,"title":{"injectables/ApiConfigService.html":{}},"body":{"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["apicreatedresponse",{"_index":1863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiforbiddenresponse",{"_index":1829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiheader",{"_index":1815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiinternalservererrorresponse",{"_index":1835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apikey",{"_index":429,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["apinotfoundresponse",{"_index":1834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiokresponse",{"_index":1821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiproperty",{"_index":1363,"title":{},"body":{"classes/TransactionPresenter.html":{},"classes/UserPresenter.html":{},"miscellaneous/variables.html":{}}}],["apirequesttimeoutresponse",{"_index":1838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apiresponse",{"_index":199,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":200,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["apitags('authentication",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('transaction",{"_index":1335,"title":{},"body":{"controllers/TransactionController.html":{}}}],["apitags('user",{"_index":1495,"title":{},"body":{"controllers/UserController.html":{}}}],["apiunauthorizedresponse",{"_index":1827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplica��o",{"_index":1720,"title":{},"body":{"index.html":{}}}],["app",{"_index":465,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"classes/UpdateUserUseCase.html":{}}}],["app.useglobalfilters(new",{"_index":1276,"title":{},"body":{"classes/SetupGlobalFilters.html":{}}}],["app.useglobalinterceptors",{"_index":1280,"title":{},"body":{"classes/SetupGlobalInterceptors.html":{}}}],["app.useglobalpipes(new",{"_index":1286,"title":{},"body":{"classes/SetupGlobalPipes.html":{}}}],["app_guard",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["app_interceptor",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["applydecorators",{"_index":1813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(isdate",{"_index":1858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(isnumber",{"_index":1851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applydecorators(isstring",{"_index":1859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":133,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"classes/SetupContainer.html":{},"modules.html":{},"overview.html":{}}}],["apresenta��o",{"_index":1721,"title":{},"body":{"index.html":{}}}],["argument",{"_index":1826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["argumentshost",{"_index":23,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["arquivo",{"_index":1715,"title":{},"body":{"index.html":{}}}],["ars",{"_index":793,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["async",{"_index":101,"title":{},"body":{"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUseCase.html":{},"controllers/TransactionController.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["atualizadas",{"_index":1647,"title":{},"body":{"index.html":{}}}],["aud",{"_index":794,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["auth",{"_index":246,"title":{},"body":{"classes/AuthPresenter.html":{},"classes/SetupDocumentBuilder.html":{}}}],["auth.dto",{"_index":215,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.guard",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["auth.guard.ts",{"_index":1010,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:11",{"_index":1015,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:16",{"_index":1018,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:27",{"_index":1020,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.interface",{"_index":770,"title":{},"body":{"interfaces/IAuthRequest.html":{}}}],["auth.presenter",{"_index":217,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth/auth.controller",{"_index":355,"title":{},"body":{"modules/ControllersModule.html":{}}}],["authcontroller",{"_index":184,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/ControllersModule.html":{},"coverage.html":{}}}],["authcredentials",{"_index":196,"title":{},"body":{"controllers/AuthController.html":{}}}],["authdto",{"_index":191,"title":{"classes/AuthDTO.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{},"coverage.html":{}}}],["authdto(authcredentials",{"_index":230,"title":{},"body":{"controllers/AuthController.html":{}}}],["authenticated",{"_index":1830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authguard",{"_index":1022,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"controllers/TransactionController.html":{}}}],["authguard('jwt",{"_index":1024,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1069,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["author",{"_index":1782,"title":{},"body":{"properties.html":{}}}],["authorization",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["authpresenter",{"_index":216,"title":{"classes/AuthPresenter.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthPresenter.html":{},"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{},"coverage.html":{}}}],["authusecasesproxymodule",{"_index":208,"title":{"modules/AuthUsecasesProxyModule.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/ControllersModule.html":{},"injectables/LocalStrategy.html":{},"modules.html":{},"overview.html":{}}}],["authusecasesproxymodule.login_usecases_proxy",{"_index":273,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["authusecasesproxymodule.register",{"_index":359,"title":{},"body":{"modules/ControllersModule.html":{}}}],["available",{"_index":1771,"title":{},"body":{"modules.html":{}}}],["avatar",{"_index":974,"title":{},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{}}}],["await",{"_index":128,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUseCase.html":{},"controllers/TransactionController.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["awg",{"_index":795,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["axios",{"_index":123,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{},"dependencies.html":{}}}],["axiosresponse",{"_index":122,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{}}}],["azn",{"_index":796,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["badrequestexception",{"_index":699,"title":{},"body":{"injectables/ExceptionsService.html":{},"injectables/LocalStrategy.html":{}}}],["badrequestexception(data",{"_index":704,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["bam",{"_index":797,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["banco",{"_index":1687,"title":{},"body":{"index.html":{}}}],["base",{"_index":961,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["baseexceptionfilter",{"_index":8,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["baseurl",{"_index":1128,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["bbd",{"_index":798,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bcrypt",{"_index":292,"title":{},"body":{"injectables/BcryptService.html":{},"dependencies.html":{}}}],["bcrypt.compare(string",{"_index":296,"title":{},"body":{"injectables/BcryptService.html":{}}}],["bcrypt.gensalt",{"_index":294,"title":{},"body":{"injectables/BcryptService.html":{}}}],["bcrypt.hash(string",{"_index":295,"title":{},"body":{"injectables/BcryptService.html":{}}}],["bcrypt.service",{"_index":281,"title":{},"body":{"modules/BcryptModule.html":{}}}],["bcryptmodule",{"_index":137,"title":{"modules/BcryptModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["bcryptservice",{"_index":265,"title":{"injectables/BcryptService.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"classes/CreateUserUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["bdt",{"_index":799,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bearer",{"_index":1816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["between",{"_index":1250,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["bgn",{"_index":800,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bhd",{"_index":801,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bif",{"_index":802,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bmd",{"_index":803,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bnd",{"_index":804,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bob",{"_index":805,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["body",{"_index":198,"title":{},"body":{"controllers/AuthController.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"controllers/TransactionController.html":{},"injectables/TransformResponseInterceptor.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":488,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["brl",{"_index":806,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"index.html":{}}}],["browse",{"_index":1769,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1766,"title":{},"body":{"modules.html":{}}}],["bsd",{"_index":807,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["btc",{"_index":808,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["btn",{"_index":809,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["build",{"_index":1199,"title":{},"body":{"classes/NestResponseBuilder.html":{},"classes/SetupDocumentBuilder.html":{}}}],["bwp",{"_index":810,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["byn",{"_index":811,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["byr",{"_index":812,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["bzd",{"_index":813,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["cache",{"_index":307,"title":{},"body":{"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["cache.service",{"_index":313,"title":{},"body":{"modules/CacheConfigModule.html":{}}}],["cache_manager",{"_index":336,"title":{},"body":{"injectables/CacheService.html":{}}}],["cacheconfigmodule",{"_index":297,"title":{"modules/CacheConfigModule.html":{}},"body":{"modules/CacheConfigModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["cachedtransaction",{"_index":735,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{}}}],["cachedtransactions",{"_index":716,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["cacheduser",{"_index":742,"title":{},"body":{"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{}}}],["cachedusers",{"_index":726,"title":{},"body":{"classes/FindAllUserUseCase.html":{}}}],["cachemanager",{"_index":329,"title":{},"body":{"injectables/CacheService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{}}}],["cachemodule",{"_index":303,"title":{},"body":{"modules/CacheConfigModule.html":{}}}],["cachemodule.register",{"_index":315,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["cacheservice",{"_index":301,"title":{"injectables/CacheService.html":{}},"body":{"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["cad",{"_index":814,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["cada",{"_index":1659,"title":{},"body":{"index.html":{}}}],["callhandler",{"_index":1400,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["camadas",{"_index":1729,"title":{},"body":{"index.html":{}}}],["canactivate",{"_index":1011,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":1016,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["capable",{"_index":1248,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["capaz",{"_index":1639,"title":{},"body":{"index.html":{}}}],["cascade",{"_index":1307,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["cascade'})@joincolumn({name",{"_index":1300,"title":{},"body":{"entities/Transaction.html":{}}}],["cases/auth/login.usecase",{"_index":204,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{}}}],["cases/auth/login.usecase.ts",{"_index":1172,"title":{},"body":{"classes/LoginUseCase.html":{},"coverage.html":{}}}],["cases/auth/login.usecase.ts:10",{"_index":1173,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["cases/auth/login.usecase.ts:19",{"_index":1175,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["cases/auth/login.usecase.ts:40",{"_index":1176,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["cases/transaction",{"_index":1376,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["cases/transaction/create",{"_index":390,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"coverage.html":{}}}],["cases/transaction/delete",{"_index":552,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"coverage.html":{}}}],["cases/transaction/find",{"_index":710,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"coverage.html":{}}}],["cases/transaction/index",{"_index":1327,"title":{},"body":{"controllers/TransactionController.html":{}}}],["cases/user",{"_index":1524,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["cases/user/create",{"_index":450,"title":{},"body":{"classes/CreateUserUseCase.html":{},"coverage.html":{}}}],["cases/user/delete",{"_index":564,"title":{},"body":{"classes/DeleteUserUseCase.html":{},"coverage.html":{}}}],["cases/user/find",{"_index":722,"title":{},"body":{"classes/FindAllUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"coverage.html":{}}}],["cases/user/index",{"_index":1491,"title":{},"body":{"controllers/UserController.html":{}}}],["cases/user/update",{"_index":1451,"title":{},"body":{"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["catch",{"_index":15,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["catch(exception",{"_index":21,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cdf",{"_index":815,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["checkhash",{"_index":283,"title":{},"body":{"injectables/BcryptService.html":{},"interfaces/IBcryptService.html":{}}}],["checkhash(string",{"_index":285,"title":{},"body":{"injectables/BcryptService.html":{},"interfaces/IBcryptService.html":{}}}],["checktoken",{"_index":966,"title":{},"body":{"interfaces/IJwtService.html":{},"injectables/JwtTokenService.html":{}}}],["checktoken(token",{"_index":968,"title":{},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"injectables/JwtTokenService.html":{}}}],["chf",{"_index":816,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ci/cd",{"_index":1765,"title":{},"body":{"index.html":{}}}],["claras",{"_index":1751,"title":{},"body":{"index.html":{}}}],["class",{"_index":0,"title":{"classes/AllExceptionsFilter.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"classes/UserPresenter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"classes/UserPresenter.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":143,"title":{},"body":{"modules/AppModule.html":{},"classes/SetupGlobalInterceptors.html":{}}}],["classserializerinterceptor(app.get(reflector",{"_index":1281,"title":{},"body":{"classes/SetupGlobalInterceptors.html":{}}}],["clf",{"_index":817,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["client",{"_index":1824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientopts",{"_index":311,"title":{},"body":{"modules/CacheConfigModule.html":{}}}],["clp",{"_index":818,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["cluster_apiconfigmodule",{"_index":82,"title":{},"body":{"modules/ApiConfigModule.html":{},"overview.html":{}}}],["cluster_apiconfigmodule_exports",{"_index":84,"title":{},"body":{"modules/ApiConfigModule.html":{},"overview.html":{}}}],["cluster_apiconfigmodule_providers",{"_index":83,"title":{},"body":{"modules/ApiConfigModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authusecasesproxymodule",{"_index":247,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"overview.html":{}}}],["cluster_authusecasesproxymodule_imports",{"_index":248,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"overview.html":{}}}],["cluster_bcryptmodule",{"_index":277,"title":{},"body":{"modules/BcryptModule.html":{},"overview.html":{}}}],["cluster_bcryptmodule_exports",{"_index":278,"title":{},"body":{"modules/BcryptModule.html":{},"overview.html":{}}}],["cluster_bcryptmodule_providers",{"_index":279,"title":{},"body":{"modules/BcryptModule.html":{},"overview.html":{}}}],["cluster_cacheconfigmodule",{"_index":298,"title":{},"body":{"modules/CacheConfigModule.html":{},"overview.html":{}}}],["cluster_cacheconfigmodule_exports",{"_index":300,"title":{},"body":{"modules/CacheConfigModule.html":{},"overview.html":{}}}],["cluster_cacheconfigmodule_providers",{"_index":299,"title":{},"body":{"modules/CacheConfigModule.html":{},"overview.html":{}}}],["cluster_controllersmodule",{"_index":346,"title":{},"body":{"modules/ControllersModule.html":{},"overview.html":{}}}],["cluster_controllersmodule_imports",{"_index":347,"title":{},"body":{"modules/ControllersModule.html":{},"overview.html":{}}}],["cluster_environmentconfigmodule",{"_index":570,"title":{},"body":{"modules/EnvironmentConfigModule.html":{},"overview.html":{}}}],["cluster_environmentconfigmodule_exports",{"_index":571,"title":{},"body":{"modules/EnvironmentConfigModule.html":{},"overview.html":{}}}],["cluster_environmentconfigmodule_providers",{"_index":572,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["cluster_exceptionsmodule",{"_index":676,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_exceptionsmodule_exports",{"_index":677,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_exceptionsmodule_providers",{"_index":678,"title":{},"body":{"modules/ExceptionsModule.html":{},"overview.html":{}}}],["cluster_jwtmodule",{"_index":1030,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_jwtmodule_exports",{"_index":1033,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_jwtmodule_imports",{"_index":1031,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_jwtmodule_providers",{"_index":1032,"title":{},"body":{"modules/JwtModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1152,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1154,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1153,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_repositoriesmodule",{"_index":1220,"title":{},"body":{"modules/RepositoriesModule.html":{},"overview.html":{}}}],["cluster_repositoriesmodule_exports",{"_index":1221,"title":{},"body":{"modules/RepositoriesModule.html":{},"overview.html":{}}}],["cluster_repositoriesmodule_imports",{"_index":1222,"title":{},"body":{"modules/RepositoriesModule.html":{},"overview.html":{}}}],["cluster_repositoriesmodule_providers",{"_index":1223,"title":{},"body":{"modules/RepositoriesModule.html":{},"overview.html":{}}}],["cluster_transactionusecasesproxymodule",{"_index":1371,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["cluster_transactionusecasesproxymodule_imports",{"_index":1372,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["cluster_userusecasesproxymodule",{"_index":1521,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["cluster_userusecasesproxymodule_imports",{"_index":1522,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["cny",{"_index":819,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["cobertura",{"_index":1709,"title":{},"body":{"index.html":{}}}],["code",{"_index":957,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["coes�o",{"_index":1748,"title":{},"body":{"index.html":{}}}],["column",{"_index":1849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column(props",{"_index":1861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["columnoptions",{"_index":1846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":1661,"title":{},"body":{"index.html":{}}}],["commits",{"_index":1749,"title":{},"body":{"index.html":{}}}],["como",{"_index":1718,"title":{},"body":{"index.html":{}}}],["config",{"_index":102,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/CacheConfigModule.html":{},"classes/EnvironmentVariables.html":{},"injectables/LoggerService.html":{},"classes/SetupDocumentBuilder.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["config.getaccesskey",{"_index":105,"title":{},"body":{"modules/ApiConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabasehost",{"_index":1433,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabasename",{"_index":1437,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabasepassword",{"_index":1436,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabaseport",{"_index":1434,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabasesync",{"_index":1440,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabasetype",{"_index":1432,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getdatabaseuser",{"_index":1435,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getenvironment",{"_index":1442,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getredishost",{"_index":316,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.getredisport",{"_index":318,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["config.module",{"_index":97,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["config.module.ts",{"_index":574,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["config.service",{"_index":98,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/CacheConfigModule.html":{},"classes/CreateTransactionUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/LoggerService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{}}}],["config.service.ts",{"_index":580,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"coverage.html":{}}}],["config.service.ts:11",{"_index":587,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:15",{"_index":600,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:19",{"_index":601,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:24",{"_index":597,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:29",{"_index":599,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:33",{"_index":598,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:38",{"_index":589,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:42",{"_index":592,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:46",{"_index":596,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:50",{"_index":591,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:54",{"_index":590,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:58",{"_index":593,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:62",{"_index":594,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:66",{"_index":595,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.service.ts:71",{"_index":588,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["config.validation",{"_index":576,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["config.validation.ts",{"_index":629,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["config.validation.ts:19",{"_index":650,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:22",{"_index":652,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:25",{"_index":651,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:28",{"_index":641,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:31",{"_index":645,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:34",{"_index":648,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:37",{"_index":643,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:40",{"_index":642,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:43",{"_index":647,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config.validation.ts:46",{"_index":640,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["config/environment",{"_index":96,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/CacheConfigModule.html":{},"classes/CreateTransactionUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"injectables/LoggerService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["config/redis/cache.module",{"_index":1377,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["config/redis/cache.service",{"_index":1378,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["config/typeorm/typeorm.module",{"_index":1227,"title":{},"body":{"modules/RepositoriesModule.html":{}}}],["configmodule",{"_index":304,"title":{},"body":{"modules/CacheConfigModule.html":{},"modules/EnvironmentConfigModule.html":{}}}],["configmodule.forroot",{"_index":321,"title":{},"body":{"modules/CacheConfigModule.html":{},"modules/EnvironmentConfigModule.html":{}}}],["configservice",{"_index":586,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["configura��o",{"_index":1752,"title":{},"body":{"index.html":{}}}],["configure(consumer",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["conhecida",{"_index":1702,"title":{},"body":{"index.html":{}}}],["console.log('exception",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["const",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUseCase.html":{},"classes/SetupDocumentBuilder.html":{},"controllers/TransactionController.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["constructor",{"_index":16,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{}}}],["constructor(@inject(cache_manager",{"_index":339,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(adapterhost",{"_index":1395,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["constructor(auth",{"_index":244,"title":{},"body":{"classes/AuthPresenter.html":{}}}],["constructor(cachemanager",{"_index":327,"title":{},"body":{"injectables/CacheService.html":{}}}],["constructor(config",{"_index":1158,"title":{},"body":{"injectables/LoggerService.html":{}}}],["constructor(configservice",{"_index":585,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["constructor(httpservice",{"_index":115,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["constructor(jwtservice",{"_index":1060,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["constructor(logger",{"_index":394,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["constructor(loginusecaseproxy",{"_index":1071,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtTokenService.html":{},"injectables/LoggerService.html":{},"classes/UseCaseProxy.html":{}}}],["constructor(props",{"_index":235,"title":{},"body":{"classes/AuthDTO.html":{},"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{}}}],["constructor(reflector",{"_index":1013,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["constructor(repository",{"_index":712,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{}}}],["constructor(response",{"_index":1192,"title":{},"body":{"classes/NestResponse.html":{}}}],["constructor(transaction",{"_index":1361,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["constructor(transactionentityrepository",{"_index":497,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["constructor(usecase",{"_index":1457,"title":{},"body":{"classes/UseCaseProxy.html":{}}}],["constructor(user",{"_index":1515,"title":{},"body":{"classes/UserPresenter.html":{}}}],["constructor(userentityrepository",{"_index":524,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["consulta",{"_index":1669,"title":{},"body":{"index.html":{}}}],["consumer.apply(loggermiddleware).forroutes",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["contained",{"_index":1262,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["contendo",{"_index":1690,"title":{},"body":{"index.html":{}}}],["contentlength",{"_index":1088,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["context",{"_index":982,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LoggerService.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["context.getclass",{"_index":1028,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.gethandler",{"_index":1027,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["context.switchtohttp",{"_index":1418,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["controller",{"_index":183,"title":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('public/auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('transactions",{"_index":1336,"title":{},"body":{"controllers/TransactionController.html":{}}}],["controller('users",{"_index":1496,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":185,"title":{},"body":{"controllers/AuthController.html":{},"modules/ControllersModule.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"overview.html":{}}}],["controllersmodule",{"_index":160,"title":{"modules/ControllersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ControllersModule.html":{},"modules.html":{},"overview.html":{}}}],["conversionrate",{"_index":363,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["conversor",{"_index":1629,"title":{},"body":{"index.html":{}}}],["convers�es",{"_index":1646,"title":{},"body":{"index.html":{}}}],["convers�o",{"_index":1641,"title":{},"body":{"index.html":{}}}],["converting",{"_index":1249,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["cop",{"_index":820,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["coverage",{"_index":176,"title":{"coverage.html":{}},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["coverage/lcov",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["crc",{"_index":821,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["create",{"_index":493,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["create(@body",{"_index":1507,"title":{},"body":{"controllers/UserController.html":{}}}],["create(request",{"_index":1309,"title":{},"body":{"controllers/TransactionController.html":{}}}],["create(transaction",{"_index":500,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"interfaces/ITransactionRepository.html":{}}}],["create(user",{"_index":530,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/UserController.html":{}}}],["created",{"_index":1864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":1462,"title":{},"body":{"entities/User.html":{},"classes/UserPresenter.html":{}}}],["createdatecolumn",{"_index":1464,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["createdtransaction",{"_index":422,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"controllers/TransactionController.html":{}}}],["createduser",{"_index":469,"title":{},"body":{"classes/CreateUserUseCase.html":{},"controllers/UserController.html":{}}}],["createhash",{"_index":284,"title":{},"body":{"injectables/BcryptService.html":{},"interfaces/IBcryptService.html":{}}}],["createhash(string",{"_index":288,"title":{},"body":{"injectables/BcryptService.html":{},"interfaces/IBcryptService.html":{}}}],["createoptions",{"_index":1349,"title":{},"body":{"controllers/TransactionController.html":{}}}],["createtoken",{"_index":967,"title":{},"body":{"interfaces/IJwtService.html":{},"injectables/JwtTokenService.html":{}}}],["createtoken(payload",{"_index":970,"title":{},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"injectables/JwtTokenService.html":{}}}],["createtransactiondto",{"_index":361,"title":{"classes/CreateTransactionDTO.html":{}},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"interfaces/ITransactionRepository.html":{},"classes/TransactionOptionsDTO.html":{},"coverage.html":{}}}],["createtransactionusecase",{"_index":388,"title":{"classes/CreateTransactionUseCase.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{}}}],["createtransactionusecases",{"_index":425,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["createuserdto",{"_index":440,"title":{"classes/CreateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/IUserRepository.html":{},"classes/UpdateUserDTO.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuserusecase",{"_index":449,"title":{"classes/CreateUserUseCase.html":{}},"body":{"classes/CreateUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["createuserusecases",{"_index":471,"title":{},"body":{"classes/CreateUserUseCase.html":{}}}],["credentials",{"_index":229,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{}}}],["credentials.email",{"_index":1181,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["credentials.password",{"_index":1182,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["ctx",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["cuc",{"_index":822,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["cup",{"_index":823,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["currencies",{"_index":1252,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["currency",{"_index":436,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["currencybase",{"_index":427,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["currentcontext",{"_index":1417,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["currentcontext.getresponse",{"_index":1420,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["currentresponse",{"_index":1419,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["cve",{"_index":824,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["czk",{"_index":825,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["c�digo",{"_index":1731,"title":{},"body":{"index.html":{}}}],["c�pia",{"_index":1738,"title":{},"body":{"index.html":{}}}],["da",{"_index":1653,"title":{},"body":{"index.html":{}}}],["dados",{"_index":1688,"title":{},"body":{"index.html":{}}}],["das",{"_index":1670,"title":{},"body":{"index.html":{}}}],["data",{"_index":690,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["data/hora",{"_index":1697,"title":{},"body":{"index.html":{}}}],["database",{"_index":615,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["database_host",{"_index":631,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_name",{"_index":632,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_password",{"_index":633,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_port",{"_index":634,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_synchronize",{"_index":635,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["database_user",{"_index":636,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["databaseconfig",{"_index":472,"title":{"interfaces/DatabaseConfig.html":{}},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{},"coverage.html":{}}}],["databasetransactionrepository",{"_index":491,"title":{"injectables/DatabaseTransactionRepository.html":{}},"body":{"injectables/DatabaseTransactionRepository.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["databaseuserrepository",{"_index":262,"title":{"injectables/DatabaseUserRepository.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"injectables/DatabaseUserRepository.html":{},"modules/RepositoriesModule.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["date",{"_index":374,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"injectables/LoggerMiddleware.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"entities/User.html":{},"classes/UserPresenter.html":{},"miscellaneous/variables.html":{}}}],["date().gettime",{"_index":1144,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["date(newtransaction.info.timestamp",{"_index":419,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["date(start).gettime",{"_index":1145,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["datetime",{"_index":364,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["de",{"_index":1630,"title":{},"body":{"index.html":{}}}],["debug",{"_index":976,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["debug(context",{"_index":980,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["decimal",{"_index":1852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":192,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/EnvironmentVariables.html":{},"entities/Log.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{}}}],["default",{"_index":1203,"title":{},"body":{"classes/NestResponseBuilder.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IJwtService.html":{},"interfaces/ILogger.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["delete",{"_index":494,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginUseCase.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{}}}],["delete(@param('id",{"_index":1354,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["delete(id",{"_index":502,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["delete(param",{"_index":1814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete_transaction_usecases_proxy",{"_index":1385,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["delete_user_usecases_proxy",{"_index":1533,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["deleteapiresponse",{"_index":1328,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["deleteapiresponse('/:id",{"_index":1353,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["deleted",{"_index":560,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"miscellaneous/variables.html":{}}}],["deletetransactionusecase",{"_index":551,"title":{"classes/DeleteTransactionUseCase.html":{}},"body":{"classes/DeleteTransactionUseCase.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{}}}],["deletetransactionusecases",{"_index":559,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{}}}],["deletetransactionusecasesproxy",{"_index":1386,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["deleteuserusecase",{"_index":563,"title":{"classes/DeleteUserUseCase.html":{}},"body":{"classes/DeleteUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["deleteuserusecase(logger",{"_index":1545,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["deleteuserusecases",{"_index":569,"title":{},"body":{"classes/DeleteUserUseCase.html":{}}}],["deleteuserusecasesproxy",{"_index":1534,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["dependencies",{"_index":81,"title":{"dependencies.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":219,"title":{},"body":{"controllers/AuthController.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descri��o",{"_index":1705,"title":{},"body":{"index.html":{}}}],["deseja",{"_index":1657,"title":{},"body":{"index.html":{}}}],["desej�veis",{"_index":1743,"title":{},"body":{"index.html":{}}}],["destinationcurrency",{"_index":365,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["destinationvalue",{"_index":366,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["destino",{"_index":1694,"title":{},"body":{"index.html":{}}}],["deve",{"_index":1679,"title":{},"body":{"index.html":{}}}],["development",{"_index":659,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/LoggerService.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["devem",{"_index":1683,"title":{},"body":{"index.html":{}}}],["dever",{"_index":1633,"title":{},"body":{"index.html":{}}}],["disable",{"_index":1132,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["disponibilizar",{"_index":1667,"title":{},"body":{"index.html":{}}}],["dispon�vel",{"_index":1760,"title":{},"body":{"index.html":{}}}],["dist/**/*.entity{.ts,.js",{"_index":1438,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["djf",{"_index":826,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["dkk",{"_index":827,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["document",{"_index":1269,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["documentation",{"_index":172,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["documenta��o",{"_index":1747,"title":{},"body":{"index.html":{}}}],["documentbuilder",{"_index":1242,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["domain/config/ambient.interface",{"_index":602,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["domain/config/database.interface",{"_index":603,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["domain/config/jwt.interface",{"_index":605,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["domain/config/redis.interface",{"_index":607,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["domain/entities/transaction.entity",{"_index":512,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"modules/RepositoriesModule.html":{}}}],["domain/entities/user.entity",{"_index":539,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"classes/DeleteUserUseCase.html":{},"modules/RepositoriesModule.html":{}}}],["domain/interfaces/auth.interface",{"_index":1051,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["domain/interfaces/bcrypt.interface",{"_index":291,"title":{},"body":{"injectables/BcryptService.html":{}}}],["domain/interfaces/cache.interface",{"_index":338,"title":{},"body":{"injectables/CacheService.html":{}}}],["domain/interfaces/exceptions.interface",{"_index":567,"title":{},"body":{"classes/DeleteUserUseCase.html":{},"injectables/ExceptionsService.html":{}}}],["domain/interfaces/jwt.interface",{"_index":1064,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["domain/logger/logger.interface",{"_index":1165,"title":{},"body":{"injectables/LoggerService.html":{}}}],["domain/repositories/transaction.repository",{"_index":513,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["domain/repositories/user.repository",{"_index":540,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["domain/use",{"_index":203,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["dop",{"_index":828,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["dos",{"_index":1756,"title":{},"body":{"index.html":{}}}],["duas",{"_index":1643,"title":{},"body":{"index.html":{}}}],["duration",{"_index":1089,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["dynamicmodule",{"_index":254,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"classes/SetupContainer.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["dzd",{"_index":829,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["e",{"_index":1665,"title":{},"body":{"index.html":{}}}],["egp",{"_index":830,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["em",{"_index":1677,"title":{},"body":{"index.html":{}}}],["email",{"_index":233,"title":{},"body":{"classes/AuthDTO.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/IAuthRepository.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"entities/User.html":{},"classes/UserPresenter.html":{}}}],["embedded",{"_index":1689,"title":{},"body":{"index.html":{}}}],["empty",{"_index":1857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["enableimplicitconversion",{"_index":668,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["endpoint",{"_index":1668,"title":{},"body":{"index.html":{}}}],["endpoints",{"_index":1757,"title":{},"body":{"index.html":{}}}],["enhanced",{"_index":1254,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["entities",{"_index":1086,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"modules/TypeOrmConfigModule.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/transaction.entity",{"_index":414,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"interfaces/ITransactionRepository.html":{}}}],["entities/user.entity",{"_index":458,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IUserRepository.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["entity",{"_index":1085,"title":{"entities/Log.html":{},"entities/Transaction.html":{},"entities/User.html":{}},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"entities/User.html":{},"coverage.html":{}}}],["entre",{"_index":1642,"title":{},"body":{"index.html":{}}}],["enum",{"_index":658,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["enumerations",{"_index":1623,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":578,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["envfilepath",{"_index":577,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["environment",{"_index":312,"title":{},"body":{"modules/CacheConfigModule.html":{},"modules/EnvironmentConfigModule.html":{},"classes/EnvironmentVariables.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/enumerations.html":{}}}],["environmentconfig",{"_index":400,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["environmentconfigmodule",{"_index":95,"title":{"modules/EnvironmentConfigModule.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["environmentconfigservice",{"_index":86,"title":{"injectables/EnvironmentConfigService.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/CacheConfigModule.html":{},"classes/CreateTransactionUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/LoggerService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["environmentvariables",{"_index":628,"title":{"classes/EnvironmentVariables.html":{}},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["ern",{"_index":831,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["err",{"_index":1021,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["erro",{"_index":1703,"title":{},"body":{"index.html":{}}}],["error",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateTransactionUseCase.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["error(context",{"_index":983,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["error(errors.tostring",{"_index":675,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors",{"_index":669,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["errors.length",{"_index":672,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["escolhas",{"_index":1726,"title":{},"body":{"index.html":{}}}],["eslint",{"_index":1131,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["eslint/no",{"_index":1135,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["esse",{"_index":1714,"title":{},"body":{"index.html":{}}}],["estar",{"_index":1758,"title":{},"body":{"index.html":{}}}],["etb",{"_index":832,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["eur",{"_index":833,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"index.html":{}}}],["evitar",{"_index":1740,"title":{},"body":{"index.html":{}}}],["ex",{"_index":1761,"title":{},"body":{"index.html":{}}}],["example",{"_index":1818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exception",{"_index":28,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message.error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response.data.message",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response.error",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response.message",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.response?.message",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.response?.status",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.response?.statuscode",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.status",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception?.statuscode",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exceptions.service",{"_index":680,"title":{},"body":{"modules/ExceptionsModule.html":{}}}],["exceptions/exceptions.module",{"_index":255,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["exceptions/exceptions.service",{"_index":257,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["exceptionservice",{"_index":275,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UpdateUserUseCase.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["exceptionsmodule",{"_index":138,"title":{"modules/ExceptionsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/ExceptionsModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["exceptionsservice",{"_index":256,"title":{"injectables/ExceptionsService.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"injectables/LocalStrategy.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["exce��es",{"_index":1746,"title":{},"body":{"index.html":{}}}],["execute",{"_index":392,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["execute(credentials",{"_index":1174,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["execute(id",{"_index":554,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"controllers/TransactionController.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["execute(key",{"_index":748,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["execute(user",{"_index":454,"title":{},"body":{"classes/CreateUserUseCase.html":{},"controllers/UserController.html":{}}}],["execute(userid",{"_index":402,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"controllers/TransactionController.html":{}}}],["executioncontext",{"_index":1017,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["existir",{"_index":1706,"title":{},"body":{"index.html":{}}}],["exists",{"_index":464,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["experiencing",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["expiresin",{"_index":1041,"title":{},"body":{"modules/JwtModule.html":{}}}],["explica��es",{"_index":1716,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["exports",{"_index":92,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["express",{"_index":769,"title":{},"body":{"interfaces/IAuthRequest.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TransformResponseInterceptor.html":{},"dependencies.html":{}}}],["extends",{"_index":7,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/IAuthRequest.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{}}}],["external",{"_index":1257,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["externo",{"_index":1650,"title":{},"body":{"index.html":{}}}],["extra",{"_index":1444,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["extractjwt",{"_index":1048,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1054,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["eyjhbgcioijiuzi1niisinr5cci6ikpxvcisimlkijoizge2zgi0n2mtn2zlys00zdc0lthjywutzja2mjg1n2jimgmyin0.eyjzdwiioiixmjm0nty3odkwiiwibmftzsi6ikpvag4grg9liiwiawf0ijoxnte2mjm5mdiyfq.ylqrwhmgpb9ymv3uklz11aqst",{"_index":1819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["falha",{"_index":1701,"title":{},"body":{"index.html":{}}}],["fallbackonerrors",{"_index":1238,"title":{},"body":{"classes/SetupContainer.html":{}}}],["false",{"_index":227,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateTransactionUseCase.html":{},"injectables/DatabaseUserRepository.html":{},"classes/EnvironmentVariables.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"injectables/JwtStrategy.html":{},"modules/TypeOrmConfigModule.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["fastify",{"_index":1408,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["features",{"_index":1723,"title":{},"body":{"index.html":{}}}],["fees",{"_index":1256,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["feito",{"_index":1676,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["filters/exception.filter",{"_index":1275,"title":{},"body":{"classes/SetupGlobalFilters.html":{}}}],["find_user_by_key_usecases_proxy",{"_index":1529,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["findall",{"_index":495,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["findall(request",{"_index":1315,"title":{},"body":{"controllers/TransactionController.html":{}}}],["findall(userid",{"_index":505,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"interfaces/ITransactionRepository.html":{}}}],["findalltransactionusecase",{"_index":709,"title":{"classes/FindAllTransactionUseCase.html":{}},"body":{"classes/FindAllTransactionUseCase.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{}}}],["findalltransactionusecase(repository",{"_index":1388,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["findalluserusecase",{"_index":721,"title":{"classes/FindAllUserUseCase.html":{}},"body":{"classes/FindAllUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["findalluserusecase(repository",{"_index":1539,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["findbykey",{"_index":522,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{}}}],["findbykey(key",{"_index":534,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{}}}],["findone",{"_index":496,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["findone(@param('id",{"_index":1346,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":507,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["findonetransactionusecase",{"_index":731,"title":{"classes/FindOneTransactionUseCase.html":{}},"body":{"classes/FindOneTransactionUseCase.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"coverage.html":{}}}],["findoneuserusecase",{"_index":739,"title":{"classes/FindOneUserUseCase.html":{}},"body":{"classes/FindOneUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["finduserbykeyusecase",{"_index":745,"title":{"classes/FindUserByKeyUseCase.html":{}},"body":{"classes/FindUserByKeyUseCase.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["finduserbykeyusecasesproxy",{"_index":1530,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["fjd",{"_index":834,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["fkp",{"_index":835,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["flaviohsprado",{"_index":1783,"title":{},"body":{"properties.html":{}}}],["for(app",{"_index":1233,"title":{},"body":{"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{}}}],["forbiddenexception",{"_index":700,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["forbiddenexception(data",{"_index":706,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["found",{"_index":222,"title":{},"body":{"controllers/AuthController.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{},"miscellaneous/variables.html":{}}}],["from(value",{"_index":1853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":663,"title":{},"body":{"classes/EnvironmentVariables.html":{},"coverage.html":{}}}],["functions",{"_index":1625,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gbp",{"_index":836,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["gel",{"_index":837,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["get(param",{"_index":1842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get_transaction_usecases_proxy",{"_index":1379,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["get_transactions_usecases_proxy",{"_index":1381,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["get_user_usecases_proxy",{"_index":1525,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["get_users_usecases_proxy",{"_index":1527,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["getaccesskey",{"_index":76,"title":{},"body":{"interfaces/ApiConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getapimoduleoptions",{"_index":100,"title":{},"body":{"modules/ApiConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getapiresponse",{"_index":1330,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getapiresponse(transactionpresenter",{"_index":1318,"title":{},"body":{"controllers/TransactionController.html":{}}}],["getapiresponse(userpresenter",{"_index":1483,"title":{},"body":{"controllers/UserController.html":{}}}],["getcachedobject",{"_index":325,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ICacheManager.html":{}}}],["getcachedobject(key",{"_index":330,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ICacheManager.html":{}}}],["getdatabasehost",{"_index":474,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabasename",{"_index":475,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabasepassword",{"_index":476,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabaseport",{"_index":477,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabaseschema",{"_index":478,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabasesync",{"_index":479,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabasetype",{"_index":480,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getdatabaseuser",{"_index":481,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getenvironment",{"_index":71,"title":{},"body":{"interfaces/AmbientConfig.html":{},"injectables/EnvironmentConfigService.html":{}}}],["getinstance",{"_index":1082,"title":{},"body":{"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{}}}],["getjwtexpirationtime",{"_index":581,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/JWTConfig.html":{}}}],["getjwtsecret",{"_index":582,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/JWTConfig.html":{}}}],["getredishost",{"_index":583,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/RedisConfig.html":{}}}],["getredismoduleconfig",{"_index":314,"title":{},"body":{"modules/CacheConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getredisport",{"_index":584,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/RedisConfig.html":{}}}],["getrepository",{"_index":1127,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["getrepository(log).save",{"_index":1146,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["getted",{"_index":1843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getting",{"_index":1627,"title":{"index.html":{}},"body":{}}],["gettransaction",{"_index":393,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["gettransaction(from",{"_index":404,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["gettransactionsusecasesproxy",{"_index":1382,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["gettransactionusecasesproxy",{"_index":1380,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["gettypeormmoduleoptions",{"_index":1431,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["getusersusecasesproxy",{"_index":1528,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["getuserusecasesproxy",{"_index":1526,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["getvalue",{"_index":114,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{}}}],["getvalue(url",{"_index":118,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{}}}],["ggp",{"_index":838,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ghs",{"_index":839,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["gip",{"_index":840,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["gmd",{"_index":841,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["gnf",{"_index":842,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["graph",{"_index":1770,"title":{},"body":{"modules.html":{}}}],["gtq",{"_index":843,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["gyd",{"_index":844,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["handlerequest",{"_index":1012,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":1019,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["hash",{"_index":286,"title":{},"body":{"injectables/BcryptService.html":{},"interfaces/IBcryptService.html":{}}}],["haver",{"_index":1708,"title":{},"body":{"index.html":{}}}],["headername",{"_index":1427,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["headernames",{"_index":1421,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["headernames.foreach((headername",{"_index":1423,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["headers",{"_index":1090,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["headers[headername",{"_index":1425,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["headervalue",{"_index":1424,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["heroku",{"_index":1762,"title":{},"body":{"index.html":{}}}],["hkd",{"_index":845,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["hnl",{"_index":846,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["host",{"_index":22,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/CacheConfigModule.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["hostname",{"_index":1091,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["hrk",{"_index":847,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["htg",{"_index":848,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["http",{"_index":1410,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{},"index.html":{}}}],["httpadapter",{"_index":1393,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["httpadapterhost",{"_index":1396,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["httpcode",{"_index":1320,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["httpcode(204",{"_index":1352,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["httpcode(204)@deleteapiresponse('/:id",{"_index":1313,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["httpmodule",{"_index":93,"title":{},"body":{"modules/ApiConfigModule.html":{}}}],["httpmodule.registerasync",{"_index":107,"title":{},"body":{"modules/ApiConfigModule.html":{}}}],["https://api.apilayer.com/exchangerates_data/convert?apikey=${apikey}&from=${currencybase}&to=${to}&amount=${amount",{"_index":432,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["https://api.exchangeratesapi.io/latest?base=usd",{"_index":1685,"title":{},"body":{"index.html":{}}}],["httpservice",{"_index":116,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["httpstatus",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/NestResponseBuilder.html":{},"classes/UpdateUserUseCase.html":{}}}],["httpstatus.bad_request",{"_index":438,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["httpstatus.forbidden",{"_index":466,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["httpstatus.internal_server_error",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":562,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{}}}],["httpstatus.ok",{"_index":1204,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["huf",{"_index":849,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["iapiservice",{"_index":124,"title":{"interfaces/IApiService.html":{}},"body":{"injectables/ApiConfigService.html":{},"classes/CreateTransactionUseCase.html":{},"interfaces/IApiService.html":{},"coverage.html":{}}}],["iauth",{"_index":755,"title":{"interfaces/IAuth.html":{}},"body":{"interfaces/IAuth.html":{},"interfaces/IAuthRequest.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["iauthrepository",{"_index":757,"title":{"interfaces/IAuthRepository.html":{}},"body":{"interfaces/IAuthRepository.html":{},"coverage.html":{}}}],["iauthrequest",{"_index":766,"title":{"interfaces/IAuthRequest.html":{}},"body":{"interfaces/IAuthRequest.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["ibcryptservice",{"_index":290,"title":{"interfaces/IBcryptService.html":{}},"body":{"injectables/BcryptService.html":{},"classes/CreateUserUseCase.html":{},"interfaces/IBcryptService.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["icachemanager",{"_index":337,"title":{"interfaces/ICacheManager.html":{}},"body":{"injectables/CacheService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/ICacheManager.html":{},"coverage.html":{}}}],["id",{"_index":504,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"interfaces/IAuth.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtStrategy.html":{},"entities/Log.html":{},"classes/LoginUseCase.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserUseCase.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"index.html":{}}}],["identifier",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["idr",{"_index":850,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["iexceptionservice",{"_index":398,"title":{"interfaces/IExceptionService.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/ExceptionsService.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["iformatexceptionmessage",{"_index":688,"title":{"interfaces/IFormatExceptionMessage.html":{}},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"coverage.html":{}}}],["ignore",{"_index":131,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["ignoreexpiration",{"_index":1055,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["iinfo",{"_index":783,"title":{"interfaces/IInfo.html":{}},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["ijwtservice",{"_index":964,"title":{"interfaces/IJwtService.html":{}},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"injectables/JwtTokenService.html":{},"classes/LoginUseCase.html":{},"coverage.html":{}}}],["ijwtservicepayload",{"_index":971,"title":{"interfaces/IJwtServicePayload.html":{}},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"injectables/JwtTokenService.html":{},"coverage.html":{}}}],["ilogger",{"_index":395,"title":{"interfaces/ILogger.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"interfaces/ILogger.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["ils",{"_index":851,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["imp",{"_index":852,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["implementar",{"_index":1634,"title":{},"body":{"index.html":{}}}],["implements",{"_index":126,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtTokenService.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["imports",{"_index":106,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/JwtModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["index",{"_index":9,"title":{"index.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexapiresponse",{"_index":1583,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1234,"title":{},"body":{"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["informa��es",{"_index":1663,"title":{},"body":{"index.html":{}}}],["infra/common/guards/jwt",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/common/interceptor/transformresponse.interceptor",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/common/strategies/jwt.strategy",{"_index":157,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/common/strategies/local.strategy",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/config/environment",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/controllers/auth/auth.dto",{"_index":764,"title":{},"body":{"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{}}}],["infra/controllers/auth/auth.presenter",{"_index":765,"title":{},"body":{"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{}}}],["infra/controllers/controllers.module",{"_index":161,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/controllers/transaction/transaction.dto",{"_index":997,"title":{},"body":{"interfaces/ITransactionRepository.html":{}}}],["infra/controllers/user/user.dto",{"_index":457,"title":{},"body":{"classes/CreateUserUseCase.html":{},"interfaces/IUserRepository.html":{},"classes/UpdateUserUseCase.html":{}}}],["infra/exceptions/exceptions.module",{"_index":162,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/logger/logger.module",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/services/api/api.module",{"_index":164,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/services/bcrypt/bcrypt.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["infra/services/jwt/jwt.module",{"_index":168,"title":{},"body":{"modules/AppModule.html":{}}}],["ingl�s",{"_index":1732,"title":{},"body":{"index.html":{}}}],["inject",{"_index":108,"title":{},"body":{"modules/ApiConfigModule.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/CacheService.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["inject(authusecasesproxymodule.login_usecases_proxy",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{}}}],["inject(transactionusecasesproxymodule.delete_transaction_usecases_proxy",{"_index":1340,"title":{},"body":{"controllers/TransactionController.html":{}}}],["inject(transactionusecasesproxymodule.get_transaction_usecases_proxy",{"_index":1338,"title":{},"body":{"controllers/TransactionController.html":{}}}],["inject(transactionusecasesproxymodule.get_transactions_usecases_proxy",{"_index":1337,"title":{},"body":{"controllers/TransactionController.html":{}}}],["inject(transactionusecasesproxymodule.post_transaction_usecases_proxy",{"_index":1339,"title":{},"body":{"controllers/TransactionController.html":{}}}],["inject(userusecasesproxymodule.delete_user_usecases_proxy",{"_index":1501,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(userusecasesproxymodule.get_user_usecases_proxy",{"_index":1498,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(userusecasesproxymodule.get_users_usecases_proxy",{"_index":1497,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(userusecasesproxymodule.post_user_usecases_proxy",{"_index":1499,"title":{},"body":{"controllers/UserController.html":{}}}],["inject(userusecasesproxymodule.put_user_usecases_proxy",{"_index":1500,"title":{},"body":{"controllers/UserController.html":{}}}],["injectable",{"_index":110,"title":{"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/TransformResponseInterceptor.html":{}},"body":{"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["injectables",{"_index":111,"title":{},"body":{"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"injectables/TransformResponseInterceptor.html":{},"overview.html":{}}}],["injectrepository",{"_index":509,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{}}}],["injectrepository(transaction",{"_index":514,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["injectrepository(user",{"_index":541,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["inr",{"_index":853,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["inserted",{"_index":426,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{}}}],["instanceof",{"_index":1416,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["integra��o",{"_index":1755,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":1394,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["intercept(context",{"_index":1399,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["interface",{"_index":67,"title":{"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"interfaces/RedisConfig.html":{}},"body":{"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"interfaces/RedisConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":69,"title":{},"body":{"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"interfaces/DatabaseConfig.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"interfaces/RedisConfig.html":{},"overview.html":{}}}],["interfaces/bcrypt.interface",{"_index":459,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["interfaces/cache.interface",{"_index":715,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{}}}],["interfaces/exceptions.interface",{"_index":555,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{}}}],["interfaces/jwt.interface",{"_index":1177,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["internal",{"_index":1836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internalservererrorexception",{"_index":701,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["internalservererrorexception(data",{"_index":705,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["invalid",{"_index":1084,"title":{},"body":{"injectables/LocalStrategy.html":{},"miscellaneous/variables.html":{}}}],["ip",{"_index":1092,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["iqd",{"_index":854,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["iquery",{"_index":958,"title":{"interfaces/IQuery.html":{}},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["irates",{"_index":787,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["irr",{"_index":855,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["is_public_key",{"_index":1023,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":646,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isdate",{"_index":1850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":1860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isenum",{"_index":655,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isenum(environment",{"_index":649,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isglobal",{"_index":579,"title":{},"body":{"modules/EnvironmentConfigModule.html":{}}}],["isk",{"_index":856,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["isnotempty",{"_index":1856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnumber",{"_index":644,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["isoptional",{"_index":1847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isoptionalcreatedatecolumn",{"_index":1565,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionaldatecolumn",{"_index":1567,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionalnumber",{"_index":1587,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionalnumbercolumn",{"_index":1572,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionalstring",{"_index":381,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/TransactionOptionsDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionalstringcolumn",{"_index":1099,"title":{},"body":{"entities/Log.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isoptionalupdatedatecolumn",{"_index":1570,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["ispublic",{"_index":1025,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"miscellaneous/variables.html":{}}}],["isrequiredcreatedatecolumn",{"_index":1574,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequireddate",{"_index":375,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequireddatecolumn",{"_index":1290,"title":{},"body":{"entities/Transaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequiredemail",{"_index":443,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequirednumber",{"_index":372,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequirednumbercolumn",{"_index":1111,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequiredstring",{"_index":238,"title":{},"body":{"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/TransactionOptionsDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isrequiredstringcolumn",{"_index":1097,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isstring",{"_index":639,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/variables.html":{}}}],["isuccesstransaction",{"_index":407,"title":{"interfaces/ISuccessTransaction.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["itens",{"_index":1742,"title":{},"body":{"index.html":{}}}],["itransaction",{"_index":408,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"miscellaneous/typealiases.html":{}}}],["itransactionerror",{"_index":956,"title":{"interfaces/ITransactionError.html":{}},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["itransactionoptions",{"_index":963,"title":{"interfaces/ITransactionOptions.html":{}},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{}}}],["itransactionrepository",{"_index":397,"title":{"interfaces/ITransactionRepository.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"interfaces/ITransactionRepository.html":{},"coverage.html":{}}}],["iuserrepository",{"_index":452,"title":{"interfaces/IUserRepository.html":{}},"body":{"classes/CreateUserUseCase.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IUserRepository.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["jep",{"_index":857,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["jmd",{"_index":858,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["job",{"_index":1260,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["jod",{"_index":859,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["join",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["join(__dirname",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["joincolumn",{"_index":1304,"title":{},"body":{"entities/Transaction.html":{}}}],["jpy",{"_index":860,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"index.html":{}}}],["json.parse(result",{"_index":342,"title":{},"body":{"injectables/CacheService.html":{}}}],["json.stringify(body",{"_index":1147,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["json.stringify(headers",{"_index":1148,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["json.stringify(value",{"_index":344,"title":{},"body":{"injectables/CacheService.html":{}}}],["jwt",{"_index":612,"title":{},"body":{"injectables/EnvironmentConfigService.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{},"overview.html":{}}}],["jwt.register",{"_index":1037,"title":{},"body":{"modules/JwtModule.html":{}}}],["jwt.service",{"_index":1036,"title":{},"body":{"modules/JwtModule.html":{}}}],["jwt_expiration_time",{"_index":637,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["jwt_secret",{"_index":638,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["jwtauthguard",{"_index":152,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":604,"title":{"interfaces/JWTConfig.html":{}},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/JWTConfig.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1053,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":166,"title":{"modules/JwtModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/JwtModule.html":{},"modules.html":{},"overview.html":{}}}],["jwtservice",{"_index":274,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"injectables/JwtTokenService.html":{},"classes/LoginUseCase.html":{}}}],["jwtservicemodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtstrategy",{"_index":140,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AppModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["jwttokenservice",{"_index":268,"title":{"injectables/JwtTokenService.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/JwtModule.html":{},"injectables/JwtTokenService.html":{},"coverage.html":{},"overview.html":{}}}],["kes",{"_index":861,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["key",{"_index":332,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DatabaseUserRepository.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/ICacheManager.html":{},"interfaces/IUserRepository.html":{}}}],["key.usecase.ts",{"_index":746,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{},"coverage.html":{}}}],["key.usecase.ts:13",{"_index":749,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["key.usecase.ts:6",{"_index":747,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["kgs",{"_index":862,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["khr",{"_index":863,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["kmf",{"_index":864,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["kpw",{"_index":865,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["krw",{"_index":866,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["kwd",{"_index":867,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["kyd",{"_index":868,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["kzt",{"_index":869,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["lak",{"_index":870,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["lbp",{"_index":871,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["length",{"_index":1143,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["license",{"_index":1780,"title":{},"body":{"properties.html":{}}}],["line",{"_index":1133,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["lint",{"_index":1753,"title":{},"body":{"index.html":{}}}],["listagem",{"_index":1707,"title":{},"body":{"index.html":{}}}],["lkr",{"_index":872,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["local",{"_index":661,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["localauthguard",{"_index":1067,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":141,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AppModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["log",{"_index":977,"title":{"entities/Log.html":{}},"body":{"interfaces/ILogger.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["log(context",{"_index":986,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["logged",{"_index":1187,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["logger",{"_index":13,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AuthUsecasesProxyModule.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UpdateUserUseCase.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["logger('allexceptionsfilter",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["logger.service",{"_index":1156,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger/logger.interface",{"_index":415,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["logger/logger.module",{"_index":258,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["logger/logger.service",{"_index":260,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["loggermiddleware",{"_index":1118,"title":{"injectables/LoggerMiddleware.html":{}},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["loggermodule",{"_index":139,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/LoggerModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":259,"title":{"injectables/LoggerService.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":1443,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":189,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IAuthRepository.html":{}}}],["login(@body",{"_index":228,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(authcredentials",{"_index":190,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(credentials",{"_index":760,"title":{},"body":{"interfaces/IAuthRepository.html":{}}}],["login_usecases_proxy",{"_index":271,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["loginusecase",{"_index":202,"title":{"classes/LoginUseCase.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"coverage.html":{}}}],["loginusecaseproxy",{"_index":1073,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["loginusecasesproxy",{"_index":272,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["logs",{"_index":1744,"title":{},"body":{"index.html":{}}}],["lrd",{"_index":873,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["lsl",{"_index":874,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ltl",{"_index":875,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["lvl",{"_index":876,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["lyd",{"_index":877,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mad",{"_index":878,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["main",{"_index":1563,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["main/decorators/columns/isrequiredstringcolumn.decorator",{"_index":1477,"title":{},"body":{"entities/User.html":{}}}],["main/decorators/ispublicroute.decorator",{"_index":205,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{}}}],["main/decorators/requests/deleteapiresponse.decorator",{"_index":1329,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["main/decorators/requests/getapiresponse.decorator",{"_index":1331,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["main/decorators/requests/postapiresponse.decorator",{"_index":207,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["main/decorators/requests/putapiresponse.decorator",{"_index":1490,"title":{},"body":{"controllers/UserController.html":{}}}],["main/decorators/validators/isrequiredstring.decorator",{"_index":240,"title":{},"body":{"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{}}}],["manager",{"_index":308,"title":{},"body":{"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"dependencies.html":{}}}],["manytoone",{"_index":1305,"title":{},"body":{"entities/Transaction.html":{}}}],["manytoone(undefined",{"_index":1297,"title":{},"body":{"entities/Transaction.html":{}}}],["map",{"_index":1405,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["map((response",{"_index":1415,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["matching",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mdl",{"_index":879,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mensagens",{"_index":1750,"title":{},"body":{"index.html":{}}}],["message",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/ILogger.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1616,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1093,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IJwtService.html":{},"interfaces/ILogger.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["mga",{"_index":880,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["middlewareconsumer",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["miscellaneous",{"_index":1622,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1079,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["mkd",{"_index":881,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mmk",{"_index":882,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mnt",{"_index":883,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["model",{"_index":1840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":78,"title":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["modules",{"_index":80,"title":{"modules.html":{}},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"classes/SetupDocumentBuilder.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["moeda",{"_index":1691,"title":{},"body":{"index.html":{}}}],["moedas",{"_index":1631,"title":{},"body":{"index.html":{}}}],["mop",{"_index":884,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["motiva��o",{"_index":1724,"title":{},"body":{"index.html":{}}}],["mro",{"_index":885,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ms",{"_index":1151,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["mur",{"_index":886,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mvr",{"_index":887,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mwk",{"_index":888,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mxn",{"_index":889,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["myr",{"_index":890,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["mzn",{"_index":891,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["m�nimo",{"_index":1682,"title":{},"body":{"index.html":{}}}],["nad",{"_index":892,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IJwtService.html":{},"interfaces/ILogger.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["necess�rio",{"_index":1654,"title":{},"body":{"index.html":{}}}],["nenhuma",{"_index":1737,"title":{},"body":{"index.html":{}}}],["nesse",{"_index":1734,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1404,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["nestjs/axios",{"_index":94,"title":{},"body":{"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/NestResponseBuilder.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":305,"title":{},"body":{"modules/CacheConfigModule.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"classes/SetupGlobalInterceptors.html":{},"injectables/TransformResponseInterceptor.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":1035,"title":{},"body":{"modules/JwtModule.html":{},"injectables/JwtTokenService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1600,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":201,"title":{},"body":{"controllers/AuthController.html":{},"classes/SetupDocumentBuilder.html":{},"controllers/TransactionController.html":{},"classes/TransactionPresenter.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":510,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"modules/RepositoriesModule.html":{},"modules/TypeOrmConfigModule.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":1125,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["nestresponse",{"_index":1190,"title":{"classes/NestResponse.html":{}},"body":{"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["nestresponse(this.response",{"_index":1216,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["nestresponsebuilder",{"_index":1197,"title":{"classes/NestResponseBuilder.html":{}},"body":{"classes/NestResponseBuilder.html":{},"coverage.html":{}}}],["new",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/EnvironmentVariables.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LoggerMiddleware.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalInterceptors.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["newtransaction",{"_index":416,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{}}}],["newtransaction.error.info",{"_index":439,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["newtransaction.info.rate",{"_index":418,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["newtransaction.result",{"_index":421,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["newtransaction.success",{"_index":434,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["newuser",{"_index":544,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["next",{"_index":1122,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["next.handle().pipe",{"_index":1414,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["nextfunction",{"_index":1123,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["ngn",{"_index":893,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["nio",{"_index":894,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["node.js",{"_index":1678,"title":{},"body":{"index.html":{}}}],["nok",{"_index":895,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["notfoundexception",{"_index":703,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["notfoundexception(data",{"_index":708,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["npr",{"_index":896,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["nullable",{"_index":1471,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":371,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"entities/Log.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"miscellaneous/variables.html":{}}}],["number(process.env.redis_port",{"_index":323,"title":{},"body":{"modules/CacheConfigModule.html":{}}}],["nzd",{"_index":897,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["o",{"_index":1655,"title":{},"body":{"index.html":{}}}],["object",{"_index":1194,"title":{},"body":{"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":241,"title":{},"body":{"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/NestResponse.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UserPresenter.html":{}}}],["object.getownpropertynames(headers",{"_index":1422,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["observable",{"_index":1402,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["obtidas",{"_index":1684,"title":{},"body":{"index.html":{}}}],["omit",{"_index":1179,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["omr",{"_index":898,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ondelete",{"_index":1299,"title":{},"body":{"entities/Transaction.html":{},"entities/User.html":{}}}],["one",{"_index":732,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"coverage.html":{}}}],["onetomany",{"_index":1476,"title":{},"body":{"entities/User.html":{}}}],["onetomany(undefined",{"_index":1469,"title":{},"body":{"entities/User.html":{}}}],["optional",{"_index":27,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":1310,"title":{},"body":{"controllers/TransactionController.html":{}}}],["origem",{"_index":1692,"title":{},"body":{"index.html":{}}}],["ou",{"_index":1763,"title":{},"body":{"index.html":{}}}],["out",{"_index":89,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"overview.html":{}}}],["overview",{"_index":1772,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["pab",{"_index":899,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["package",{"_index":1595,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":1651,"title":{},"body":{"index.html":{}}}],["param",{"_index":1321,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["param('id",{"_index":1510,"title":{},"body":{"controllers/UserController.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IJwtService.html":{},"interfaces/ILogger.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(value",{"_index":1854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["part",{"_index":1258,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["party",{"_index":625,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["passport",{"_index":1050,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["passportstrategy",{"_index":1047,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":1052,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passreqtocallback",{"_index":1076,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["password",{"_index":234,"title":{},"body":{"classes/AuthDTO.html":{},"classes/CreateUserDTO.html":{},"interfaces/IAuthRepository.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["payload",{"_index":973,"title":{},"body":{"interfaces/IJwtService.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{}}}],["payload.id",{"_index":1057,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":1058,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pen",{"_index":900,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["persistidas",{"_index":1686,"title":{},"body":{"index.html":{}}}],["pg",{"_index":1612,"title":{},"body":{"dependencies.html":{}}}],["pgk",{"_index":901,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["php",{"_index":902,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["pkr",{"_index":903,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["plaintoclass",{"_index":653,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["plaintoclass(environmentvariables",{"_index":667,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["pln",{"_index":904,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["pl�gio",{"_index":1741,"title":{},"body":{"index.html":{}}}],["por",{"_index":1673,"title":{},"body":{"index.html":{}}}],["port",{"_index":317,"title":{},"body":{"modules/CacheConfigModule.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["position",{"_index":1261,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["poss�vel",{"_index":1680,"title":{},"body":{"index.html":{}}}],["post(param",{"_index":1862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["post_transaction_usecases_proxy",{"_index":1383,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["post_user_usecases_proxy",{"_index":1531,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["postapiresponse",{"_index":206,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["postapiresponse(authpresenter",{"_index":226,"title":{},"body":{"controllers/AuthController.html":{}}}],["postapiresponse(transactionpresenter",{"_index":1348,"title":{},"body":{"controllers/TransactionController.html":{}}}],["postapiresponse(userpresenter",{"_index":1506,"title":{},"body":{"controllers/UserController.html":{}}}],["posttransactionusecasesproxy",{"_index":1384,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["postuserusecasesproxy",{"_index":1532,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["prefix",{"_index":187,"title":{},"body":{"controllers/AuthController.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["primarygeneratedcolumn",{"_index":1117,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":1104,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{},"entities/User.html":{}}}],["principais",{"_index":1725,"title":{},"body":{"index.html":{}}}],["private",{"_index":11,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"controllers/TransactionController.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["problems",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["process.env.jwt_secret",{"_index":1039,"title":{},"body":{"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{}}}],["process.env.redis_host",{"_index":322,"title":{},"body":{"modules/CacheConfigModule.html":{}}}],["production",{"_index":660,"title":{},"body":{"classes/EnvironmentVariables.html":{},"modules/TypeOrmConfigModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["projeto",{"_index":1674,"title":{},"body":{"index.html":{}}}],["promise",{"_index":103,"title":{},"body":{"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"controllers/TransactionController.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":10,"title":{"properties.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/EnvironmentVariables.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"entities/Log.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"classes/UserPresenter.html":{},"properties.html":{}}}],["property",{"_index":1848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["props",{"_index":237,"title":{},"body":{"classes/AuthDTO.html":{},"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{},"miscellaneous/variables.html":{}}}],["prop�sito",{"_index":1722,"title":{},"body":{"index.html":{}}}],["provide",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["proxy",{"_index":214,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["proxy.module",{"_index":211,"title":{},"body":{"controllers/AuthController.html":{},"modules/ControllersModule.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["proxy.module.ts",{"_index":251,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["proxy.module.ts:29",{"_index":253,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["proxy.module.ts:38",{"_index":1373,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["proxy.module.ts:41",{"_index":1523,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["proxy.ts",{"_index":1456,"title":{},"body":{"classes/UseCaseProxy.html":{},"coverage.html":{}}}],["proxy.ts:1",{"_index":1458,"title":{},"body":{"classes/UseCaseProxy.html":{}}}],["proxy.ts:4",{"_index":1459,"title":{},"body":{"classes/UseCaseProxy.html":{}}}],["proxy/auth/auth",{"_index":210,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/ControllersModule.html":{},"injectables/LocalStrategy.html":{}}}],["proxy/transaction/transaction",{"_index":353,"title":{},"body":{"modules/ControllersModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{}}}],["proxy/usecase",{"_index":213,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["proxy/user/user",{"_index":354,"title":{},"body":{"modules/ControllersModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["public",{"_index":113,"title":{},"body":{"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public()@postapiresponse(authpresenter",{"_index":193,"title":{},"body":{"controllers/AuthController.html":{}}}],["public()@postapiresponse(userpresenter",{"_index":1480,"title":{},"body":{"controllers/UserController.html":{}}}],["public()@useguards(undefined)@postapiresponse(transactionpresenter",{"_index":1311,"title":{},"body":{"controllers/TransactionController.html":{}}}],["public/auth",{"_index":188,"title":{},"body":{"controllers/AuthController.html":{}}}],["put(param",{"_index":1866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["put_user_usecases_proxy",{"_index":1535,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["putapiresponse",{"_index":1489,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["putapiresponse(userpresenter",{"_index":1486,"title":{},"body":{"controllers/UserController.html":{}}}],["putuserusecasesproxy",{"_index":1536,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["pwzbjeuzx0yuhvt9i",{"_index":1820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pyg",{"_index":905,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["p�blica",{"_index":1739,"title":{},"body":{"index.html":{}}}],["qar",{"_index":906,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["que",{"_index":1637,"title":{},"body":{"index.html":{}}}],["query",{"_index":960,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"miscellaneous/variables.html":{}}}],["rate",{"_index":785,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["rates",{"_index":962,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["readonly",{"_index":12,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"controllers/TransactionController.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{}}}],["realizadas",{"_index":1672,"title":{},"body":{"index.html":{}}}],["realizar",{"_index":1640,"title":{},"body":{"index.html":{}}}],["realiza��o",{"_index":1652,"title":{},"body":{"index.html":{}}}],["record",{"_index":665,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["records",{"_index":1844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recruiting",{"_index":1245,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["recruitment",{"_index":1259,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["redis",{"_index":309,"title":{},"body":{"modules/CacheConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"dependencies.html":{}}}],["redisconfig",{"_index":606,"title":{"interfaces/RedisConfig.html":{}},"body":{"injectables/EnvironmentConfigService.html":{},"interfaces/RedisConfig.html":{},"coverage.html":{}}}],["redisstore",{"_index":306,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["referer",{"_index":1094,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["reflect",{"_index":1615,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1014,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"classes/SetupGlobalInterceptors.html":{}}}],["register",{"_index":252,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["registrar",{"_index":1658,"title":{},"body":{"index.html":{}}}],["rejectunauthorized",{"_index":1445,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["relacionadas",{"_index":1664,"title":{},"body":{"index.html":{}}}],["renderpath",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["report",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["repositories/repositories.module",{"_index":261,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["repositories/transaction.repository",{"_index":556,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"modules/TransactionUsecasesProxyModule.html":{}}}],["repositories/user.repository",{"_index":263,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["repositoriesmodule",{"_index":249,"title":{"modules/RepositoriesModule.html":{}},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["repository",{"_index":396,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UpdateUserUseCase.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["reposit�rio",{"_index":1735,"title":{},"body":{"index.html":{}}}],["req",{"_index":1322,"title":{},"body":{"controllers/TransactionController.html":{}}}],["request",{"_index":768,"title":{},"body":{"interfaces/IAuthRequest.html":{},"injectables/LoggerMiddleware.html":{},"controllers/TransactionController.html":{},"miscellaneous/variables.html":{}}}],["request.get('referer",{"_index":1139,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.get('user",{"_index":1129,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["request.user.id",{"_index":1342,"title":{},"body":{"controllers/TransactionController.html":{}}}],["requestedat",{"_index":1095,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["require('os').hostname",{"_index":1138,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["required",{"_index":1817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requires",{"_index":1137,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["reset",{"_index":88,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"overview.html":{}}}],["resource",{"_index":1833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"classes/CreateTransactionUseCase.html":{},"injectables/LoggerMiddleware.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["response.data",{"_index":433,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["response.get('content",{"_index":1142,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.on('close",{"_index":1141,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["response.status(status).json",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["rest",{"_index":1636,"title":{},"body":{"index.html":{}}}],["result",{"_index":340,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["results",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retornar",{"_index":1700,"title":{},"body":{"index.html":{}}}],["retrieved",{"_index":1865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["return",{"_index":132,"title":{},"body":{"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":29,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IJwtService.html":{},"interfaces/ILogger.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["rodando",{"_index":1759,"title":{},"body":{"index.html":{}}}],["rodar",{"_index":1719,"title":{},"body":{"index.html":{}}}],["ron",{"_index":907,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["rootpath",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["rsd",{"_index":908,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["rub",{"_index":909,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["rwf",{"_index":910,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["rxjs",{"_index":1406,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{},"dependencies.html":{}}}],["salt",{"_index":293,"title":{},"body":{"injectables/BcryptService.html":{}}}],["sample",{"_index":1247,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["sar",{"_index":911,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["satisfat�ria",{"_index":1710,"title":{},"body":{"index.html":{}}}],["sbd",{"_index":912,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["scr",{"_index":913,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["sdg",{"_index":914,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["se",{"_index":1712,"title":{},"body":{"index.html":{}}}],["secret",{"_index":1038,"title":{},"body":{"modules/JwtModule.html":{}}}],["secretorkey",{"_index":1056,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":1255,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["seja",{"_index":1638,"title":{},"body":{"index.html":{}}}],["sek",{"_index":915,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["sem",{"_index":1736,"title":{},"body":{"index.html":{}}}],["separa��o",{"_index":1728,"title":{},"body":{"index.html":{}}}],["ser",{"_index":1675,"title":{},"body":{"index.html":{}}}],["server",{"_index":1837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../api.module.ts",{"_index":1789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../cache.module.ts",{"_index":1791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../deleteapiresponse.decorator.ts",{"_index":1788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../environment",{"_index":1624,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["server/.../getapiresponse.decorator.ts",{"_index":1790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../indexapiresponse.decorator.ts",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalcreatedatecolumn.decorator.ts",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionaldatecolumn.decorator.ts",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalnumber.decorator.ts",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalnumbercolumn.decorator.ts",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalstring.decorator.ts",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalstringcolumn.decorator.ts",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isoptionalupdatedatecolumn.decorator.ts",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../ispublicroute.decorator.ts",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequiredcreatedatecolumn.decorator.ts",{"_index":1803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequireddate.decorator.ts",{"_index":1804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequireddatecolumn.decorator.ts",{"_index":1805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequiredemail.decorator.ts",{"_index":1806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequirednumber.decorator.ts",{"_index":1807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequirednumbercolumn.decorator.ts",{"_index":1808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequiredstring.decorator.ts",{"_index":1809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequiredstringcolumn.decorator.ts",{"_index":1810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../isrequiredupdatedatecolumn.decorator.ts",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../main.ts",{"_index":1626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["server/.../postapiresponse.decorator.ts",{"_index":1811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../putapiresponse.decorator.ts",{"_index":1812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/.../transaction.interface.ts",{"_index":1786,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["server/.../typeorm.module.ts",{"_index":1792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server/app.module.ts",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["server/domain/config/ambient.interface.ts",{"_index":70,"title":{},"body":{"interfaces/AmbientConfig.html":{},"coverage.html":{}}}],["server/domain/config/ambient.interface.ts:2",{"_index":72,"title":{},"body":{"interfaces/AmbientConfig.html":{}}}],["server/domain/config/api.interface.ts",{"_index":75,"title":{},"body":{"interfaces/ApiConfig.html":{},"coverage.html":{}}}],["server/domain/config/api.interface.ts:2",{"_index":77,"title":{},"body":{"interfaces/ApiConfig.html":{}}}],["server/domain/config/database.interface.ts",{"_index":473,"title":{},"body":{"interfaces/DatabaseConfig.html":{},"coverage.html":{}}}],["server/domain/config/database.interface.ts:2",{"_index":482,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:3",{"_index":485,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:4",{"_index":490,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:5",{"_index":484,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:6",{"_index":483,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:7",{"_index":486,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:8",{"_index":487,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/database.interface.ts:9",{"_index":489,"title":{},"body":{"interfaces/DatabaseConfig.html":{}}}],["server/domain/config/jwt.interface.ts",{"_index":1006,"title":{},"body":{"interfaces/JWTConfig.html":{},"coverage.html":{}}}],["server/domain/config/jwt.interface.ts:2",{"_index":1008,"title":{},"body":{"interfaces/JWTConfig.html":{}}}],["server/domain/config/jwt.interface.ts:3",{"_index":1007,"title":{},"body":{"interfaces/JWTConfig.html":{}}}],["server/domain/config/redis.interface.ts",{"_index":1217,"title":{},"body":{"interfaces/RedisConfig.html":{},"coverage.html":{}}}],["server/domain/config/redis.interface.ts:2",{"_index":1218,"title":{},"body":{"interfaces/RedisConfig.html":{}}}],["server/domain/config/redis.interface.ts:3",{"_index":1219,"title":{},"body":{"interfaces/RedisConfig.html":{}}}],["server/domain/core/http/nestresponse.builder.ts",{"_index":1198,"title":{},"body":{"classes/NestResponseBuilder.html":{},"coverage.html":{}}}],["server/domain/core/http/nestresponse.builder.ts:11",{"_index":1212,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["server/domain/core/http/nestresponse.builder.ts:17",{"_index":1210,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["server/domain/core/http/nestresponse.builder.ts:23",{"_index":1208,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["server/domain/core/http/nestresponse.builder.ts:29",{"_index":1206,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["server/domain/core/http/nestresponse.builder.ts:5",{"_index":1205,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["server/domain/core/http/nestresponse.ts",{"_index":1191,"title":{},"body":{"classes/NestResponse.html":{},"coverage.html":{}}}],["server/domain/core/http/nestresponse.ts:2",{"_index":1196,"title":{},"body":{"classes/NestResponse.html":{}}}],["server/domain/core/http/nestresponse.ts:3",{"_index":1195,"title":{},"body":{"classes/NestResponse.html":{}}}],["server/domain/core/http/nestresponse.ts:4",{"_index":1193,"title":{},"body":{"classes/NestResponse.html":{}}}],["server/domain/entities/log.entity.ts",{"_index":1087,"title":{},"body":{"entities/Log.html":{},"coverage.html":{}}}],["server/domain/entities/log.entity.ts:12",{"_index":1106,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:15",{"_index":1107,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:18",{"_index":1108,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:21",{"_index":1112,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:24",{"_index":1100,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:27",{"_index":1113,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:30",{"_index":1103,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:33",{"_index":1109,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:36",{"_index":1098,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:39",{"_index":1102,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:42",{"_index":1110,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:45",{"_index":1101,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/log.entity.ts:9",{"_index":1105,"title":{},"body":{"entities/Log.html":{}}}],["server/domain/entities/transaction.entity.ts",{"_index":1288,"title":{},"body":{"entities/Transaction.html":{},"coverage.html":{}}}],["server/domain/entities/transaction.entity.ts:10",{"_index":1294,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:13",{"_index":1302,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:16",{"_index":1295,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:19",{"_index":1292,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:22",{"_index":1296,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:25",{"_index":1293,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:28",{"_index":1289,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:31",{"_index":1291,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/transaction.entity.ts:35",{"_index":1301,"title":{},"body":{"entities/Transaction.html":{}}}],["server/domain/entities/user.entity.ts",{"_index":1461,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["server/domain/entities/user.entity.ts:14",{"_index":1467,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:17",{"_index":1475,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:20",{"_index":1466,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:23",{"_index":1468,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:26",{"_index":1465,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:29",{"_index":1474,"title":{},"body":{"entities/User.html":{}}}],["server/domain/entities/user.entity.ts:36",{"_index":1472,"title":{},"body":{"entities/User.html":{}}}],["server/domain/interfaces/api.interface.ts",{"_index":753,"title":{},"body":{"interfaces/IApiService.html":{},"coverage.html":{}}}],["server/domain/interfaces/api.interface.ts:4",{"_index":754,"title":{},"body":{"interfaces/IApiService.html":{}}}],["server/domain/interfaces/auth.interface.ts",{"_index":756,"title":{},"body":{"interfaces/IAuth.html":{},"coverage.html":{}}}],["server/domain/interfaces/authrequest.interface.ts",{"_index":767,"title":{},"body":{"interfaces/IAuthRequest.html":{},"coverage.html":{}}}],["server/domain/interfaces/bcrypt.interface.ts",{"_index":771,"title":{},"body":{"interfaces/IBcryptService.html":{},"coverage.html":{}}}],["server/domain/interfaces/bcrypt.interface.ts:2",{"_index":773,"title":{},"body":{"interfaces/IBcryptService.html":{}}}],["server/domain/interfaces/bcrypt.interface.ts:3",{"_index":772,"title":{},"body":{"interfaces/IBcryptService.html":{}}}],["server/domain/interfaces/cache.interface.ts",{"_index":774,"title":{},"body":{"interfaces/ICacheManager.html":{},"coverage.html":{}}}],["server/domain/interfaces/cache.interface.ts:2",{"_index":775,"title":{},"body":{"interfaces/ICacheManager.html":{}}}],["server/domain/interfaces/cache.interface.ts:4",{"_index":776,"title":{},"body":{"interfaces/ICacheManager.html":{}}}],["server/domain/interfaces/exceptions.interface.ts",{"_index":777,"title":{},"body":{"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"coverage.html":{}}}],["server/domain/interfaces/exceptions.interface.ts:10",{"_index":779,"title":{},"body":{"interfaces/IExceptionService.html":{}}}],["server/domain/interfaces/exceptions.interface.ts:11",{"_index":782,"title":{},"body":{"interfaces/IExceptionService.html":{}}}],["server/domain/interfaces/exceptions.interface.ts:12",{"_index":781,"title":{},"body":{"interfaces/IExceptionService.html":{}}}],["server/domain/interfaces/exceptions.interface.ts:8",{"_index":778,"title":{},"body":{"interfaces/IExceptionService.html":{}}}],["server/domain/interfaces/exceptions.interface.ts:9",{"_index":780,"title":{},"body":{"interfaces/IExceptionService.html":{}}}],["server/domain/interfaces/jwt.interface.ts",{"_index":965,"title":{},"body":{"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"coverage.html":{}}}],["server/domain/interfaces/jwt.interface.ts:8",{"_index":969,"title":{},"body":{"interfaces/IJwtService.html":{}}}],["server/domain/interfaces/jwt.interface.ts:9",{"_index":972,"title":{},"body":{"interfaces/IJwtService.html":{}}}],["server/domain/interfaces/transaction.interface.ts",{"_index":784,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["server/domain/logger/logger.interface.ts",{"_index":975,"title":{},"body":{"interfaces/ILogger.html":{},"coverage.html":{}}}],["server/domain/logger/logger.interface.ts:2",{"_index":981,"title":{},"body":{"interfaces/ILogger.html":{}}}],["server/domain/logger/logger.interface.ts:3",{"_index":987,"title":{},"body":{"interfaces/ILogger.html":{}}}],["server/domain/logger/logger.interface.ts:4",{"_index":985,"title":{},"body":{"interfaces/ILogger.html":{}}}],["server/domain/logger/logger.interface.ts:5",{"_index":991,"title":{},"body":{"interfaces/ILogger.html":{}}}],["server/domain/logger/logger.interface.ts:6",{"_index":989,"title":{},"body":{"interfaces/ILogger.html":{}}}],["server/domain/repositories/auth.repository.ts",{"_index":758,"title":{},"body":{"interfaces/IAuthRepository.html":{},"coverage.html":{}}}],["server/domain/repositories/auth.repository.ts:6",{"_index":761,"title":{},"body":{"interfaces/IAuthRepository.html":{}}}],["server/domain/repositories/auth.repository.ts:8",{"_index":763,"title":{},"body":{"interfaces/IAuthRepository.html":{}}}],["server/domain/repositories/transaction.repository.ts",{"_index":992,"title":{},"body":{"interfaces/ITransactionRepository.html":{},"coverage.html":{}}}],["server/domain/repositories/transaction.repository.ts:5",{"_index":995,"title":{},"body":{"interfaces/ITransactionRepository.html":{}}}],["server/domain/repositories/transaction.repository.ts:6",{"_index":996,"title":{},"body":{"interfaces/ITransactionRepository.html":{}}}],["server/domain/repositories/transaction.repository.ts:7",{"_index":993,"title":{},"body":{"interfaces/ITransactionRepository.html":{}}}],["server/domain/repositories/transaction.repository.ts:8",{"_index":994,"title":{},"body":{"interfaces/ITransactionRepository.html":{}}}],["server/domain/repositories/user.repository.ts",{"_index":998,"title":{},"body":{"interfaces/IUserRepository.html":{},"coverage.html":{}}}],["server/domain/repositories/user.repository.ts:10",{"_index":1003,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:11",{"_index":1000,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:12",{"_index":1005,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:13",{"_index":1001,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:14",{"_index":999,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:8",{"_index":1002,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/repositories/user.repository.ts:9",{"_index":1004,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["server/domain/use",{"_index":389,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["server/infra/common/filters/exception.filter.ts",{"_index":6,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["server/infra/common/filters/exception.filter.ts:14",{"_index":24,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["server/infra/common/filters/exception.filter.ts:6",{"_index":18,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["server/infra/common/guards/jwt",{"_index":1009,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["server/infra/common/guards/local",{"_index":1068,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["server/infra/common/interceptor/transformresponse.interceptor.ts",{"_index":1392,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["server/infra/common/interceptor/transformresponse.interceptor.ts:13",{"_index":1397,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["server/infra/common/interceptor/transformresponse.interceptor.ts:20",{"_index":1401,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["server/infra/common/middlewares/logger.middleware.ts",{"_index":1119,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"coverage.html":{}}}],["server/infra/common/middlewares/logger.middleware.ts:8",{"_index":1124,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["server/infra/common/strategies/jwt.strategy.ts",{"_index":1043,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["server/infra/common/strategies/jwt.strategy.ts:16",{"_index":1046,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/infra/common/strategies/jwt.strategy.ts:7",{"_index":1044,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server/infra/common/strategies/local.strategy.ts",{"_index":1070,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["server/infra/common/strategies/local.strategy.ts:11",{"_index":1072,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["server/infra/common/strategies/local.strategy.ts:24",{"_index":1075,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["server/infra/common/utils/setupcontainer.utils.ts",{"_index":1232,"title":{},"body":{"classes/SetupContainer.html":{},"coverage.html":{}}}],["server/infra/common/utils/setupcontainer.utils.ts:5",{"_index":1235,"title":{},"body":{"classes/SetupContainer.html":{}}}],["server/infra/common/utils/setupdocumentbuilder.utils.ts",{"_index":1240,"title":{},"body":{"classes/SetupDocumentBuilder.html":{},"coverage.html":{}}}],["server/infra/common/utils/setupdocumentbuilder.utils.ts:5",{"_index":1241,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["server/infra/common/utils/setupglobalfilters.utils.ts",{"_index":1273,"title":{},"body":{"classes/SetupGlobalFilters.html":{},"coverage.html":{}}}],["server/infra/common/utils/setupglobalfilters.utils.ts:5",{"_index":1274,"title":{},"body":{"classes/SetupGlobalFilters.html":{}}}],["server/infra/common/utils/setupglobalinterceptors.utils.ts",{"_index":1278,"title":{},"body":{"classes/SetupGlobalInterceptors.html":{},"coverage.html":{}}}],["server/infra/common/utils/setupglobalinterceptors.utils.ts:5",{"_index":1279,"title":{},"body":{"classes/SetupGlobalInterceptors.html":{}}}],["server/infra/common/utils/setupglobalpipes.utils.ts",{"_index":1283,"title":{},"body":{"classes/SetupGlobalPipes.html":{},"coverage.html":{}}}],["server/infra/common/utils/setupglobalpipes.utils.ts:4",{"_index":1284,"title":{},"body":{"classes/SetupGlobalPipes.html":{}}}],["server/infra/config/environment",{"_index":573,"title":{},"body":{"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["server/infra/config/redis/cache.module.ts",{"_index":302,"title":{},"body":{"modules/CacheConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/infra/config/redis/cache.service.ts",{"_index":324,"title":{},"body":{"injectables/CacheService.html":{},"coverage.html":{}}}],["server/infra/config/redis/cache.service.ts:14",{"_index":335,"title":{},"body":{"injectables/CacheService.html":{}}}],["server/infra/config/redis/cache.service.ts:6",{"_index":328,"title":{},"body":{"injectables/CacheService.html":{}}}],["server/infra/config/redis/cache.service.ts:9",{"_index":331,"title":{},"body":{"injectables/CacheService.html":{}}}],["server/infra/config/typeorm/typeorm.module.ts",{"_index":1429,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/infra/controllers/auth/auth.controller.ts",{"_index":186,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["server/infra/controllers/auth/auth.controller.ts:25",{"_index":195,"title":{},"body":{"controllers/AuthController.html":{}}}],["server/infra/controllers/auth/auth.dto.ts",{"_index":232,"title":{},"body":{"classes/AuthDTO.html":{},"coverage.html":{}}}],["server/infra/controllers/auth/auth.dto.ts:5",{"_index":239,"title":{},"body":{"classes/AuthDTO.html":{}}}],["server/infra/controllers/auth/auth.dto.ts:8",{"_index":236,"title":{},"body":{"classes/AuthDTO.html":{}}}],["server/infra/controllers/auth/auth.presenter.ts",{"_index":242,"title":{},"body":{"classes/AuthPresenter.html":{},"coverage.html":{}}}],["server/infra/controllers/auth/auth.presenter.ts:5",{"_index":245,"title":{},"body":{"classes/AuthPresenter.html":{}}}],["server/infra/controllers/controllers.module.ts",{"_index":350,"title":{},"body":{"modules/ControllersModule.html":{}}}],["server/infra/controllers/transaction/transaction.controller.ts",{"_index":1308,"title":{},"body":{"controllers/TransactionController.html":{},"coverage.html":{}}}],["server/infra/controllers/transaction/transaction.controller.ts:45",{"_index":1317,"title":{},"body":{"controllers/TransactionController.html":{}}}],["server/infra/controllers/transaction/transaction.controller.ts:60",{"_index":1319,"title":{},"body":{"controllers/TransactionController.html":{}}}],["server/infra/controllers/transaction/transaction.controller.ts:70",{"_index":1312,"title":{},"body":{"controllers/TransactionController.html":{}}}],["server/infra/controllers/transaction/transaction.controller.ts:90",{"_index":1314,"title":{},"body":{"controllers/TransactionController.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts",{"_index":362,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{},"coverage.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:11",{"_index":378,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:14",{"_index":376,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:17",{"_index":379,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:20",{"_index":377,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:23",{"_index":373,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:26",{"_index":370,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:35",{"_index":1359,"title":{},"body":{"classes/TransactionOptionsDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:38",{"_index":1357,"title":{},"body":{"classes/TransactionOptionsDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:41",{"_index":1358,"title":{},"body":{"classes/TransactionOptionsDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:44",{"_index":1356,"title":{},"body":{"classes/TransactionOptionsDTO.html":{}}}],["server/infra/controllers/transaction/transaction.dto.ts:8",{"_index":380,"title":{},"body":{"classes/CreateTransactionDTO.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts",{"_index":1360,"title":{},"body":{"classes/TransactionPresenter.html":{},"coverage.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:11",{"_index":1368,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:14",{"_index":1365,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:17",{"_index":1369,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:20",{"_index":1366,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:23",{"_index":1364,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:26",{"_index":1362,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:5",{"_index":1367,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/transaction/transaction.presenter.ts:8",{"_index":1370,"title":{},"body":{"classes/TransactionPresenter.html":{}}}],["server/infra/controllers/user/user.controller.ts",{"_index":1479,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["server/infra/controllers/user/user.controller.ts:38",{"_index":1484,"title":{},"body":{"controllers/UserController.html":{}}}],["server/infra/controllers/user/user.controller.ts:44",{"_index":1485,"title":{},"body":{"controllers/UserController.html":{}}}],["server/infra/controllers/user/user.controller.ts:51",{"_index":1481,"title":{},"body":{"controllers/UserController.html":{}}}],["server/infra/controllers/user/user.controller.ts:60",{"_index":1487,"title":{},"body":{"controllers/UserController.html":{}}}],["server/infra/controllers/user/user.controller.ts:73",{"_index":1482,"title":{},"body":{"controllers/UserController.html":{}}}],["server/infra/controllers/user/user.dto.ts",{"_index":441,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdateUserDTO.html":{},"coverage.html":{}}}],["server/infra/controllers/user/user.dto.ts:10",{"_index":444,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["server/infra/controllers/user/user.dto.ts:13",{"_index":445,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["server/infra/controllers/user/user.dto.ts:18",{"_index":1449,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["server/infra/controllers/user/user.dto.ts:21",{"_index":1447,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["server/infra/controllers/user/user.dto.ts:24",{"_index":1448,"title":{},"body":{"classes/UpdateUserDTO.html":{}}}],["server/infra/controllers/user/user.dto.ts:7",{"_index":446,"title":{},"body":{"classes/CreateUserDTO.html":{}}}],["server/infra/controllers/user/user.presenter.ts",{"_index":1514,"title":{},"body":{"classes/UserPresenter.html":{},"coverage.html":{}}}],["server/infra/controllers/user/user.presenter.ts:12",{"_index":1518,"title":{},"body":{"classes/UserPresenter.html":{}}}],["server/infra/controllers/user/user.presenter.ts:15",{"_index":1517,"title":{},"body":{"classes/UserPresenter.html":{}}}],["server/infra/controllers/user/user.presenter.ts:18",{"_index":1516,"title":{},"body":{"classes/UserPresenter.html":{}}}],["server/infra/controllers/user/user.presenter.ts:6",{"_index":1519,"title":{},"body":{"classes/UserPresenter.html":{}}}],["server/infra/controllers/user/user.presenter.ts:9",{"_index":1520,"title":{},"body":{"classes/UserPresenter.html":{}}}],["server/infra/exceptions/exceptions.module.ts",{"_index":679,"title":{},"body":{"modules/ExceptionsModule.html":{}}}],["server/infra/exceptions/exceptions.service.ts",{"_index":681,"title":{},"body":{"injectables/ExceptionsService.html":{},"coverage.html":{}}}],["server/infra/exceptions/exceptions.service.ts:16",{"_index":689,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["server/infra/exceptions/exceptions.service.ts:20",{"_index":694,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["server/infra/exceptions/exceptions.service.ts:24",{"_index":692,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["server/infra/exceptions/exceptions.service.ts:28",{"_index":698,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["server/infra/exceptions/exceptions.service.ts:32",{"_index":696,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["server/infra/logger/logger.module.ts",{"_index":1155,"title":{},"body":{"modules/LoggerModule.html":{}}}],["server/infra/logger/logger.service.ts",{"_index":1157,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["server/infra/logger/logger.service.ts:11",{"_index":1160,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/logger/logger.service.ts:17",{"_index":1162,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/logger/logger.service.ts:21",{"_index":1161,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/logger/logger.service.ts:25",{"_index":1164,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/logger/logger.service.ts:29",{"_index":1163,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/logger/logger.service.ts:6",{"_index":1159,"title":{},"body":{"injectables/LoggerService.html":{}}}],["server/infra/repositories/repositories.module.ts",{"_index":1225,"title":{},"body":{"modules/RepositoriesModule.html":{}}}],["server/infra/repositories/transaction.repository.ts",{"_index":492,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"coverage.html":{}}}],["server/infra/repositories/transaction.repository.ts:14",{"_index":506,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["server/infra/repositories/transaction.repository.ts:20",{"_index":508,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["server/infra/repositories/transaction.repository.ts:24",{"_index":501,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["server/infra/repositories/transaction.repository.ts:29",{"_index":503,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["server/infra/repositories/transaction.repository.ts:8",{"_index":498,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["server/infra/repositories/user.repository.ts",{"_index":520,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"coverage.html":{}}}],["server/infra/repositories/user.repository.ts:14",{"_index":533,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:18",{"_index":536,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:22",{"_index":535,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:28",{"_index":531,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:33",{"_index":538,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:37",{"_index":532,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:46",{"_index":528,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/repositories/user.repository.ts:8",{"_index":525,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["server/infra/services/api/api.module.ts",{"_index":90,"title":{},"body":{"modules/ApiConfigModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/infra/services/api/api.service.ts",{"_index":112,"title":{},"body":{"injectables/ApiConfigService.html":{},"coverage.html":{}}}],["server/infra/services/api/api.service.ts:10",{"_index":119,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["server/infra/services/api/api.service.ts:7",{"_index":117,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["server/infra/services/bcrypt/bcrypt.module.ts",{"_index":280,"title":{},"body":{"modules/BcryptModule.html":{}}}],["server/infra/services/bcrypt/bcrypt.service.ts",{"_index":282,"title":{},"body":{"injectables/BcryptService.html":{},"coverage.html":{}}}],["server/infra/services/bcrypt/bcrypt.service.ts:12",{"_index":287,"title":{},"body":{"injectables/BcryptService.html":{}}}],["server/infra/services/bcrypt/bcrypt.service.ts:7",{"_index":289,"title":{},"body":{"injectables/BcryptService.html":{}}}],["server/infra/services/jwt/jwt.module.ts",{"_index":1034,"title":{},"body":{"modules/JwtModule.html":{}}}],["server/infra/services/jwt/jwt.service.ts",{"_index":1059,"title":{},"body":{"injectables/JwtTokenService.html":{},"coverage.html":{}}}],["server/infra/services/jwt/jwt.service.ts:12",{"_index":1062,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["server/infra/services/jwt/jwt.service.ts:16",{"_index":1063,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["server/infra/services/jwt/jwt.service.ts:9",{"_index":1061,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["server/infra/usecases",{"_index":250,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UseCaseProxy.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["server/main.ts",{"_index":1562,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["server/main/decorators/columns/isoptionalcreatedatecolumn.decorator.ts",{"_index":1564,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isoptionaldatecolumn.decorator.ts",{"_index":1566,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isoptionalnumbercolumn.decorator.ts",{"_index":1571,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isoptionalstringcolumn.decorator.ts",{"_index":1568,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isoptionalupdatedatecolumn.decorator.ts",{"_index":1569,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isrequiredcreatedatecolumn.decorator.ts",{"_index":1573,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isrequireddatecolumn.decorator.ts",{"_index":1575,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isrequirednumbercolumn.decorator.ts",{"_index":1576,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isrequiredstringcolumn.decorator.ts",{"_index":1577,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/columns/isrequiredupdatedatecolumn.decorator.ts",{"_index":1578,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/ispublicroute.decorator.ts",{"_index":1579,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/requests/deleteapiresponse.decorator.ts",{"_index":1580,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/requests/getapiresponse.decorator.ts",{"_index":1581,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/requests/indexapiresponse.decorator.ts",{"_index":1582,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/requests/postapiresponse.decorator.ts",{"_index":1584,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/requests/putapiresponse.decorator.ts",{"_index":1585,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isoptionalnumber.decorator.ts",{"_index":1586,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isoptionalstring.decorator.ts",{"_index":1588,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isrequireddate.decorator.ts",{"_index":1589,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isrequiredemail.decorator.ts",{"_index":1590,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isrequirednumber.decorator.ts",{"_index":1591,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["server/main/decorators/validators/isrequiredstring.decorator.ts",{"_index":1592,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servestaticmodule",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":169,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":399,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/SetupDocumentBuilder.html":{},"modules/TransactionUsecasesProxyModule.html":{}}}],["services/bcrypt/bcrypt.module",{"_index":264,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["services/bcrypt/bcrypt.service",{"_index":266,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["services/jwt/jwt.module",{"_index":267,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["services/jwt/jwt.service",{"_index":269,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{}}}],["servi�o",{"_index":1649,"title":{},"body":{"index.html":{}}}],["setdescription",{"_index":1246,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["setmetadata(is_public_key",{"_index":1845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setobjectincache",{"_index":326,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ICacheManager.html":{}}}],["setobjectincache(key",{"_index":333,"title":{},"body":{"injectables/CacheService.html":{},"interfaces/ICacheManager.html":{}}}],["settitle('converter",{"_index":1244,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["setupcontainer",{"_index":1231,"title":{"classes/SetupContainer.html":{}},"body":{"classes/SetupContainer.html":{},"coverage.html":{}}}],["setupdocumentbuilder",{"_index":1239,"title":{"classes/SetupDocumentBuilder.html":{}},"body":{"classes/SetupDocumentBuilder.html":{},"coverage.html":{}}}],["setupglobalfilters",{"_index":1272,"title":{"classes/SetupGlobalFilters.html":{}},"body":{"classes/SetupGlobalFilters.html":{},"coverage.html":{}}}],["setupglobalinterceptors",{"_index":1277,"title":{"classes/SetupGlobalInterceptors.html":{}},"body":{"classes/SetupGlobalInterceptors.html":{},"coverage.html":{}}}],["setupglobalpipes",{"_index":1282,"title":{"classes/SetupGlobalPipes.html":{}},"body":{"classes/SetupGlobalPipes.html":{},"coverage.html":{}}}],["setversion('1.0",{"_index":1263,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["sgd",{"_index":916,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["shp",{"_index":917,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["signoptions",{"_index":1040,"title":{},"body":{"modules/JwtModule.html":{}}}],["similar",{"_index":1764,"title":{},"body":{"index.html":{}}}],["skipmissingproperties",{"_index":671,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["sle",{"_index":918,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["sll",{"_index":919,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["sobre",{"_index":1717,"title":{},"body":{"index.html":{}}}],["sorry",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["sos",{"_index":920,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"modules/ApiConfigModule.html":{},"injectables/ApiConfigService.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"injectables/BcryptService.html":{},"modules/CacheConfigModule.html":{},"injectables/CacheService.html":{},"modules/ControllersModule.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"modules/EnvironmentConfigModule.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"modules/ExceptionsModule.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtAuthGuard.html":{},"modules/JwtModule.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"interfaces/RedisConfig.html":{},"modules/RepositoriesModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"modules/TransactionUsecasesProxyModule.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["sourcecurrency",{"_index":367,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["sourcevalue",{"_index":368,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"entities/Transaction.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["specified",{"_index":1825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/domain/core/http/nestresponse",{"_index":1407,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["src/domain/entities/log.entity",{"_index":1126,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["src/domain/entities/transaction.entity",{"_index":1324,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/domain/entities/user.entity",{"_index":1488,"title":{},"body":{"controllers/UserController.html":{},"classes/UserPresenter.html":{}}}],["src/domain/interfaces/api.interface",{"_index":125,"title":{},"body":{"injectables/ApiConfigService.html":{},"classes/CreateTransactionUseCase.html":{}}}],["src/domain/interfaces/authrequest.interface",{"_index":1325,"title":{},"body":{"controllers/TransactionController.html":{}}}],["src/domain/interfaces/exceptions.interface",{"_index":406,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["src/domain/interfaces/transaction.interface",{"_index":409,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["src/domain/repositories/transaction.repository",{"_index":410,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["src/infra/config/environment",{"_index":411,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"modules/TransactionUsecasesProxyModule.html":{}}}],["src/infra/controllers/transaction/transaction.dto",{"_index":412,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["src/infra/services/api/api.module",{"_index":1374,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["src/infra/services/api/api.service",{"_index":1375,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["src/main/decorators/columns/isoptionalstringcolumn.decorator",{"_index":1114,"title":{},"body":{"entities/Log.html":{}}}],["src/main/decorators/columns/isrequireddatecolumn.decorator",{"_index":1303,"title":{},"body":{"entities/Transaction.html":{}}}],["src/main/decorators/columns/isrequirednumbercolumn.decorator",{"_index":1115,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{}}}],["src/main/decorators/columns/isrequiredstringcolumn.decorator",{"_index":1116,"title":{},"body":{"entities/Log.html":{},"entities/Transaction.html":{}}}],["src/main/decorators/ispublicroute.decorator",{"_index":1326,"title":{},"body":{"controllers/TransactionController.html":{},"controllers/UserController.html":{}}}],["src/main/decorators/validators/isoptionalstring.decorator",{"_index":382,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/TransactionOptionsDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["src/main/decorators/validators/isrequireddate.decorator",{"_index":383,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{}}}],["src/main/decorators/validators/isrequiredemail.decorator",{"_index":447,"title":{},"body":{"classes/CreateUserDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["src/main/decorators/validators/isrequirednumber.decorator",{"_index":384,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/TransactionOptionsDTO.html":{}}}],["src/main/decorators/validators/isrequiredstring.decorator",{"_index":385,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateUserDTO.html":{},"classes/TransactionOptionsDTO.html":{},"classes/UpdateUserDTO.html":{}}}],["srd",{"_index":921,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ssl",{"_index":1441,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":1140,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["started",{"_index":1628,"title":{"index.html":{}},"body":{}}],["statements",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"dependencies.html":{}}}],["status",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["statuscode",{"_index":437,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"classes/UpdateUserUseCase.html":{}}}],["std",{"_index":922,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["store",{"_index":310,"title":{},"body":{"modules/CacheConfigModule.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["strategy",{"_index":1049,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":73,"title":{},"body":{"interfaces/AmbientConfig.html":{},"interfaces/ApiConfig.html":{},"injectables/ApiConfigService.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"interfaces/DatabaseConfig.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/JWTConfig.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"interfaces/RedisConfig.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"miscellaneous/variables.html":{}}}],["string(duration",{"_index":1150,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["string(start",{"_index":1149,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["success",{"_index":959,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["successfully",{"_index":1822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sucesso",{"_index":1699,"title":{},"body":{"index.html":{}}}],["super",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{}}}],["super.canactivate(context",{"_index":1029,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.debug(`[debug",{"_index":1167,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.error(`[error",{"_index":1169,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.log(`[info",{"_index":1168,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.verbose(`[verbose",{"_index":1171,"title":{},"body":{"injectables/LoggerService.html":{}}}],["super.warn(`[warn",{"_index":1170,"title":{},"body":{"injectables/LoggerService.html":{}}}],["support",{"_index":1767,"title":{},"body":{"modules.html":{}}}],["svc",{"_index":923,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["svg",{"_index":1768,"title":{},"body":{"modules.html":{}}}],["swaggermodule",{"_index":1243,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["swaggermodule.createdocument(app",{"_index":1270,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["swaggermodule.setup('api",{"_index":1271,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["synchronize",{"_index":1439,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["syp",{"_index":924,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["szl",{"_index":925,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["t",{"_index":120,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{},"interfaces/ICacheManager.html":{},"classes/UseCaseProxy.html":{}}}],["table",{"_index":1594,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1593,"title":{},"body":{"coverage.html":{}}}],["tamb�m",{"_index":1666,"title":{},"body":{"index.html":{}}}],["taxa",{"_index":1695,"title":{},"body":{"index.html":{}}}],["taxas",{"_index":1645,"title":{},"body":{"index.html":{}}}],["technical",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["tecnologias",{"_index":1727,"title":{},"body":{"index.html":{}}}],["test",{"_index":662,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/SetupDocumentBuilder.html":{},"miscellaneous/enumerations.html":{}}}],["testes",{"_index":1711,"title":{},"body":{"index.html":{}}}],["thb",{"_index":926,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["third",{"_index":624,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.bcryptservice.checkhash(password",{"_index":1189,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["this.bcryptservice.createhash(user.password",{"_index":468,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["this.cachemanager.get(key",{"_index":341,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cachemanager.getcachedobject",{"_index":727,"title":{},"body":{"classes/FindAllUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{}}}],["this.cachemanager.getcachedobject('transaction",{"_index":736,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{}}}],["this.cachemanager.getcachedobject('transactions",{"_index":717,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["this.cachemanager.getcachedobject('user",{"_index":743,"title":{},"body":{"classes/FindOneUserUseCase.html":{}}}],["this.cachemanager.set(key",{"_index":345,"title":{},"body":{"injectables/CacheService.html":{}}}],["this.cachemanager.setobjectincache('transaction",{"_index":738,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{}}}],["this.cachemanager.setobjectincache('transactions",{"_index":720,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["this.cachemanager.setobjectincache('user",{"_index":744,"title":{},"body":{"classes/FindOneUserUseCase.html":{}}}],["this.cachemanager.setobjectincache('userbyid",{"_index":752,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["this.cachemanager.setobjectincache('users",{"_index":730,"title":{},"body":{"classes/FindAllUserUseCase.html":{}}}],["this.config.getenvironment",{"_index":1166,"title":{},"body":{"injectables/LoggerService.html":{}}}],["this.configservice.get('access_key",{"_index":627,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_host",{"_index":616,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_name",{"_index":620,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_password",{"_index":619,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_port",{"_index":617,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_schema",{"_index":621,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_synchronize",{"_index":622,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_type",{"_index":623,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('database_user",{"_index":618,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('environment",{"_index":611,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('jwt_expiration_time",{"_index":614,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('jwt_secret",{"_index":613,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('redis_host",{"_index":608,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.configservice.get('redis_port",{"_index":609,"title":{},"body":{"injectables/EnvironmentConfigService.html":{}}}],["this.createtransactionusecase",{"_index":1350,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.createuserusecase",{"_index":1508,"title":{},"body":{"controllers/UserController.html":{}}}],["this.deletetransactionusecase.getinstance().execute(id",{"_index":1355,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.deleteuserusecase.getinstance().execute(id",{"_index":1513,"title":{},"body":{"controllers/UserController.html":{}}}],["this.environmentconfig.getaccesskey",{"_index":430,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["this.exceptionservice.throwbadrequestexception",{"_index":435,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["this.exceptionservice.throwforbiddenexception",{"_index":462,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["this.exceptionservice.thrownotfoundexception",{"_index":561,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"classes/LoginUseCase.html":{}}}],["this.exceptionservice.throwunauthorizedexception",{"_index":1080,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.findalltransactionusecase",{"_index":1343,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.findalluserusecase.getinstance().execute",{"_index":1502,"title":{},"body":{"controllers/UserController.html":{}}}],["this.findonetransactionusecase",{"_index":1347,"title":{},"body":{"controllers/TransactionController.html":{}}}],["this.findoneuserusecase.getinstance().execute(id",{"_index":1505,"title":{},"body":{"controllers/UserController.html":{}}}],["this.gettransaction(from",{"_index":417,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["this.httpadapter",{"_index":1412,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["this.httpadapter.setheader",{"_index":1426,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["this.httpadapter.status(currentresponse",{"_index":1428,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["this.httpservice.axiosref.get(url",{"_index":129,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["this.jwtservice.createtoken",{"_index":1183,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["this.jwtservice.sign(payload",{"_index":1066,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["this.jwtservice.verifyasync(token",{"_index":1065,"title":{},"body":{"injectables/JwtTokenService.html":{}}}],["this.logger",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.error(exception",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["this.logger.log",{"_index":424,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/CreateUserUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["this.logger.log(`loginusecases",{"_index":1186,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["this.logger.warn",{"_index":1078,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.logger.warn('localstrategy",{"_index":1083,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.loginusecase.getinstance().execute(credentials",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.loginusecaseproxy",{"_index":1081,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.reflector.getallandoverride(is_public_key",{"_index":1026,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["this.repository.alreadyexists('email",{"_index":460,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["this.repository.create(transaction",{"_index":423,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["this.repository.create(user",{"_index":470,"title":{},"body":{"classes/CreateUserUseCase.html":{}}}],["this.repository.delete(id",{"_index":558,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{}}}],["this.repository.findall",{"_index":729,"title":{},"body":{"classes/FindAllUserUseCase.html":{}}}],["this.repository.findall(userid",{"_index":719,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["this.repository.findbykey(key",{"_index":751,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["this.repository.findone(id",{"_index":737,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{}}}],["this.repository.update(id",{"_index":1453,"title":{},"body":{"classes/UpdateUserUseCase.html":{}}}],["this.response.body",{"_index":1215,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["this.response.headers",{"_index":1214,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["this.response.status",{"_index":1213,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["this.service.getvalue",{"_index":431,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["this.transactionentityrepository.create(transaction",{"_index":517,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["this.transactionentityrepository.delete(id",{"_index":519,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["this.transactionentityrepository.find",{"_index":515,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["this.transactionentityrepository.findone",{"_index":516,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["this.transactionentityrepository.save(newtransaction",{"_index":518,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["this.updateuserusecase",{"_index":1511,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usecase",{"_index":1460,"title":{},"body":{"classes/UseCaseProxy.html":{}}}],["this.userentityrepository.create(user",{"_index":545,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userentityrepository.delete(id",{"_index":548,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userentityrepository.find",{"_index":542,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userentityrepository.findone",{"_index":543,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userentityrepository.save",{"_index":547,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userentityrepository.save(newuser",{"_index":546,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["this.userrepository.findbykey('email",{"_index":1188,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["this.validateuser",{"_index":1180,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["throw",{"_index":674,"title":{},"body":{"classes/EnvironmentVariables.html":{},"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{}}}],["throwbadrequestexception",{"_index":682,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["throwbadrequestexception(data",{"_index":687,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{}}}],["throwforbiddenexception",{"_index":683,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["throwforbiddenexception(data",{"_index":691,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{}}}],["throwinternalservererrorexception",{"_index":684,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["throwinternalservererrorexception(data",{"_index":693,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{}}}],["thrownotfoundexception",{"_index":685,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["thrownotfoundexception(data",{"_index":695,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{}}}],["throwunauthorizedexception",{"_index":686,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{}}}],["throwunauthorizedexception(data",{"_index":697,"title":{},"body":{"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{}}}],["timeout",{"_index":1839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timestamp",{"_index":786,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["tjs",{"_index":927,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["tmodel",{"_index":1841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tmt",{"_index":928,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["tnd",{"_index":929,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["to(value",{"_index":1855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["todas",{"_index":1662,"title":{},"body":{"index.html":{}}}],["todo",{"_index":1730,"title":{},"body":{"index.html":{}}}],["token",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"interfaces/IJwtService.html":{},"injectables/JwtTokenService.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":930,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["trace",{"_index":984,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["transaction",{"_index":413,"title":{"entities/Transaction.html":{}},"body":{"classes/CreateTransactionUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"interfaces/ITransactionRepository.html":{},"modules/RepositoriesModule.html":{},"classes/SetupDocumentBuilder.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionPresenter.html":{},"entities/User.html":{},"coverage.html":{}}}],["transaction.dto",{"_index":1332,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transaction.entity",{"_index":1478,"title":{},"body":{"entities/User.html":{}}}],["transaction.presenter",{"_index":1334,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transaction.repository",{"_index":1228,"title":{},"body":{"modules/RepositoriesModule.html":{}}}],["transaction.usecase.ts",{"_index":391,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"coverage.html":{}}}],["transaction.usecase.ts:13",{"_index":734,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{}}}],["transaction.usecase.ts:14",{"_index":401,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"classes/DeleteTransactionUseCase.html":{}}}],["transaction.usecase.ts:23",{"_index":403,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["transaction.usecase.ts:51",{"_index":405,"title":{},"body":{"classes/CreateTransactionUseCase.html":{}}}],["transaction.usecase.ts:6",{"_index":733,"title":{},"body":{"classes/FindOneTransactionUseCase.html":{}}}],["transaction.usecase.ts:7",{"_index":553,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{}}}],["transaction.user",{"_index":1470,"title":{},"body":{"entities/User.html":{}}}],["transaction/transaction.controller",{"_index":356,"title":{},"body":{"modules/ControllersModule.html":{}}}],["transactioncontroller",{"_index":352,"title":{"controllers/TransactionController.html":{}},"body":{"modules/ControllersModule.html":{},"controllers/TransactionController.html":{},"coverage.html":{}}}],["transactiondeleted",{"_index":557,"title":{},"body":{"classes/DeleteTransactionUseCase.html":{}}}],["transactionentityrepository",{"_index":499,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{}}}],["transactionoptionsdto",{"_index":386,"title":{"classes/TransactionOptionsDTO.html":{}},"body":{"classes/CreateTransactionDTO.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"coverage.html":{}}}],["transactionpresenter",{"_index":1333,"title":{"classes/TransactionPresenter.html":{}},"body":{"controllers/TransactionController.html":{},"classes/TransactionPresenter.html":{},"coverage.html":{}}}],["transactionpresenter(createdtransaction",{"_index":1351,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactionpresenter(transaction",{"_index":1345,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactions",{"_index":718,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{},"controllers/TransactionController.html":{},"entities/User.html":{}}}],["transactions.map",{"_index":1344,"title":{},"body":{"controllers/TransactionController.html":{}}}],["transactions.usecase.ts",{"_index":711,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{},"coverage.html":{}}}],["transactions.usecase.ts:11",{"_index":714,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["transactions.usecase.ts:5",{"_index":713,"title":{},"body":{"classes/FindAllTransactionUseCase.html":{}}}],["transactionusecasesproxymodule",{"_index":348,"title":{"modules/TransactionUsecasesProxyModule.html":{}},"body":{"modules/ControllersModule.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["transactionusecasesproxymodule.delete_transaction_usecases_proxy",{"_index":1391,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["transactionusecasesproxymodule.get_transaction_usecases_proxy",{"_index":1389,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["transactionusecasesproxymodule.get_transactions_usecases_proxy",{"_index":1387,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["transactionusecasesproxymodule.post_transaction_usecases_proxy",{"_index":1390,"title":{},"body":{"modules/TransactionUsecasesProxyModule.html":{}}}],["transactionusecasesproxymodule.register",{"_index":360,"title":{},"body":{"modules/ControllersModule.html":{}}}],["transa��es",{"_index":1671,"title":{},"body":{"index.html":{}}}],["transa��o",{"_index":1660,"title":{},"body":{"index.html":{}}}],["transform",{"_index":1287,"title":{},"body":{"classes/SetupGlobalPipes.html":{}}}],["transformer",{"_index":654,"title":{},"body":{"classes/EnvironmentVariables.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["transformresponseinterceptor",{"_index":155,"title":{"injectables/TransformResponseInterceptor.html":{}},"body":{"modules/AppModule.html":{},"injectables/TransformResponseInterceptor.html":{},"coverage.html":{}}}],["tratamento",{"_index":1745,"title":{},"body":{"index.html":{}}}],["true",{"_index":550,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"modules/EnvironmentConfigModule.html":{},"classes/EnvironmentVariables.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/SetupContainer.html":{},"classes/SetupGlobalPipes.html":{},"entities/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":931,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ts",{"_index":130,"title":{},"body":{"injectables/ApiConfigService.html":{}}}],["ttd",{"_index":932,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ttl",{"_index":319,"title":{},"body":{"modules/CacheConfigModule.html":{},"miscellaneous/variables.html":{}}}],["twd",{"_index":933,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["two",{"_index":1251,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["type",{"_index":19,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ApiConfigService.html":{},"controllers/AuthController.html":{},"classes/AuthDTO.html":{},"classes/AuthPresenter.html":{},"injectables/BcryptService.html":{},"injectables/CacheService.html":{},"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"classes/CreateUserDTO.html":{},"classes/CreateUserUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteTransactionUseCase.html":{},"classes/DeleteUserUseCase.html":{},"injectables/EnvironmentConfigService.html":{},"classes/EnvironmentVariables.html":{},"injectables/ExceptionsService.html":{},"classes/FindAllTransactionUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneTransactionUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IApiService.html":{},"interfaces/IAuth.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IBcryptService.html":{},"interfaces/ICacheManager.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/IInfo.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"interfaces/ILogger.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"interfaces/ITransactionRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/JwtTokenService.html":{},"injectables/LocalStrategy.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/LoginUseCase.html":{},"classes/NestResponse.html":{},"classes/NestResponseBuilder.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{},"injectables/TransformResponseInterceptor.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"classes/UseCaseProxy.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1784,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":511,"title":{},"body":{"injectables/DatabaseTransactionRepository.html":{},"injectables/DatabaseUserRepository.html":{},"entities/Log.html":{},"injectables/LoggerMiddleware.html":{},"entities/Transaction.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormconfigmodule",{"_index":1224,"title":{"modules/TypeOrmConfigModule.html":{}},"body":{"modules/RepositoriesModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["typeormmodule",{"_index":1226,"title":{},"body":{"modules/RepositoriesModule.html":{},"modules/TypeOrmConfigModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1230,"title":{},"body":{"modules/RepositoriesModule.html":{}}}],["typeormmodule.forrootasync",{"_index":1446,"title":{},"body":{"modules/TypeOrmConfigModule.html":{}}}],["typeormmoduleoptions",{"_index":1430,"title":{},"body":{"modules/TypeOrmConfigModule.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":1134,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"index.html":{}}}],["tzs",{"_index":934,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["uah",{"_index":935,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["ugx",{"_index":936,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["um",{"_index":1648,"title":{},"body":{"index.html":{}}}],["uma",{"_index":1635,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":1828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":702,"title":{},"body":{"injectables/ExceptionsService.html":{},"injectables/JwtAuthGuard.html":{}}}],["unauthorizedexception(data",{"_index":707,"title":{},"body":{"injectables/ExceptionsService.html":{}}}],["undefined",{"_index":194,"title":{},"body":{"controllers/AuthController.html":{},"controllers/UserController.html":{}}}],["underlying",{"_index":1409,"title":{},"body":{"injectables/TransformResponseInterceptor.html":{}}}],["unit�rios",{"_index":1754,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":197,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUseCase.html":{}}}],["unlicensed",{"_index":1781,"title":{},"body":{"properties.html":{}}}],["update",{"_index":523,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/UserController.html":{}}}],["update(id",{"_index":537,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"interfaces/IUserRepository.html":{},"controllers/UserController.html":{}}}],["updated",{"_index":1455,"title":{},"body":{"classes/UpdateUserUseCase.html":{},"miscellaneous/variables.html":{}}}],["updatedat",{"_index":1463,"title":{},"body":{"entities/User.html":{},"classes/UserPresenter.html":{}}}],["updatedatecolumn",{"_index":1473,"title":{},"body":{"entities/User.html":{},"miscellaneous/variables.html":{}}}],["updateduser",{"_index":1452,"title":{},"body":{"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{}}}],["updateuserdto",{"_index":448,"title":{"classes/UpdateUserDTO.html":{}},"body":{"classes/CreateUserDTO.html":{},"interfaces/IUserRepository.html":{},"classes/UpdateUserDTO.html":{},"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["updateuserusecase",{"_index":1450,"title":{"classes/UpdateUserUseCase.html":{}},"body":{"classes/UpdateUserUseCase.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["updateuserusecases",{"_index":1454,"title":{},"body":{"classes/UpdateUserUseCase.html":{}}}],["url",{"_index":121,"title":{},"body":{"injectables/ApiConfigService.html":{},"interfaces/IApiService.html":{}}}],["usd",{"_index":428,"title":{},"body":{"classes/CreateTransactionUseCase.html":{},"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{},"index.html":{}}}],["use",{"_index":1120,"title":{},"body":{"injectables/LoggerMiddleware.html":{},"injectables/TransformResponseInterceptor.html":{}}}],["use(request",{"_index":1121,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["usecase",{"_index":270,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UseCaseProxy.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["usecaseproxy",{"_index":212,"title":{"classes/UseCaseProxy.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"classes/UseCaseProxy.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"coverage.html":{}}}],["usecaseproxy(new",{"_index":1538,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["usecases",{"_index":209,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/ControllersModule.html":{},"injectables/LocalStrategy.html":{},"controllers/TransactionController.html":{},"modules/TransactionUsecasesProxyModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["useclass",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["usecontainer",{"_index":1236,"title":{},"body":{"classes/SetupContainer.html":{}}}],["usecontainer(app.select(appmodule",{"_index":1237,"title":{},"body":{"classes/SetupContainer.html":{}}}],["usefactory",{"_index":109,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/TypeOrmConfigModule.html":{},"modules/UserUsecasesProxyModule.html":{}}}],["useguards",{"_index":1323,"title":{},"body":{"controllers/TransactionController.html":{}}}],["useguards(authguard('jwt",{"_index":1341,"title":{},"body":{"controllers/TransactionController.html":{}}}],["useguards(undefined)@getapiresponse(transactionpresenter",{"_index":1316,"title":{},"body":{"controllers/TransactionController.html":{}}}],["user",{"_index":456,"title":{"entities/User.html":{}},"body":{"classes/CreateUserUseCase.html":{},"injectables/DatabaseUserRepository.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindAllUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/IAuthRepository.html":{},"interfaces/IAuthRequest.html":{},"interfaces/IUserRepository.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUseCase.html":{},"modules/RepositoriesModule.html":{},"classes/SetupDocumentBuilder.html":{},"entities/Transaction.html":{},"classes/UpdateUserUseCase.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserPresenter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":1492,"title":{},"body":{"controllers/UserController.html":{}}}],["user.email",{"_index":461,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["user.entity",{"_index":1306,"title":{},"body":{"entities/Transaction.html":{}}}],["user.id",{"_index":1298,"title":{},"body":{"entities/Transaction.html":{}}}],["user.password",{"_index":467,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/LoginUseCase.html":{},"classes/UpdateUserUseCase.html":{},"classes/UserPresenter.html":{}}}],["user.presenter",{"_index":1494,"title":{},"body":{"controllers/UserController.html":{}}}],["user.repository",{"_index":1229,"title":{},"body":{"modules/RepositoriesModule.html":{}}}],["user.usecase.ts",{"_index":451,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/DeleteUserUseCase.html":{},"classes/FindOneUserUseCase.html":{},"classes/UpdateUserUseCase.html":{},"coverage.html":{}}}],["user.usecase.ts:13",{"_index":741,"title":{},"body":{"classes/FindOneUserUseCase.html":{}}}],["user.usecase.ts:14",{"_index":566,"title":{},"body":{"classes/DeleteUserUseCase.html":{}}}],["user.usecase.ts:17",{"_index":455,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["user.usecase.ts:6",{"_index":740,"title":{},"body":{"classes/FindOneUserUseCase.html":{}}}],["user.usecase.ts:7",{"_index":565,"title":{},"body":{"classes/DeleteUserUseCase.html":{}}}],["user.usecase.ts:9",{"_index":453,"title":{},"body":{"classes/CreateUserUseCase.html":{},"classes/UpdateUserUseCase.html":{}}}],["user/user.controller",{"_index":357,"title":{},"body":{"modules/ControllersModule.html":{}}}],["useragent",{"_index":1096,"title":{},"body":{"entities/Log.html":{},"injectables/LoggerMiddleware.html":{}}}],["userbyid",{"_index":750,"title":{},"body":{"classes/FindUserByKeyUseCase.html":{}}}],["usercontroller",{"_index":351,"title":{"controllers/UserController.html":{}},"body":{"modules/ControllersModule.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["userdeleted",{"_index":568,"title":{},"body":{"classes/DeleteUserUseCase.html":{}}}],["userentityrepository",{"_index":526,"title":{},"body":{"injectables/DatabaseUserRepository.html":{}}}],["userid",{"_index":369,"title":{},"body":{"classes/CreateTransactionDTO.html":{},"classes/CreateTransactionUseCase.html":{},"injectables/DatabaseTransactionRepository.html":{},"classes/FindAllTransactionUseCase.html":{},"interfaces/ITransactionRepository.html":{},"entities/Transaction.html":{},"controllers/TransactionController.html":{},"classes/TransactionOptionsDTO.html":{},"classes/TransactionPresenter.html":{}}}],["username",{"_index":442,"title":{},"body":{"classes/CreateUserDTO.html":{},"interfaces/IAuth.html":{},"interfaces/IJwtService.html":{},"interfaces/IJwtServicePayload.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUseCase.html":{},"modules/TypeOrmConfigModule.html":{},"classes/UpdateUserDTO.html":{},"entities/User.html":{},"classes/UserPresenter.html":{},"miscellaneous/variables.html":{}}}],["usernamefield",{"_index":1077,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["userpresenter",{"_index":1493,"title":{"classes/UserPresenter.html":{}},"body":{"controllers/UserController.html":{},"classes/UserPresenter.html":{},"coverage.html":{}}}],["userpresenter(createduser",{"_index":1509,"title":{},"body":{"controllers/UserController.html":{}}}],["userpresenter(updateduser",{"_index":1512,"title":{},"body":{"controllers/UserController.html":{}}}],["userpresenter(user",{"_index":1504,"title":{},"body":{"controllers/UserController.html":{}}}],["userrepository",{"_index":276,"title":{},"body":{"modules/AuthUsecasesProxyModule.html":{},"classes/LoginUseCase.html":{}}}],["users",{"_index":728,"title":{},"body":{"classes/FindAllUserUseCase.html":{},"controllers/UserController.html":{}}}],["users.map((user",{"_index":1503,"title":{},"body":{"controllers/UserController.html":{}}}],["users.usecase.ts",{"_index":723,"title":{},"body":{"classes/FindAllUserUseCase.html":{},"coverage.html":{}}}],["users.usecase.ts:11",{"_index":725,"title":{},"body":{"classes/FindAllUserUseCase.html":{}}}],["users.usecase.ts:5",{"_index":724,"title":{},"body":{"classes/FindAllUserUseCase.html":{}}}],["userusecasesproxymodule",{"_index":349,"title":{"modules/UserUsecasesProxyModule.html":{}},"body":{"modules/ControllersModule.html":{},"controllers/UserController.html":{},"modules/UserUsecasesProxyModule.html":{},"modules.html":{},"overview.html":{}}}],["userusecasesproxymodule.delete_user_usecases_proxy",{"_index":1544,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.find_user_by_key_usecases_proxy",{"_index":1541,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.get_user_usecases_proxy",{"_index":1540,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.get_users_usecases_proxy",{"_index":1537,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.post_user_usecases_proxy",{"_index":1542,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.put_user_usecases_proxy",{"_index":1543,"title":{},"body":{"modules/UserUsecasesProxyModule.html":{}}}],["userusecasesproxymodule.register",{"_index":358,"title":{},"body":{"modules/ControllersModule.html":{}}}],["uservalidated",{"_index":1178,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["uservalidated.id",{"_index":1184,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["uservalidated.username",{"_index":1185,"title":{},"body":{"classes/LoginUseCase.html":{}}}],["using",{"_index":1253,"title":{},"body":{"classes/SetupDocumentBuilder.html":{}}}],["usu�rio",{"_index":1656,"title":{},"body":{"index.html":{}}}],["utc",{"_index":1698,"title":{},"body":{"index.html":{}}}],["utilizada",{"_index":1696,"title":{},"body":{"index.html":{}}}],["utilizando",{"_index":1644,"title":{},"body":{"index.html":{}}}],["uuidv4",{"_index":1620,"title":{},"body":{"dependencies.html":{}}}],["uyu",{"_index":937,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["uzs",{"_index":938,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["validate",{"_index":575,"title":{},"body":{"modules/EnvironmentConfigModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["validate(config",{"_index":664,"title":{},"body":{"classes/EnvironmentVariables.html":{},"miscellaneous/functions.html":{}}}],["validate(email",{"_index":1074,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":1045,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validatedconfig",{"_index":666,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync",{"_index":656,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validatesync(validatedconfig",{"_index":670,"title":{},"body":{"classes/EnvironmentVariables.html":{}}}],["validateuser",{"_index":759,"title":{},"body":{"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{}}}],["validateuser(email",{"_index":762,"title":{},"body":{"interfaces/IAuthRepository.html":{},"classes/LoginUseCase.html":{}}}],["validationpipe",{"_index":1285,"title":{},"body":{"classes/SetupGlobalPipes.html":{}}}],["validator",{"_index":657,"title":{},"body":{"classes/EnvironmentVariables.html":{},"classes/SetupContainer.html":{},"dependencies.html":{}}}],["valor",{"_index":1693,"title":{},"body":{"index.html":{}}}],["value",{"_index":334,"title":{},"body":{"injectables/CacheService.html":{},"injectables/DatabaseUserRepository.html":{},"classes/FindUserByKeyUseCase.html":{},"interfaces/ICacheManager.html":{},"interfaces/IUserRepository.html":{},"classes/NestResponseBuilder.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["valueinstring",{"_index":343,"title":{},"body":{"injectables/CacheService.html":{}}}],["var",{"_index":1136,"title":{},"body":{"injectables/LoggerMiddleware.html":{}}}],["variable",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1787,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vef",{"_index":939,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["verbose",{"_index":978,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["verbose(context",{"_index":988,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["version",{"_index":1778,"title":{},"body":{"properties.html":{}}}],["ves",{"_index":940,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["vnd",{"_index":941,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["voc",{"_index":1632,"title":{},"body":{"index.html":{}}}],["void",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/IFormatExceptionMessage.html":{},"interfaces/ILogger.html":{},"injectables/LoggerMiddleware.html":{},"injectables/LoggerService.html":{},"classes/SetupContainer.html":{},"classes/SetupDocumentBuilder.html":{},"classes/SetupGlobalFilters.html":{},"classes/SetupGlobalInterceptors.html":{},"classes/SetupGlobalPipes.html":{}}}],["vuv",{"_index":942,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["warn",{"_index":979,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["warn(context",{"_index":990,"title":{},"body":{"interfaces/ILogger.html":{},"injectables/LoggerService.html":{}}}],["withbody",{"_index":1200,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["withbody(body",{"_index":1207,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["withheaders",{"_index":1201,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["withheaders(headers",{"_index":1209,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["withstatus",{"_index":1202,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["withstatus(status",{"_index":1211,"title":{},"body":{"classes/NestResponseBuilder.html":{}}}],["wst",{"_index":943,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xaf",{"_index":944,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xag",{"_index":945,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xau",{"_index":946,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xcd",{"_index":947,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xdr",{"_index":948,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xof",{"_index":949,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["xpf",{"_index":950,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["yer",{"_index":951,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["yes",{"_index":529,"title":{},"body":{"injectables/DatabaseUserRepository.html":{},"injectables/ExceptionsService.html":{},"interfaces/IExceptionService.html":{},"interfaces/ILogger.html":{},"interfaces/IUserRepository.html":{},"injectables/LoggerService.html":{}}}],["zar",{"_index":952,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["zmk",{"_index":953,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["zmw",{"_index":954,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}],["zoom",{"_index":87,"title":{},"body":{"modules/ApiConfigModule.html":{},"modules/AppModule.html":{},"modules/AuthUsecasesProxyModule.html":{},"modules/BcryptModule.html":{},"modules/CacheConfigModule.html":{},"modules/ControllersModule.html":{},"modules/EnvironmentConfigModule.html":{},"modules/ExceptionsModule.html":{},"modules/JwtModule.html":{},"modules/LoggerModule.html":{},"modules/RepositoriesModule.html":{},"modules/TransactionUsecasesProxyModule.html":{},"modules/UserUsecasesProxyModule.html":{},"overview.html":{}}}],["zwl",{"_index":955,"title":{},"body":{"interfaces/IInfo.html":{},"interfaces/IQuery.html":{},"interfaces/ISuccessTransaction.html":{},"interfaces/ITransactionError.html":{},"interfaces/ITransactionOptions.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/filters/exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in server/infra/common/filters/exception.filter.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Logger\n\n                    \n                \n                    \n                        \n                                Defined in server/infra/common/filters/exception.filter.ts:6\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/filters/exception.filter.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ArgumentsHost, Catch, HttpStatus, Logger } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n  private readonly logger: Logger;\n\n  constructor() {\n    super();\n\n    this.logger = new Logger('AllExceptionsFilter');\n  }\n\n  catch(exception: any, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n\n    this.logger.error(exception);\n\n    const status =\n      exception?.status ||\n      exception?.statusCode ||\n      exception?.response?.statusCode ||\n      exception?.response?.status ||\n      HttpStatus.INTERNAL_SERVER_ERROR;\n\n    const message =\n      status === HttpStatus.INTERNAL_SERVER_ERROR\n        ? 'Sorry we are experiencing technical problems.'\n        : exception.response?.message || '';\n\n    console.log('exception', exception);\n\n    const error =\n      status === HttpStatus.INTERNAL_SERVER_ERROR\n        ? 'Sorry we are experiencing technical problems.'\n        : exception.message.error ||\n          exception.response.error ||\n          exception.response.message ||\n          exception.response.data.message ||\n          '';\n\n    response.status(status).json({\n      status,\n      message,\n      error,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AmbientConfig.html":{"url":"interfaces/AmbientConfig.html","title":"interface - AmbientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AmbientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/config/ambient.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getEnvironment\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getEnvironment\n                        \n                    \n                \n            \n            \n                \ngetEnvironment()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/ambient.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface AmbientConfig {\n  getEnvironment(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiConfig.html":{"url":"interfaces/ApiConfig.html","title":"interface - ApiConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/config/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAccessKey\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessKey\n                        \n                    \n                \n            \n            \n                \ngetAccessKey()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/api.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ApiConfig {\n  getAccessKey(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ApiConfigModule.html":{"url":"modules/ApiConfigModule.html","title":"module - ApiConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ApiConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiConfigModule\n\n\n\ncluster_ApiConfigModule_providers\n\n\n\ncluster_ApiConfigModule_exports\n\n\n\n\nApiConfigService \n\nApiConfigService \n\n\n\nApiConfigModule\n\nApiConfigModule\n\nApiConfigService  -->\n\nApiConfigModule->ApiConfigService \n\n\n\n\n\nApiConfigService\n\nApiConfigService\n\nApiConfigModule -->\n\nApiConfigService->ApiConfigModule\n\n\n\n\n\nEnvironmentConfigService\n\nEnvironmentConfigService\n\nApiConfigModule -->\n\nEnvironmentConfigService->ApiConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/services/api/api.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ApiConfigService\n                        \n                        \n                            EnvironmentConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Module } from '@nestjs/common';\nimport { EnvironmentConfigModule } from '../../config/environment-config/environment-config.module';\nimport { EnvironmentConfigService } from '../../config/environment-config/environment-config.service';\nimport { ApiConfigService } from './api.service';\n\nexport const getAPIModuleOptions = async (\n  config: EnvironmentConfigService,\n): Promise => ({\n  config: {\n    accessKey: config.getAccessKey(),\n  },\n});\n\n@Module({\n  imports: [\n    HttpModule.registerAsync({\n      imports: [EnvironmentConfigModule],\n      inject: [EnvironmentConfigService],\n      useFactory: getAPIModuleOptions,\n    }),\n  ],\n  providers: [ApiConfigService, EnvironmentConfigService],\n  exports: [ApiConfigService],\n})\nexport class ApiConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiConfigService.html":{"url":"injectables/ApiConfigService.html","title":"injectable - ApiConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/services/api/api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in server/infra/services/api/api.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getValue\n                        \n                    \n                \n            \n            \n                \n                    \n                    getValue(url: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/services/api/api.service.ts:10\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService } from '@nestjs/axios';\nimport { Injectable } from '@nestjs/common';\nimport { AxiosResponse } from 'axios';\nimport { IApiService } from 'src/domain/interfaces/api.interface';\n\n@Injectable()\nexport class ApiConfigService implements IApiService {\n  constructor(private readonly httpService: HttpService) {}\n\n  public async getValue(url: string): Promise> {\n    const response = await this.httpService.axiosRef.get(url);\n\n    // @ts-ignore\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nApiConfigModule\n\nApiConfigModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiConfigModule->AppModule\n\n\n\n\n\nBcryptModule\n\nBcryptModule\n\nAppModule -->\n\nBcryptModule->AppModule\n\n\n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nAppModule -->\n\nEnvironmentConfigModule->AppModule\n\n\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nAppModule -->\n\nExceptionsModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAppModule -->\n\nJwtStrategy->AppModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAppModule -->\n\nLocalStrategy->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ApiConfigModule\n                        \n                        \n                            BcryptModule\n                        \n                        \n                            EnvironmentConfigModule\n                        \n                        \n                            ExceptionsModule\n                        \n                        \n                            LoggerModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, Module } from '@nestjs/common';\nimport { APP_GUARD } from '@nestjs/core';\nimport { PassportModule } from '@nestjs/passport';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\nimport { JwtAuthGuard } from './infra/common/guards/jwt-auth.guard';\nimport { TransformResponseInterceptor } from './infra/common/interceptor/transformResponse.interceptor';\nimport { JwtStrategy } from './infra/common/strategies/jwt.strategy';\nimport { LocalStrategy } from './infra/common/strategies/local.strategy';\nimport { EnvironmentConfigModule } from './infra/config/environment-config/environment-config.module';\nimport { ControllersModule } from './infra/controllers/controllers.module';\nimport { ExceptionsModule } from './infra/exceptions/exceptions.module';\nimport { LoggerModule } from './infra/logger/logger.module';\nimport { ApiConfigModule } from './infra/services/api/api.module';\nimport { BcryptModule } from './infra/services/bcrypt/bcrypt.module';\nimport { JwtModule as JwtServiceModule } from './infra/services/jwt/jwt.module';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      renderPath: '/documentation',\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'coverage/lcov-report'),\n      renderPath: '/coverage',\n    }),\n    PassportModule,\n    LoggerModule,\n    ExceptionsModule,\n    JwtServiceModule,\n    BcryptModule,\n    EnvironmentConfigModule,\n    ControllersModule,\n    ApiConfigModule,\n  ],\n  providers: [\n    {\n      provide: 'APP_INTERCEPTOR',\n      useClass: ClassSerializerInterceptor,\n    },\n    {\n      provide: 'APP_INTERCEPTOR',\n      useClass: TransformResponseInterceptor,\n    },\n    {\n      provide: APP_GUARD,\n      useClass: JwtAuthGuard,\n    },\n    JwtStrategy,\n    LocalStrategy,\n  ],\n})\nexport class AppModule {\n  /*configure(consumer: MiddlewareConsumer) {\n    consumer.apply(LoggerMiddleware).forRoutes('*');\n  }*/\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                public/auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(authCredentials: AuthDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@PostApiResponse(AuthPresenter, '/login', undefined)\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/auth/auth.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authCredentials\n                                    \n                                                AuthDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Inject } from '@nestjs/common';\nimport { ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { LoginUseCase } from '../../../domain/use-cases/auth/login.usecase';\nimport { Public } from '../../../main/decorators/isPublicRoute.decorator';\nimport { PostApiResponse } from '../../../main/decorators/requests/postApiResponse.decorator';\nimport { AuthUsecasesProxyModule } from '../../usecases-proxy/auth/auth-usecases-proxy.module';\nimport { UseCaseProxy } from '../../usecases-proxy/usecase-proxy';\nimport { AuthDTO } from './auth.dto';\nimport { AuthPresenter } from './auth.presenter';\n\n@ApiResponse({\n  status: 401,\n  description: 'No authorization token was found',\n})\n@ApiTags('Authentication')\n@Controller('public/auth')\nexport class AuthController {\n  constructor(\n    @Inject(AuthUsecasesProxyModule.LOGIN_USECASES_PROXY)\n    private readonly loginUseCase: UseCaseProxy,\n  ) {}\n\n  @Public()\n  @PostApiResponse(AuthPresenter, '/login', false)\n  async login(@Body() authCredentials: AuthDTO) {\n    const credentials = new AuthDTO(authCredentials);\n    return this.loginUseCase.getInstance().execute(credentials);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthDTO.html":{"url":"classes/AuthDTO.html","title":"class - AuthDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/auth/auth.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: AuthDTO)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/auth/auth.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        AuthDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/auth/auth.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/auth/auth.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsRequiredString } from '../../../main/decorators/validators/isRequiredString.decorator';\n\nexport class AuthDTO {\n  @IsRequiredString()\n  public email: string;\n\n  @IsRequiredString()\n  public password: string;\n\n  constructor(props: AuthDTO) {\n    Object.assign(this, props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthPresenter.html":{"url":"classes/AuthPresenter.html","title":"class - AuthPresenter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthPresenter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/auth/auth.presenter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                accessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthPresenter)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/auth/auth.presenter.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        AuthPresenter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/auth/auth.presenter.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsRequiredString } from '../../../main/decorators/validators/isRequiredString.decorator';\n\nexport class AuthPresenter {\n  @IsRequiredString()\n  public accessToken: string;\n\n  constructor(auth: AuthPresenter) {\n    Object.assign(this, auth);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthUsecasesProxyModule.html":{"url":"modules/AuthUsecasesProxyModule.html","title":"module - AuthUsecasesProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthUsecasesProxyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthUsecasesProxyModule\n\n\n\ncluster_AuthUsecasesProxyModule_imports\n\n\n\n\nBcryptModule\n\nBcryptModule\n\n\n\nAuthUsecasesProxyModule\n\nAuthUsecasesProxyModule\n\nAuthUsecasesProxyModule -->\n\nBcryptModule->AuthUsecasesProxyModule\n\n\n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nAuthUsecasesProxyModule -->\n\nEnvironmentConfigModule->AuthUsecasesProxyModule\n\n\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nAuthUsecasesProxyModule -->\n\nExceptionsModule->AuthUsecasesProxyModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAuthUsecasesProxyModule -->\n\nJwtModule->AuthUsecasesProxyModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAuthUsecasesProxyModule -->\n\nLoggerModule->AuthUsecasesProxyModule\n\n\n\n\n\nRepositoriesModule\n\nRepositoriesModule\n\nAuthUsecasesProxyModule -->\n\nRepositoriesModule->AuthUsecasesProxyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/usecases-proxy/auth/auth-usecases-proxy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BcryptModule\n                        \n                        \n                            EnvironmentConfigModule\n                        \n                        \n                            ExceptionsModule\n                        \n                        \n                            JwtModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RepositoriesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/usecases-proxy/auth/auth-usecases-proxy.module.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { LoginUseCase } from '../../../domain/use-cases/auth/login.usecase';\nimport { EnvironmentConfigModule } from '../../config/environment-config/environment-config.module';\nimport { ExceptionsModule } from '../../exceptions/exceptions.module';\nimport { ExceptionsService } from '../../exceptions/exceptions.service';\nimport { LoggerModule } from '../../logger/logger.module';\nimport { LoggerService } from '../../logger/logger.service';\nimport { RepositoriesModule } from '../../repositories/repositories.module';\nimport { DatabaseUserRepository } from '../../repositories/user.repository';\nimport { BcryptModule } from '../../services/bcrypt/bcrypt.module';\nimport { BcryptService } from '../../services/bcrypt/bcrypt.service';\nimport { JwtModule } from '../../services/jwt/jwt.module';\nimport { JwtTokenService } from '../../services/jwt/jwt.service';\nimport { UseCaseProxy } from '../usecase-proxy';\n\n@Module({\n  imports: [\n    LoggerModule,\n    EnvironmentConfigModule,\n    RepositoriesModule,\n    ExceptionsModule,\n    BcryptModule,\n    JwtModule,\n  ],\n})\nexport class AuthUsecasesProxyModule {\n  static LOGIN_USECASES_PROXY = 'loginUsecasesProxy';\n\n  static register(): DynamicModule {\n    return {\n      module: AuthUsecasesProxyModule,\n      providers: [\n        {\n          inject: [\n            LoggerService,\n            JwtTokenService,\n            BcryptService,\n            ExceptionsService,\n            DatabaseUserRepository,\n          ],\n          provide: AuthUsecasesProxyModule.LOGIN_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            jwtService: JwtTokenService,\n            bcryptService: BcryptService,\n            exceptionService: ExceptionsService,\n            userRepository: DatabaseUserRepository,\n          ) =>\n            new UseCaseProxy(\n              new LoginUseCase(\n                logger,\n                jwtService,\n                bcryptService,\n                exceptionService,\n                userRepository,\n              ),\n            ),\n        },\n      ],\n      exports: [AuthUsecasesProxyModule.LOGIN_USECASES_PROXY],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BcryptModule.html":{"url":"modules/BcryptModule.html","title":"module - BcryptModule","body":"\n                   \n\n\n\n\n    Modules\n    BcryptModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BcryptModule\n\n\n\ncluster_BcryptModule_exports\n\n\n\ncluster_BcryptModule_providers\n\n\n\n\nBcryptService \n\nBcryptService \n\n\n\nBcryptModule\n\nBcryptModule\n\nBcryptService  -->\n\nBcryptModule->BcryptService \n\n\n\n\n\nBcryptService\n\nBcryptService\n\nBcryptModule -->\n\nBcryptService->BcryptModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/services/bcrypt/bcrypt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BcryptService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BcryptService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BcryptService } from './bcrypt.service';\n\n@Module({\n  providers: [BcryptService],\n  exports: [BcryptService],\n})\nexport class BcryptModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BcryptService.html":{"url":"injectables/BcryptService.html","title":"injectable - BcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/services/bcrypt/bcrypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                checkHash\n                            \n                            \n                                    Public\n                                    Async\n                                createHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        checkHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkHash(string: string, hash: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/services/bcrypt/bcrypt.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        createHash\n                        \n                    \n                \n            \n            \n                \n                    \n                    createHash(string: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/services/bcrypt/bcrypt.service.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { IBcryptService } from './../../../domain/interfaces/bcrypt.interface';\nimport { Injectable } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class BcryptService implements IBcryptService {\n  public async createHash(string: string): Promise {\n    const salt = await bcrypt.genSalt();\n    return await bcrypt.hash(string, salt);\n  }\n\n  public async checkHash(string: string, hash: string): Promise {\n    return await bcrypt.compare(string, hash);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CacheConfigModule.html":{"url":"modules/CacheConfigModule.html","title":"module - CacheConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    CacheConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CacheConfigModule\n\n\n\ncluster_CacheConfigModule_providers\n\n\n\ncluster_CacheConfigModule_exports\n\n\n\n\nCacheService \n\nCacheService \n\n\n\nCacheConfigModule\n\nCacheConfigModule\n\nCacheService  -->\n\nCacheConfigModule->CacheService \n\n\n\n\n\nCacheService\n\nCacheService\n\nCacheConfigModule -->\n\nCacheService->CacheConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/config/redis/cache.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CacheService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CacheService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport * as redisStore from 'cache-manager-redis-store';\nimport { ClientOpts } from 'redis';\nimport { EnvironmentConfigService } from '../environment-config/environment-config.service';\nimport { CacheService } from './cache.service';\n\nexport const getRedisModuleConfig = (config: EnvironmentConfigService): any =>\n  CacheModule.register({\n    store: redisStore,\n    host: config.getRedisHost(),\n    port: config.getRedisPort(),\n    ttl: 60,\n  });\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    CacheModule.register({\n      store: redisStore,\n      host: process.env.REDIS_HOST,\n      port: Number(process.env.REDIS_PORT),\n      ttl: 60,\n    }),\n  ],\n  providers: [CacheService],\n  exports: [CacheService],\n})\nexport class CacheConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CacheService.html":{"url":"injectables/CacheService.html","title":"injectable - CacheService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CacheService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/config/redis/cache.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getCachedObject\n                            \n                            \n                                    Public\n                                    Async\n                                setObjectInCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cacheManager: Cache)\n                    \n                \n                        \n                            \n                                Defined in server/infra/config/redis/cache.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getCachedObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCachedObject(key: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/redis/cache.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        setObjectInCache\n                        \n                    \n                \n            \n            \n                \n                    \n                    setObjectInCache(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/redis/cache.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CACHE_MANAGER, Inject, Injectable } from '@nestjs/common';\nimport { Cache } from 'cache-manager';\nimport { ICacheManager } from '../../../domain/interfaces/cache.interface';\n\n@Injectable()\nexport class CacheService implements ICacheManager {\n  constructor(@Inject(CACHE_MANAGER) private cacheManager: Cache) {}\n\n  public async getCachedObject(key: string): Promise {\n    const result = await this.cacheManager.get(key);\n    return JSON.parse(result);\n  }\n\n  public async setObjectInCache(key: string, value: any): Promise {\n    const valueInString = JSON.stringify(value);\n    await this.cacheManager.set(key, valueInString);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ControllersModule.html":{"url":"modules/ControllersModule.html","title":"module - ControllersModule","body":"\n                   \n\n\n\n\n    Modules\n    ControllersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ControllersModule\n\n\n\ncluster_ControllersModule_imports\n\n\n\n\nAuthUsecasesProxyModule\n\nAuthUsecasesProxyModule\n\n\n\nControllersModule\n\nControllersModule\n\nControllersModule -->\n\nAuthUsecasesProxyModule->ControllersModule\n\n\n\n\n\nTransactionUsecasesProxyModule\n\nTransactionUsecasesProxyModule\n\nControllersModule -->\n\nTransactionUsecasesProxyModule->ControllersModule\n\n\n\n\n\nUserUsecasesProxyModule\n\nUserUsecasesProxyModule\n\nControllersModule -->\n\nUserUsecasesProxyModule->ControllersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/controllers/controllers.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            AuthController\n                        \n                        \n                            TransactionController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthUsecasesProxyModule\n                        \n                        \n                            TransactionUsecasesProxyModule\n                        \n                        \n                            UserUsecasesProxyModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TransactionUsecasesProxyModule } from '../usecases-proxy/transaction/transaction-usecases-proxy.module';\nimport { UserUsecasesProxyModule } from '../usecases-proxy/user/user-usecases-proxy.module';\nimport { AuthUsecasesProxyModule } from './../usecases-proxy/auth/auth-usecases-proxy.module';\nimport { AuthController } from './auth/auth.controller';\nimport { TransactionController } from './transaction/transaction.controller';\nimport { UserController } from './user/user.controller';\n\n@Module({\n  imports: [\n    UserUsecasesProxyModule.register(),\n    AuthUsecasesProxyModule.register(),\n    TransactionUsecasesProxyModule.register(),\n  ],\n  controllers: [UserController, AuthController, TransactionController],\n  exports: [\n    UserUsecasesProxyModule.register(),\n    AuthUsecasesProxyModule.register(),\n    TransactionUsecasesProxyModule.register(),\n  ],\n})\nexport class ControllersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionDTO.html":{"url":"classes/CreateTransactionDTO.html","title":"class - CreateTransactionDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/transaction/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conversionRate\n                            \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                destinationCurrency\n                            \n                            \n                                    Public\n                                destinationValue\n                            \n                            \n                                    Public\n                                sourceCurrency\n                            \n                            \n                                    Public\n                                sourceValue\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: CreateTransactionDTO)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        CreateTransactionDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conversionRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredDate()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptionalString } from 'src/main/decorators/validators/isOptionalString.decorator';\nimport { IsRequiredDate } from 'src/main/decorators/validators/isRequiredDate.decorator';\nimport { IsRequiredNumber } from 'src/main/decorators/validators/isRequiredNumber.decorator';\nimport { IsRequiredString } from 'src/main/decorators/validators/isRequiredString.decorator';\n\nexport class CreateTransactionDTO {\n  @IsRequiredString()\n  public userId: string;\n\n  @IsRequiredString()\n  public sourceCurrency: string;\n\n  @IsRequiredString()\n  public destinationCurrency: string;\n\n  @IsRequiredNumber()\n  public sourceValue: number;\n\n  @IsRequiredNumber()\n  public destinationValue: number;\n\n  @IsRequiredNumber()\n  public conversionRate: number;\n\n  @IsRequiredDate()\n  public dateTime: Date | string;\n\n  constructor(props: CreateTransactionDTO) {\n    Object.assign(this, props);\n  }\n}\n\nexport class TransactionOptionsDTO {\n  @IsOptionalString()\n  public userId: string;\n\n  @IsRequiredString()\n  public from: string;\n\n  @IsRequiredString()\n  public to: string;\n\n  @IsRequiredNumber()\n  public amount: number;\n\n  constructor(props: TransactionOptionsDTO) {\n    Object.assign(this, props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTransactionUseCase.html":{"url":"classes/CreateTransactionUseCase.html","title":"class - CreateTransactionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTransactionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/transaction/create-transaction.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                getTransaction\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, repository: ITransactionRepository, exceptionService: IExceptionService, service: IApiService, environmentConfig: EnvironmentConfigService)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/transaction/create-transaction.usecase.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITransactionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        service\n                                                  \n                                                        \n                                                                        IApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        environmentConfig\n                                                  \n                                                        \n                                                                        EnvironmentConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(userId: string, from: string, to: string, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/transaction/create-transaction.usecase.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getTransaction\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransaction(from: string, to: string, amount: number)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/transaction/create-transaction.usecase.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    amount\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { IApiService } from 'src/domain/interfaces/api.interface';\nimport { IExceptionService } from 'src/domain/interfaces/exceptions.interface';\nimport {\n  ISuccessTransaction,\n  ITransaction,\n} from 'src/domain/interfaces/transaction.interface';\nimport { ITransactionRepository } from 'src/domain/repositories/transaction.repository';\nimport { EnvironmentConfigService } from 'src/infra/config/environment-config/environment-config.service';\nimport { CreateTransactionDTO } from 'src/infra/controllers/transaction/transaction.dto';\nimport { Transaction } from '../../entities/transaction.entity';\nimport { ILogger } from '../../logger/logger.interface';\n\nexport class CreateTransactionUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly repository: ITransactionRepository,\n    private readonly exceptionService: IExceptionService,\n    private readonly service: IApiService,\n    private readonly environmentConfig: EnvironmentConfigService,\n  ) {}\n\n  public async execute(\n    userId: string,\n    from: string,\n    to: string,\n    amount: number,\n  ): Promise {\n    const newTransaction = await this.getTransaction(from, to, amount);\n\n    const transaction = new CreateTransactionDTO({\n      conversionRate: newTransaction.info.rate,\n      dateTime: new Date(newTransaction.info.timestamp * 1000).toLocaleString(),\n      sourceCurrency: from,\n      destinationCurrency: to,\n      sourceValue: amount,\n      destinationValue: newTransaction.result,\n      userId,\n    });\n\n    const createdtransaction = await this.repository.create(transaction);\n\n    this.logger.log(\n      'CreateTransactionUseCases execute()',\n      'New Transaction have been inserted',\n    );\n\n    return createdtransaction;\n  }\n\n  private async getTransaction(\n    from: string,\n    to: string,\n    amount: number,\n  ): Promise {\n    const currencyBase = from || 'USD';\n    const apiKey = this.environmentConfig.getAccessKey();\n\n    const response = await this.service.getValue(\n      `https://api.apilayer.com/exchangerates_data/convert?apikey=${apiKey}&from=${currencyBase}&to=${to}&amount=${amount}`,\n    );\n\n    const newTransaction: ITransaction = response.data as ITransaction;\n\n    if (newTransaction.success === false) {\n      this.exceptionService.throwBadRequestException({\n        message: 'Error to get currency',\n        statusCode: HttpStatus.BAD_REQUEST,\n        error: newTransaction.error.info,\n      });\n    }\n\n    return newTransaction as ISuccessTransaction;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDTO.html":{"url":"classes/CreateUserDTO.html","title":"class - CreateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptionalString } from 'src/main/decorators/validators/isOptionalString.decorator';\nimport { IsRequiredEmail } from 'src/main/decorators/validators/isRequiredEmail.decorator';\nimport { IsRequiredString } from 'src/main/decorators/validators/isRequiredString.decorator';\n\nexport class CreateUserDTO {\n  @IsRequiredString()\n  public username: string;\n\n  @IsRequiredEmail()\n  public email: string;\n\n  @IsRequiredString()\n  public password: string;\n}\n\nexport class UpdateUserDTO {\n  @IsOptionalString()\n  public username?: string;\n\n  @IsOptionalString()\n  public email?: string;\n\n  @IsOptionalString()\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserUseCase.html":{"url":"classes/CreateUserUseCase.html","title":"class - CreateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/create-user.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, repository: IUserRepository, bcryptService: IBcryptService, exceptionService: IExceptionService)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/create-user.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        IBcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(user: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/create-user.usecase.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { IExceptionService } from 'src/domain/interfaces/exceptions.interface';\nimport { CreateUserDTO } from './../../../infra/controllers/user/user.dto';\nimport { User } from './../../entities/user.entity';\nimport { IBcryptService } from './../../interfaces/bcrypt.interface';\nimport { ILogger } from './../../logger/logger.interface';\nimport { IUserRepository } from './../../repositories/user.repository';\n\nexport class CreateUserUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly repository: IUserRepository,\n    private readonly bcryptService: IBcryptService,\n    private readonly exceptionService: IExceptionService,\n  ) {}\n\n  public async execute(user: CreateUserDTO): Promise {\n    if (await this.repository.alreadyExists('email', user.email))\n      this.exceptionService.throwForbiddenException({\n        message: 'Email already exists in app!',\n        statusCode: HttpStatus.FORBIDDEN,\n      });\n\n    user.password = await this.bcryptService.createHash(user.password);\n\n    const createdUser = await this.repository.create(user);\n\n    this.logger.log(\n      'CreateUserUseCases execute()',\n      'New user have been inserted',\n    );\n\n    return createdUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseConfig.html":{"url":"interfaces/DatabaseConfig.html","title":"interface - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/config/database.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getDatabaseHost\n                                    \n                                \n                                \n                                    \n                                        getDatabaseName\n                                    \n                                \n                                \n                                    \n                                        getDatabasePassword\n                                    \n                                \n                                \n                                    \n                                        getDatabasePort\n                                    \n                                \n                                \n                                    \n                                        getDatabaseSchema\n                                    \n                                \n                                \n                                    \n                                        getDatabaseSync\n                                    \n                                \n                                \n                                    \n                                        getDatabaseType\n                                    \n                                \n                                \n                                    \n                                        getDatabaseUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \ngetDatabaseHost()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \ngetDatabaseName()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \ngetDatabasePassword()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \ngetDatabasePort()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseSchema\n                        \n                    \n                \n            \n            \n                \ngetDatabaseSchema()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseSync\n                        \n                    \n                \n            \n            \n                \ngetDatabaseSync()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseType\n                        \n                    \n                \n            \n            \n                \ngetDatabaseType()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \ngetDatabaseUser()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/database.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface DatabaseConfig {\n  getDatabaseHost(): string;\n  getDatabasePort(): number;\n  getDatabaseUser(): string;\n  getDatabasePassword(): string;\n  getDatabaseName(): string;\n  getDatabaseSchema(): string;\n  getDatabaseSync(): boolean;\n  getDatabaseType(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseTransactionRepository.html":{"url":"injectables/DatabaseTransactionRepository.html","title":"injectable - DatabaseTransactionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseTransactionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/repositories/transaction.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transactionEntityRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in server/infra/repositories/transaction.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transactionEntityRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(transaction: Transaction)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/transaction.repository.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                Transaction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/transaction.repository.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/transaction.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/transaction.repository.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Transaction } from '../../domain/entities/transaction.entity';\nimport { ITransactionRepository } from '../../domain/repositories/transaction.repository';\n\n@Injectable()\nexport class DatabaseTransactionRepository implements ITransactionRepository {\n  constructor(\n    @InjectRepository(Transaction)\n    private readonly transactionEntityRepository: Repository,\n  ) {}\n\n  public async findAll(userId: string): Promise {\n    return this.transactionEntityRepository.find({\n      where: { userId },\n    });\n  }\n\n  public async findOne(id: string): Promise {\n    return await this.transactionEntityRepository.findOne({ where: { id } });\n  }\n\n  public async create(transaction: Transaction): Promise {\n    const newTransaction = this.transactionEntityRepository.create(transaction);\n    return this.transactionEntityRepository.save(newTransaction);\n  }\n\n  public async delete(id: string): Promise {\n    const transaction = await this.transactionEntityRepository.findOne({\n      where: { id },\n    });\n\n    if (transaction) {\n      this.transactionEntityRepository.delete(id);\n      return transaction;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseUserRepository.html":{"url":"injectables/DatabaseUserRepository.html","title":"injectable - DatabaseUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/repositories/user.repository.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                alreadyExists\n                            \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByKey\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userEntityRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in server/infra/repositories/user.repository.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userEntityRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        alreadyExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    alreadyExists(key: string, value: string, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: User)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/repositories/user.repository.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../domain/entities/user.entity';\nimport { IUserRepository } from '../../domain/repositories/user.repository';\n\n@Injectable()\nexport class DatabaseUserRepository implements IUserRepository {\n  constructor(\n    @InjectRepository(User)\n    private readonly userEntityRepository: Repository,\n  ) {}\n\n  public async findAll(): Promise {\n    return this.userEntityRepository.find();\n  }\n\n  public async findOne(id: string): Promise {\n    return await this.userEntityRepository.findOne({ where: { id } });\n  }\n\n  public async findByKey(key: string, value: string): Promise {\n    return await this.userEntityRepository.findOne({\n      where: { [key]: value },\n    });\n  }\n\n  public async create(user: User): Promise {\n    const newUser = this.userEntityRepository.create(user);\n    return this.userEntityRepository.save(newUser);\n  }\n\n  public async update(id: string, user: User): Promise {\n    return this.userEntityRepository.save({ ...user, id });\n  }\n\n  public async delete(id: string): Promise {\n    const user = await this.userEntityRepository.findOne({ where: { id } });\n\n    if (user) {\n      this.userEntityRepository.delete(id);\n      return user;\n    }\n  }\n\n  public async alreadyExists(\n    key: string,\n    value: string,\n    id?: string,\n  ): Promise {\n    if (!value) return false;\n\n    const alreadyExists: User = await this.userEntityRepository.findOne({\n      where: { [key]: value },\n    });\n\n    if (alreadyExists && alreadyExists.id !== id) return true;\n\n    return false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteTransactionUseCase.html":{"url":"classes/DeleteTransactionUseCase.html","title":"class - DeleteTransactionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteTransactionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/transaction/delete-transaction.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, repository: ITransactionRepository, exceptionService: IExceptionService)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/transaction/delete-transaction.usecase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITransactionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/transaction/delete-transaction.usecase.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { Transaction } from '../../entities/transaction.entity';\nimport { IExceptionService } from '../../interfaces/exceptions.interface';\nimport { ILogger } from '../../logger/logger.interface';\nimport { ITransactionRepository } from '../../repositories/transaction.repository';\n\nexport class DeleteTransactionUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly repository: ITransactionRepository,\n    private readonly exceptionService: IExceptionService,\n  ) {}\n\n  public async execute(id: string): Promise {\n    const transactionDeleted = await this.repository.delete(id);\n\n    if (transactionDeleted) {\n      this.logger.log(\n        'DeleteTransactionUseCases execute()',\n        `Transaction ${id} have been deleted`,\n      );\n\n      return transactionDeleted;\n    } else {\n      this.exceptionService.throwNotFoundException({\n        message: 'Transaction not found!',\n        statusCode: HttpStatus.NOT_FOUND,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeleteUserUseCase.html":{"url":"classes/DeleteUserUseCase.html","title":"class - DeleteUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeleteUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/delete-user.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, repository: IUserRepository, exceptionService: IExceptionService)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/delete-user.usecase.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/delete-user.usecase.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { User } from '../../../domain/entities/user.entity';\nimport { IExceptionService } from '../../../domain/interfaces/exceptions.interface';\nimport { IUserRepository } from '../../repositories/user.repository';\nimport { ILogger } from './../../logger/logger.interface';\n\nexport class DeleteUserUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly repository: IUserRepository,\n    private readonly exceptionService: IExceptionService,\n  ) {}\n\n  public async execute(id: string): Promise {\n    const userDeleted = await this.repository.delete(id);\n\n    if (userDeleted) {\n      this.logger.log(\n        'DeleteUserUseCases execute()',\n        `User ${id} have been deleted`,\n      );\n\n      return userDeleted;\n    } else {\n      this.exceptionService.throwNotFoundException({\n        message: 'User not found!',\n        statusCode: HttpStatus.NOT_FOUND,\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EnvironmentConfigModule.html":{"url":"modules/EnvironmentConfigModule.html","title":"module - EnvironmentConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    EnvironmentConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_EnvironmentConfigModule\n\n\n\ncluster_EnvironmentConfigModule_exports\n\n\n\ncluster_EnvironmentConfigModule_providers\n\n\n\n\nEnvironmentConfigService \n\nEnvironmentConfigService \n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nEnvironmentConfigService  -->\n\nEnvironmentConfigModule->EnvironmentConfigService \n\n\n\n\n\nEnvironmentConfigService\n\nEnvironmentConfigService\n\nEnvironmentConfigModule -->\n\nEnvironmentConfigService->EnvironmentConfigModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/config/environment-config/environment-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EnvironmentConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EnvironmentConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { EnvironmentConfigService } from './environment-config.service';\nimport { validate } from './environment-config.validation';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: './.env',\n      isGlobal: true,\n      validate,\n    }),\n  ],\n  providers: [EnvironmentConfigService],\n  exports: [EnvironmentConfigService],\n})\nexport class EnvironmentConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnvironmentConfigService.html":{"url":"injectables/EnvironmentConfigService.html","title":"injectable - EnvironmentConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnvironmentConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/config/environment-config/environment-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getAccessKey\n                            \n                            \n                                    Public\n                                getDatabaseHost\n                            \n                            \n                                    Public\n                                getDatabaseName\n                            \n                            \n                                    Public\n                                getDatabasePassword\n                            \n                            \n                                    Public\n                                getDatabasePort\n                            \n                            \n                                    Public\n                                getDatabaseSchema\n                            \n                            \n                                    Public\n                                getDatabaseSync\n                            \n                            \n                                    Public\n                                getDatabaseType\n                            \n                            \n                                    Public\n                                getDatabaseUser\n                            \n                            \n                                    Public\n                                getEnvironment\n                            \n                            \n                                    Public\n                                getJwtExpirationTime\n                            \n                            \n                                    Public\n                                getJwtSecret\n                            \n                            \n                                    Public\n                                getRedisHost\n                            \n                            \n                                    Public\n                                getRedisPort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in server/infra/config/environment-config/environment-config.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getAccessKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessKey()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseHost\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseHost()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseName()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabasePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabasePassword()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabasePort\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabasePort()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseSchema\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseSchema()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseSync\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseSync()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseType\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseType()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getDatabaseUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseUser()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getEnvironment\n                        \n                    \n                \n            \n            \n                \n                    \n                    getEnvironment()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getJwtExpirationTime\n                        \n                    \n                \n            \n            \n                \n                    \n                    getJwtExpirationTime()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getJwtSecret\n                        \n                    \n                \n            \n            \n                \n                    \n                    getJwtSecret()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRedisHost\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRedisHost()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getRedisPort\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRedisPort()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/config/environment-config/environment-config.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { AmbientConfig } from '../../../domain/config/ambient.interface';\nimport { DatabaseConfig } from '../../../domain/config/database.interface';\nimport { JWTConfig } from '../../../domain/config/jwt.interface';\nimport { RedisConfig } from '../../../domain/config/redis.interface';\n\n@Injectable()\nexport class EnvironmentConfigService\n  implements DatabaseConfig, JWTConfig, AmbientConfig, RedisConfig\n{\n  constructor(private configService: ConfigService) {}\n\n  //REDIS\n  public getRedisHost(): string {\n    return this.configService.get('REDIS_HOST');\n  }\n\n  public getRedisPort(): number {\n    return this.configService.get('REDIS_PORT');\n  }\n\n  //AMBIENT\n  public getEnvironment(): string {\n    return this.configService.get('ENVIRONMENT');\n  }\n\n  //JWT\n  public getJwtSecret(): string {\n    return this.configService.get('JWT_SECRET');\n  }\n\n  public getJwtExpirationTime(): string {\n    return this.configService.get('JWT_EXPIRATION_TIME');\n  }\n\n  //DATABASE\n  public getDatabaseHost(): string {\n    return this.configService.get('DATABASE_HOST');\n  }\n\n  public getDatabasePort(): number {\n    return this.configService.get('DATABASE_PORT');\n  }\n\n  public getDatabaseUser(): string {\n    return this.configService.get('DATABASE_USER');\n  }\n\n  public getDatabasePassword(): string {\n    return this.configService.get('DATABASE_PASSWORD');\n  }\n\n  public getDatabaseName(): string {\n    return this.configService.get('DATABASE_NAME');\n  }\n\n  public getDatabaseSchema(): string {\n    return this.configService.get('DATABASE_SCHEMA');\n  }\n\n  public getDatabaseSync(): boolean {\n    return this.configService.get('DATABASE_SYNCHRONIZE');\n  }\n\n  public getDatabaseType(): string {\n    return this.configService.get('DATABASE_TYPE');\n  }\n\n  //THIRD PARTY API\n  public getAccessKey(): string {\n    return this.configService.get('ACCESS_KEY');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EnvironmentVariables.html":{"url":"classes/EnvironmentVariables.html","title":"class - EnvironmentVariables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EnvironmentVariables\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/config/environment-config/environment-config.validation.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ACCESS_KEY\n                            \n                            \n                                    Public\n                                DATABASE_HOST\n                            \n                            \n                                    Public\n                                DATABASE_NAME\n                            \n                            \n                                    Public\n                                DATABASE_PASSWORD\n                            \n                            \n                                    Public\n                                DATABASE_PORT\n                            \n                            \n                                    Public\n                                DATABASE_SYNCHRONIZE\n                            \n                            \n                                    Public\n                                DATABASE_USER\n                            \n                            \n                                    Public\n                                ENVIRONMENT\n                            \n                            \n                                    Public\n                                JWT_EXPIRATION_TIME\n                            \n                            \n                                    Public\n                                JWT_SECRET\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ACCESS_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_HOST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_PORT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_SYNCHRONIZE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        DATABASE_USER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ENVIRONMENT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Environment\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEnum(Environment)\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        JWT_EXPIRATION_TIME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        JWT_SECRET\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/config/environment-config/environment-config.validation.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { plainToClass } from 'class-transformer';\nimport {\n  IsBoolean,\n  IsEnum,\n  IsNumber,\n  IsString,\n  validateSync,\n} from 'class-validator';\n\nenum Environment {\n  Development = 'development',\n  Production = 'production',\n  Local = 'local',\n  Test = 'test',\n}\n\nclass EnvironmentVariables {\n  @IsEnum(Environment)\n  public ENVIRONMENT: Environment;\n\n  @IsString()\n  public JWT_SECRET: string;\n\n  @IsString()\n  public JWT_EXPIRATION_TIME: string;\n\n  @IsString()\n  public DATABASE_HOST: string;\n\n  @IsNumber()\n  public DATABASE_PORT: number;\n\n  @IsString()\n  public DATABASE_USER: string;\n\n  @IsString()\n  public DATABASE_PASSWORD: string;\n\n  @IsString()\n  public DATABASE_NAME: string;\n\n  @IsBoolean()\n  public DATABASE_SYNCHRONIZE: boolean;\n\n  @IsString()\n  public ACCESS_KEY: string;\n}\n\nexport function validate(config: Record) {\n  const validatedConfig = plainToClass(EnvironmentVariables, config, {\n    enableImplicitConversion: true,\n  });\n\n  const errors = validateSync(validatedConfig, {\n    skipMissingProperties: false,\n  });\n\n  if (errors.length > 0) {\n    throw new Error(errors.toString());\n  }\n\n  return validatedConfig;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ExceptionsModule.html":{"url":"modules/ExceptionsModule.html","title":"module - ExceptionsModule","body":"\n                   \n\n\n\n\n    Modules\n    ExceptionsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ExceptionsModule\n\n\n\ncluster_ExceptionsModule_exports\n\n\n\ncluster_ExceptionsModule_providers\n\n\n\n\nExceptionsService \n\nExceptionsService \n\n\n\nExceptionsModule\n\nExceptionsModule\n\nExceptionsService  -->\n\nExceptionsModule->ExceptionsService \n\n\n\n\n\nExceptionsService\n\nExceptionsService\n\nExceptionsModule -->\n\nExceptionsService->ExceptionsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/exceptions/exceptions.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ExceptionsService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ExceptionsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ExceptionsService } from './exceptions.service';\n\n@Module({\n  providers: [ExceptionsService],\n  exports: [ExceptionsService],\n})\nexport class ExceptionsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ExceptionsService.html":{"url":"injectables/ExceptionsService.html","title":"injectable - ExceptionsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ExceptionsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/exceptions/exceptions.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                throwBadRequestException\n                            \n                            \n                                throwForbiddenException\n                            \n                            \n                                throwInternalServerErrorException\n                            \n                            \n                                throwNotFoundException\n                            \n                            \n                                throwUnauthorizedException\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        throwBadRequestException\n                        \n                    \n                \n            \n            \n                \nthrowBadRequestException(data: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/exceptions/exceptions.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwForbiddenException\n                        \n                    \n                \n            \n            \n                \nthrowForbiddenException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/exceptions/exceptions.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwInternalServerErrorException\n                        \n                    \n                \n            \n            \n                \nthrowInternalServerErrorException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/exceptions/exceptions.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwNotFoundException\n                        \n                    \n                \n            \n            \n                \nthrowNotFoundException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/exceptions/exceptions.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwUnauthorizedException\n                        \n                    \n                \n            \n            \n                \nthrowUnauthorizedException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/exceptions/exceptions.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  ForbiddenException,\n  Injectable,\n  InternalServerErrorException,\n  UnauthorizedException,\n  NotFoundException,\n} from '@nestjs/common';\nimport {\n  IExceptionService,\n  IFormatExceptionMessage,\n} from '../../domain/interfaces/exceptions.interface';\n\n@Injectable()\nexport class ExceptionsService implements IExceptionService {\n  throwBadRequestException(data: IFormatExceptionMessage): void {\n    throw new BadRequestException(data);\n  }\n\n  throwInternalServerErrorException(data?: IFormatExceptionMessage): void {\n    throw new InternalServerErrorException(data);\n  }\n\n  throwForbiddenException(data?: IFormatExceptionMessage): void {\n    throw new ForbiddenException(data);\n  }\n\n  throwUnauthorizedException(data?: IFormatExceptionMessage): void {\n    throw new UnauthorizedException(data);\n  }\n\n  throwNotFoundException(data?: IFormatExceptionMessage): void {\n    throw new NotFoundException(data);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllTransactionUseCase.html":{"url":"classes/FindAllTransactionUseCase.html","title":"class - FindAllTransactionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllTransactionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/transaction/find-all-transactions.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ITransactionRepository, cacheManager: ICacheManager)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/transaction/find-all-transactions.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITransactionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                        ICacheManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/transaction/find-all-transactions.usecase.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Transaction } from '../../entities/transaction.entity';\nimport { ICacheManager } from '../../interfaces/cache.interface';\nimport { ITransactionRepository } from '../../repositories/transaction.repository';\n\nexport class FindAllTransactionUseCase {\n  constructor(\n    private readonly repository: ITransactionRepository,\n    private readonly cacheManager: ICacheManager,\n  ) {}\n\n  public async execute(userId: string): Promise {\n    const cachedTransactions = await this.cacheManager.getCachedObject('transactions');\n\n    if (cachedTransactions) return cachedTransactions;\n\n    const transactions = await this.repository.findAll(userId);\n\n    await this.cacheManager.setObjectInCache('transactions', transactions);\n\n    return transactions;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindAllUserUseCase.html":{"url":"classes/FindAllUserUseCase.html","title":"class - FindAllUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindAllUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/find-all-users.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IUserRepository, cacheManager: ICacheManager)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/find-all-users.usecase.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                        ICacheManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/find-all-users.usecase.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../entities/user.entity';\nimport { IUserRepository } from '../../repositories/user.repository';\nimport { ICacheManager } from '../../interfaces/cache.interface';\n\nexport class FindAllUserUseCase {\n  constructor(\n    private readonly repository: IUserRepository,\n    private readonly cacheManager: ICacheManager,\n  ) {}\n\n  public async execute(): Promise {\n    const cachedUsers = await this.cacheManager.getCachedObject(\n      'users',\n    );\n\n    if (cachedUsers) return cachedUsers;\n\n    const users = await this.repository.findAll();\n\n    await this.cacheManager.setObjectInCache('users', users);\n\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneTransactionUseCase.html":{"url":"classes/FindOneTransactionUseCase.html","title":"class - FindOneTransactionUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneTransactionUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/transaction/find-one-transaction.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: ITransactionRepository, exceptionService: IExceptionService, cacheManager: ICacheManager)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/transaction/find-one-transaction.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ITransactionRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                        ICacheManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/transaction/find-one-transaction.usecase.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Transaction } from '../../entities/transaction.entity';\nimport { ICacheManager } from '../../interfaces/cache.interface';\nimport { IExceptionService } from '../../interfaces/exceptions.interface';\nimport { ITransactionRepository } from '../../repositories/transaction.repository';\n\nexport class FindOneTransactionUseCase {\n  constructor(\n    private readonly repository: ITransactionRepository,\n    private readonly exceptionService: IExceptionService,\n    private readonly cacheManager: ICacheManager,\n  ) {}\n\n  public async execute(id: string): Promise {\n    const cachedTransaction =\n      await this.cacheManager.getCachedObject('transaction');\n\n    if (cachedTransaction) return cachedTransaction;\n\n    const transaction: Transaction = await this.repository.findOne(id);\n\n    if (!transaction)\n      this.exceptionService.throwNotFoundException({\n        message: 'Transaction not found',\n      });\n\n    await this.cacheManager.setObjectInCache('transaction', transaction);\n\n    return transaction;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneUserUseCase.html":{"url":"classes/FindOneUserUseCase.html","title":"class - FindOneUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/find-one-user.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IUserRepository, exceptionService: IExceptionService, cacheManager: ICacheManager)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/find-one-user.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                        ICacheManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/find-one-user.usecase.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../entities/user.entity';\nimport { IUserRepository } from '../../repositories/user.repository';\nimport { IExceptionService } from '../../interfaces/exceptions.interface';\nimport { ICacheManager } from '../../interfaces/cache.interface';\n\nexport class FindOneUserUseCase {\n  constructor(\n    private readonly repository: IUserRepository,\n    private readonly exceptionService: IExceptionService,\n    private readonly cacheManager: ICacheManager,\n  ) {}\n\n  public async execute(id: string): Promise {\n    const cachedUser = await this.cacheManager.getCachedObject('user');\n\n    if (cachedUser) return cachedUser;\n\n    const user: User = await this.repository.findOne(id);\n\n    if (!user)\n      this.exceptionService.throwNotFoundException({\n        message: 'User not found',\n      });\n\n    await this.cacheManager.setObjectInCache('user', user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindUserByKeyUseCase.html":{"url":"classes/FindUserByKeyUseCase.html","title":"class - FindUserByKeyUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindUserByKeyUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/find-user-by-key.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IUserRepository, exceptionService: IExceptionService, cacheManager: ICacheManager)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/find-user-by-key.usecase.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cacheManager\n                                                  \n                                                        \n                                                                        ICacheManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/find-user-by-key.usecase.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { User } from '../../entities/user.entity';\nimport { IUserRepository } from '../../repositories/user.repository';\nimport { IExceptionService } from '../../interfaces/exceptions.interface';\nimport { ICacheManager } from '../../interfaces/cache.interface';\n\nexport class FindUserByKeyUseCase {\n  constructor(\n    private readonly repository: IUserRepository,\n    private readonly exceptionService: IExceptionService,\n    private readonly cacheManager: ICacheManager,\n  ) {}\n\n  public async execute(key: string, value: string): Promise {\n    const cachedUser = await this.cacheManager.getCachedObject(\n      'userById',\n    );\n\n    if (cachedUser) return cachedUser;\n\n    const user: User = await this.repository.findByKey(key, value);\n\n    if (!user)\n      this.exceptionService.throwNotFoundException({\n        message: 'User not found',\n      });\n\n    await this.cacheManager.setObjectInCache('userById', user);\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IApiService.html":{"url":"interfaces/IApiService.html","title":"interface - IApiService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/api.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getValue\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getValue\n                        \n                    \n                \n            \n            \n                \ngetValue(url: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/api.interface.ts:4\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AxiosResponse } from 'axios';\n\nexport interface IApiService {\n  getValue(url: string): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuth.html":{"url":"interfaces/IAuth.html","title":"interface - IAuth","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/auth.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IAuth {\n  id: string;\n  username: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRepository.html":{"url":"interfaces/IAuthRepository.html","title":"interface - IAuthRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/repositories/auth.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        login\n                                    \n                                \n                                \n                                    \n                                        validateUser\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(credentials: AuthDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/auth.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                AuthDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateUser\n                        \n                    \n                \n            \n            \n                \nvalidateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/auth.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { AuthDTO } from '../../infra/controllers/auth/auth.dto';\nimport { AuthPresenter } from '../../infra/controllers/auth/auth.presenter';\nimport { User } from '../entities/user.entity';\n\nexport interface IAuthRepository {\n  login(credentials: AuthDTO): Promise;\n\n  validateUser(\n    email: string,\n    password: string,\n  ): Promise>;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthRequest.html":{"url":"interfaces/IAuthRequest.html","title":"interface - IAuthRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/authRequest.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Request\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         IAuth\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IAuth\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { IAuth } from './auth.interface';\n\nexport interface IAuthRequest extends Request {\n  user: IAuth;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBcryptService.html":{"url":"interfaces/IBcryptService.html","title":"interface - IBcryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBcryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/bcrypt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        checkHash\n                                    \n                                \n                                \n                                    \n                                        createHash\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkHash\n                        \n                    \n                \n            \n            \n                \ncheckHash(string: string, hash: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/bcrypt.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createHash\n                        \n                    \n                \n            \n            \n                \ncreateHash(string: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/bcrypt.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IBcryptService {\n  createHash(string: string): Promise;\n  checkHash(string: string, hash: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICacheManager.html":{"url":"interfaces/ICacheManager.html","title":"interface - ICacheManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICacheManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/cache.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCachedObject\n                                    \n                                \n                                \n                                    \n                                        setObjectInCache\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCachedObject\n                        \n                    \n                \n            \n            \n                \ngetCachedObject(key: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/cache.interface.ts:2\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setObjectInCache\n                        \n                    \n                \n            \n            \n                \nsetObjectInCache(key: string, value: any)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/cache.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ICacheManager {\n  getCachedObject(key: string): Promise;\n\n  setObjectInCache(key: string, value: any): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IExceptionService.html":{"url":"interfaces/IExceptionService.html","title":"interface - IExceptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IExceptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/exceptions.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        throwBadRequestException\n                                    \n                                \n                                \n                                    \n                                        throwForbiddenException\n                                    \n                                \n                                \n                                    \n                                        throwInternalServerErrorException\n                                    \n                                \n                                \n                                    \n                                        throwNotFoundException\n                                    \n                                \n                                \n                                    \n                                        throwUnauthorizedException\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        throwBadRequestException\n                        \n                    \n                \n            \n            \n                \nthrowBadRequestException(data: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/exceptions.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwForbiddenException\n                        \n                    \n                \n            \n            \n                \nthrowForbiddenException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/exceptions.interface.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwInternalServerErrorException\n                        \n                    \n                \n            \n            \n                \nthrowInternalServerErrorException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/exceptions.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwNotFoundException\n                        \n                    \n                \n            \n            \n                \nthrowNotFoundException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/exceptions.interface.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        throwUnauthorizedException\n                        \n                    \n                \n            \n            \n                \nthrowUnauthorizedException(data?: IFormatExceptionMessage)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/exceptions.interface.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IFormatExceptionMessage\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IFormatExceptionMessage {\n  message: string;\n  statusCode?: number;\n  error?: string;\n}\n\nexport interface IExceptionService {\n  throwBadRequestException(data: IFormatExceptionMessage): void;\n  throwInternalServerErrorException(data?: IFormatExceptionMessage): void;\n  throwForbiddenException(data?: IFormatExceptionMessage): void;\n  throwUnauthorizedException(data?: IFormatExceptionMessage): void;\n  throwNotFoundException(data?: IFormatExceptionMessage): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IFormatExceptionMessage.html":{"url":"interfaces/IFormatExceptionMessage.html","title":"interface - IFormatExceptionMessage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IFormatExceptionMessage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/exceptions.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IFormatExceptionMessage {\n  message: string;\n  statusCode?: number;\n  error?: string;\n}\n\nexport interface IExceptionService {\n  throwBadRequestException(data: IFormatExceptionMessage): void;\n  throwInternalServerErrorException(data?: IFormatExceptionMessage): void;\n  throwForbiddenException(data?: IFormatExceptionMessage): void;\n  throwUnauthorizedException(data?: IFormatExceptionMessage): void;\n  throwNotFoundException(data?: IFormatExceptionMessage): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IInfo.html":{"url":"interfaces/IInfo.html","title":"interface - IInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            rate\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        rate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rate:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRates {\n  AED: number;\n  AFN: number;\n  ALL: number;\n  AMD: number;\n  ANG: number;\n  AOA: number;\n  ARS: number;\n  AUD: number;\n  AWG: number;\n  AZN: number;\n  BAM: number;\n  BBD: number;\n  BDT: number;\n  BGN: number;\n  BHD: number;\n  BIF: number;\n  BMD: number;\n  BND: number;\n  BOB: number;\n  BRL: number;\n  BSD: number;\n  BTC: number;\n  BTN: number;\n  BWP: number;\n  BYN: number;\n  BYR: number;\n  BZD: number;\n  CAD: number;\n  CDF: number;\n  CHF: number;\n  CLF: number;\n  CLP: number;\n  CNY: number;\n  COP: number;\n  CRC: number;\n  CUC: number;\n  CUP: number;\n  CVE: number;\n  CZK: number;\n  DJF: number;\n  DKK: number;\n  DOP: number;\n  DZD: number;\n  EGP: number;\n  ERN: number;\n  ETB: number;\n  EUR: number;\n  FJD: number;\n  FKP: number;\n  GBP: number;\n  GEL: number;\n  GGP: number;\n  GHS: number;\n  GIP: number;\n  GMD: number;\n  GNF: number;\n  GTQ: number;\n  GYD: number;\n  HKD: number;\n  HNL: number;\n  HRK: number;\n  HTG: number;\n  HUF: number;\n  IDR: number;\n  ILS: number;\n  IMP: number;\n  INR: number;\n  IQD: number;\n  IRR: number;\n  ISK: number;\n  JEP: number;\n  JMD: number;\n  JOD: number;\n  JPY: number;\n  KES: number;\n  KGS: number;\n  KHR: number;\n  KMF: number;\n  KPW: number;\n  KRW: number;\n  KWD: number;\n  KYD: number;\n  KZT: number;\n  LAK: number;\n  LBP: number;\n  LKR: number;\n  LRD: number;\n  LSL: number;\n  LTL: number;\n  LVL: number;\n  LYD: number;\n  MAD: number;\n  MDL: number;\n  MGA: number;\n  MKD: number;\n  MMK: number;\n  MNT: number;\n  MOP: number;\n  MRO: number;\n  MUR: number;\n  MVR: number;\n  MWK: number;\n  MXN: number;\n  MYR: number;\n  MZN: number;\n  NAD: number;\n  NGN: number;\n  NIO: number;\n  NOK: number;\n  NPR: number;\n  NZD: number;\n  OMR: number;\n  PAB: number;\n  PEN: number;\n  PGK: number;\n  PHP: number;\n  PKR: number;\n  PLN: number;\n  PYG: number;\n  QAR: number;\n  RON: number;\n  RSD: number;\n  RUB: number;\n  RWF: number;\n  SAR: number;\n  SBD: number;\n  SCR: number;\n  SDG: number;\n  SEK: number;\n  SGD: number;\n  SHP: number;\n  SLE: number;\n  SLL: number;\n  SOS: number;\n  SRD: number;\n  STD: number;\n  SVC: number;\n  SYP: number;\n  SZL: number;\n  THB: number;\n  TJS: number;\n  TMT: number;\n  TND: number;\n  TOP: number;\n  TRY: number;\n  TTD: number;\n  TWD: number;\n  TZS: number;\n  UAH: number;\n  UGX: number;\n  USD: number;\n  UYU: number;\n  UZS: number;\n  VEF: number;\n  VES: number;\n  VND: number;\n  VUV: number;\n  WST: number;\n  XAF: number;\n  XAG: number;\n  XAU: number;\n  XCD: number;\n  XDR: number;\n  XOF: number;\n  XPF: number;\n  YER: number;\n  ZAR: number;\n  ZMK: number;\n  ZMW: number;\n  ZWL: number;\n}\n\ninterface ITransactionError {\n  code: number;\n  type: string;\n  info: string;\n}\n\ninterface IQuery {\n  from: string;\n  to: string;\n  amount: number;\n}\n\ninterface IInfo {\n  timestamp: number;\n  rate: number;\n}\n\nexport type ITransaction = {\n  success: boolean;\n} & (\n  | {\n      success: false;\n      error: ITransactionError;\n    }\n  | {\n      success: true;\n      query?: IQuery;\n      info?: IInfo;\n      timestamp?: number;\n      base?: string;\n      date?: string;\n      rates?: IRates;\n    }\n);\n\nexport interface ISuccessTransaction {\n  success: true;\n  query?: IQuery;\n  info?: IInfo;\n  result?: number;\n  timestamp?: number;\n  base?: string;\n  date?: string;\n  rates?: IRates;\n}\n\nexport interface ITransactionOptions {\n  from: string;\n  to: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJwtService.html":{"url":"interfaces/IJwtService.html","title":"interface - IJwtService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJwtService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/jwt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        checkToken\n                                    \n                                \n                                \n                                    \n                                        createToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkToken\n                        \n                    \n                \n            \n            \n                \ncheckToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/jwt.interface.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createToken\n                        \n                    \n                \n            \n            \n                \ncreateToken(payload: IJwtServicePayload)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/interfaces/jwt.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IJwtServicePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface IJwtServicePayload {\n  id: string;\n  username: string;\n  avatar?: string;\n}\n\nexport interface IJwtService {\n  checkToken(token: string): Promise;\n  createToken(payload: IJwtServicePayload): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IJwtServicePayload.html":{"url":"interfaces/IJwtServicePayload.html","title":"interface - IJwtServicePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IJwtServicePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/jwt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IJwtServicePayload {\n  id: string;\n  username: string;\n  avatar?: string;\n}\n\nexport interface IJwtService {\n  checkToken(token: string): Promise;\n  createToken(payload: IJwtServicePayload): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ILogger.html":{"url":"interfaces/ILogger.html","title":"interface - ILogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ILogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/logger/logger.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        debug\n                                    \n                                \n                                \n                                    \n                                        error\n                                    \n                                \n                                \n                                    \n                                        log\n                                    \n                                \n                                \n                                    \n                                        verbose\n                                    \n                                \n                                \n                                    \n                                        warn\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/logger/logger.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(context: string, message: string, trace?: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/logger/logger.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/logger/logger.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/logger/logger.interface.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/logger/logger.interface.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface ILogger {\n  debug(context: string, message: string): void;\n  log(context: string, message: string): void;\n  error(context: string, message: string, trace?: string): void;\n  warn(context: string, message: string): void;\n  verbose(context: string, message: string): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IQuery.html":{"url":"interfaces/IQuery.html","title":"interface - IQuery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IQuery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRates {\n  AED: number;\n  AFN: number;\n  ALL: number;\n  AMD: number;\n  ANG: number;\n  AOA: number;\n  ARS: number;\n  AUD: number;\n  AWG: number;\n  AZN: number;\n  BAM: number;\n  BBD: number;\n  BDT: number;\n  BGN: number;\n  BHD: number;\n  BIF: number;\n  BMD: number;\n  BND: number;\n  BOB: number;\n  BRL: number;\n  BSD: number;\n  BTC: number;\n  BTN: number;\n  BWP: number;\n  BYN: number;\n  BYR: number;\n  BZD: number;\n  CAD: number;\n  CDF: number;\n  CHF: number;\n  CLF: number;\n  CLP: number;\n  CNY: number;\n  COP: number;\n  CRC: number;\n  CUC: number;\n  CUP: number;\n  CVE: number;\n  CZK: number;\n  DJF: number;\n  DKK: number;\n  DOP: number;\n  DZD: number;\n  EGP: number;\n  ERN: number;\n  ETB: number;\n  EUR: number;\n  FJD: number;\n  FKP: number;\n  GBP: number;\n  GEL: number;\n  GGP: number;\n  GHS: number;\n  GIP: number;\n  GMD: number;\n  GNF: number;\n  GTQ: number;\n  GYD: number;\n  HKD: number;\n  HNL: number;\n  HRK: number;\n  HTG: number;\n  HUF: number;\n  IDR: number;\n  ILS: number;\n  IMP: number;\n  INR: number;\n  IQD: number;\n  IRR: number;\n  ISK: number;\n  JEP: number;\n  JMD: number;\n  JOD: number;\n  JPY: number;\n  KES: number;\n  KGS: number;\n  KHR: number;\n  KMF: number;\n  KPW: number;\n  KRW: number;\n  KWD: number;\n  KYD: number;\n  KZT: number;\n  LAK: number;\n  LBP: number;\n  LKR: number;\n  LRD: number;\n  LSL: number;\n  LTL: number;\n  LVL: number;\n  LYD: number;\n  MAD: number;\n  MDL: number;\n  MGA: number;\n  MKD: number;\n  MMK: number;\n  MNT: number;\n  MOP: number;\n  MRO: number;\n  MUR: number;\n  MVR: number;\n  MWK: number;\n  MXN: number;\n  MYR: number;\n  MZN: number;\n  NAD: number;\n  NGN: number;\n  NIO: number;\n  NOK: number;\n  NPR: number;\n  NZD: number;\n  OMR: number;\n  PAB: number;\n  PEN: number;\n  PGK: number;\n  PHP: number;\n  PKR: number;\n  PLN: number;\n  PYG: number;\n  QAR: number;\n  RON: number;\n  RSD: number;\n  RUB: number;\n  RWF: number;\n  SAR: number;\n  SBD: number;\n  SCR: number;\n  SDG: number;\n  SEK: number;\n  SGD: number;\n  SHP: number;\n  SLE: number;\n  SLL: number;\n  SOS: number;\n  SRD: number;\n  STD: number;\n  SVC: number;\n  SYP: number;\n  SZL: number;\n  THB: number;\n  TJS: number;\n  TMT: number;\n  TND: number;\n  TOP: number;\n  TRY: number;\n  TTD: number;\n  TWD: number;\n  TZS: number;\n  UAH: number;\n  UGX: number;\n  USD: number;\n  UYU: number;\n  UZS: number;\n  VEF: number;\n  VES: number;\n  VND: number;\n  VUV: number;\n  WST: number;\n  XAF: number;\n  XAG: number;\n  XAU: number;\n  XCD: number;\n  XDR: number;\n  XOF: number;\n  XPF: number;\n  YER: number;\n  ZAR: number;\n  ZMK: number;\n  ZMW: number;\n  ZWL: number;\n}\n\ninterface ITransactionError {\n  code: number;\n  type: string;\n  info: string;\n}\n\ninterface IQuery {\n  from: string;\n  to: string;\n  amount: number;\n}\n\ninterface IInfo {\n  timestamp: number;\n  rate: number;\n}\n\nexport type ITransaction = {\n  success: boolean;\n} & (\n  | {\n      success: false;\n      error: ITransactionError;\n    }\n  | {\n      success: true;\n      query?: IQuery;\n      info?: IInfo;\n      timestamp?: number;\n      base?: string;\n      date?: string;\n      rates?: IRates;\n    }\n);\n\nexport interface ISuccessTransaction {\n  success: true;\n  query?: IQuery;\n  info?: IInfo;\n  result?: number;\n  timestamp?: number;\n  base?: string;\n  date?: string;\n  rates?: IRates;\n}\n\nexport interface ITransactionOptions {\n  from: string;\n  to: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISuccessTransaction.html":{"url":"interfaces/ISuccessTransaction.html","title":"interface - ISuccessTransaction","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISuccessTransaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            base\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            date\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            info\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            query\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rates\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            result\n                                        \n                                \n                                \n                                        \n                                            success\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        base\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        base:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         IInfo\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IInfo\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        query:         IQuery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IQuery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rates\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rates:         IRates\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         IRates\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        result\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        result:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        success:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRates {\n  AED: number;\n  AFN: number;\n  ALL: number;\n  AMD: number;\n  ANG: number;\n  AOA: number;\n  ARS: number;\n  AUD: number;\n  AWG: number;\n  AZN: number;\n  BAM: number;\n  BBD: number;\n  BDT: number;\n  BGN: number;\n  BHD: number;\n  BIF: number;\n  BMD: number;\n  BND: number;\n  BOB: number;\n  BRL: number;\n  BSD: number;\n  BTC: number;\n  BTN: number;\n  BWP: number;\n  BYN: number;\n  BYR: number;\n  BZD: number;\n  CAD: number;\n  CDF: number;\n  CHF: number;\n  CLF: number;\n  CLP: number;\n  CNY: number;\n  COP: number;\n  CRC: number;\n  CUC: number;\n  CUP: number;\n  CVE: number;\n  CZK: number;\n  DJF: number;\n  DKK: number;\n  DOP: number;\n  DZD: number;\n  EGP: number;\n  ERN: number;\n  ETB: number;\n  EUR: number;\n  FJD: number;\n  FKP: number;\n  GBP: number;\n  GEL: number;\n  GGP: number;\n  GHS: number;\n  GIP: number;\n  GMD: number;\n  GNF: number;\n  GTQ: number;\n  GYD: number;\n  HKD: number;\n  HNL: number;\n  HRK: number;\n  HTG: number;\n  HUF: number;\n  IDR: number;\n  ILS: number;\n  IMP: number;\n  INR: number;\n  IQD: number;\n  IRR: number;\n  ISK: number;\n  JEP: number;\n  JMD: number;\n  JOD: number;\n  JPY: number;\n  KES: number;\n  KGS: number;\n  KHR: number;\n  KMF: number;\n  KPW: number;\n  KRW: number;\n  KWD: number;\n  KYD: number;\n  KZT: number;\n  LAK: number;\n  LBP: number;\n  LKR: number;\n  LRD: number;\n  LSL: number;\n  LTL: number;\n  LVL: number;\n  LYD: number;\n  MAD: number;\n  MDL: number;\n  MGA: number;\n  MKD: number;\n  MMK: number;\n  MNT: number;\n  MOP: number;\n  MRO: number;\n  MUR: number;\n  MVR: number;\n  MWK: number;\n  MXN: number;\n  MYR: number;\n  MZN: number;\n  NAD: number;\n  NGN: number;\n  NIO: number;\n  NOK: number;\n  NPR: number;\n  NZD: number;\n  OMR: number;\n  PAB: number;\n  PEN: number;\n  PGK: number;\n  PHP: number;\n  PKR: number;\n  PLN: number;\n  PYG: number;\n  QAR: number;\n  RON: number;\n  RSD: number;\n  RUB: number;\n  RWF: number;\n  SAR: number;\n  SBD: number;\n  SCR: number;\n  SDG: number;\n  SEK: number;\n  SGD: number;\n  SHP: number;\n  SLE: number;\n  SLL: number;\n  SOS: number;\n  SRD: number;\n  STD: number;\n  SVC: number;\n  SYP: number;\n  SZL: number;\n  THB: number;\n  TJS: number;\n  TMT: number;\n  TND: number;\n  TOP: number;\n  TRY: number;\n  TTD: number;\n  TWD: number;\n  TZS: number;\n  UAH: number;\n  UGX: number;\n  USD: number;\n  UYU: number;\n  UZS: number;\n  VEF: number;\n  VES: number;\n  VND: number;\n  VUV: number;\n  WST: number;\n  XAF: number;\n  XAG: number;\n  XAU: number;\n  XCD: number;\n  XDR: number;\n  XOF: number;\n  XPF: number;\n  YER: number;\n  ZAR: number;\n  ZMK: number;\n  ZMW: number;\n  ZWL: number;\n}\n\ninterface ITransactionError {\n  code: number;\n  type: string;\n  info: string;\n}\n\ninterface IQuery {\n  from: string;\n  to: string;\n  amount: number;\n}\n\ninterface IInfo {\n  timestamp: number;\n  rate: number;\n}\n\nexport type ITransaction = {\n  success: boolean;\n} & (\n  | {\n      success: false;\n      error: ITransactionError;\n    }\n  | {\n      success: true;\n      query?: IQuery;\n      info?: IInfo;\n      timestamp?: number;\n      base?: string;\n      date?: string;\n      rates?: IRates;\n    }\n);\n\nexport interface ISuccessTransaction {\n  success: true;\n  query?: IQuery;\n  info?: IInfo;\n  result?: number;\n  timestamp?: number;\n  base?: string;\n  date?: string;\n  rates?: IRates;\n}\n\nexport interface ITransactionOptions {\n  from: string;\n  to: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransactionError.html":{"url":"interfaces/ITransactionError.html","title":"interface - ITransactionError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransactionError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            code\n                                        \n                                \n                                \n                                        \n                                            info\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        code\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        code:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        info\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        info:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRates {\n  AED: number;\n  AFN: number;\n  ALL: number;\n  AMD: number;\n  ANG: number;\n  AOA: number;\n  ARS: number;\n  AUD: number;\n  AWG: number;\n  AZN: number;\n  BAM: number;\n  BBD: number;\n  BDT: number;\n  BGN: number;\n  BHD: number;\n  BIF: number;\n  BMD: number;\n  BND: number;\n  BOB: number;\n  BRL: number;\n  BSD: number;\n  BTC: number;\n  BTN: number;\n  BWP: number;\n  BYN: number;\n  BYR: number;\n  BZD: number;\n  CAD: number;\n  CDF: number;\n  CHF: number;\n  CLF: number;\n  CLP: number;\n  CNY: number;\n  COP: number;\n  CRC: number;\n  CUC: number;\n  CUP: number;\n  CVE: number;\n  CZK: number;\n  DJF: number;\n  DKK: number;\n  DOP: number;\n  DZD: number;\n  EGP: number;\n  ERN: number;\n  ETB: number;\n  EUR: number;\n  FJD: number;\n  FKP: number;\n  GBP: number;\n  GEL: number;\n  GGP: number;\n  GHS: number;\n  GIP: number;\n  GMD: number;\n  GNF: number;\n  GTQ: number;\n  GYD: number;\n  HKD: number;\n  HNL: number;\n  HRK: number;\n  HTG: number;\n  HUF: number;\n  IDR: number;\n  ILS: number;\n  IMP: number;\n  INR: number;\n  IQD: number;\n  IRR: number;\n  ISK: number;\n  JEP: number;\n  JMD: number;\n  JOD: number;\n  JPY: number;\n  KES: number;\n  KGS: number;\n  KHR: number;\n  KMF: number;\n  KPW: number;\n  KRW: number;\n  KWD: number;\n  KYD: number;\n  KZT: number;\n  LAK: number;\n  LBP: number;\n  LKR: number;\n  LRD: number;\n  LSL: number;\n  LTL: number;\n  LVL: number;\n  LYD: number;\n  MAD: number;\n  MDL: number;\n  MGA: number;\n  MKD: number;\n  MMK: number;\n  MNT: number;\n  MOP: number;\n  MRO: number;\n  MUR: number;\n  MVR: number;\n  MWK: number;\n  MXN: number;\n  MYR: number;\n  MZN: number;\n  NAD: number;\n  NGN: number;\n  NIO: number;\n  NOK: number;\n  NPR: number;\n  NZD: number;\n  OMR: number;\n  PAB: number;\n  PEN: number;\n  PGK: number;\n  PHP: number;\n  PKR: number;\n  PLN: number;\n  PYG: number;\n  QAR: number;\n  RON: number;\n  RSD: number;\n  RUB: number;\n  RWF: number;\n  SAR: number;\n  SBD: number;\n  SCR: number;\n  SDG: number;\n  SEK: number;\n  SGD: number;\n  SHP: number;\n  SLE: number;\n  SLL: number;\n  SOS: number;\n  SRD: number;\n  STD: number;\n  SVC: number;\n  SYP: number;\n  SZL: number;\n  THB: number;\n  TJS: number;\n  TMT: number;\n  TND: number;\n  TOP: number;\n  TRY: number;\n  TTD: number;\n  TWD: number;\n  TZS: number;\n  UAH: number;\n  UGX: number;\n  USD: number;\n  UYU: number;\n  UZS: number;\n  VEF: number;\n  VES: number;\n  VND: number;\n  VUV: number;\n  WST: number;\n  XAF: number;\n  XAG: number;\n  XAU: number;\n  XCD: number;\n  XDR: number;\n  XOF: number;\n  XPF: number;\n  YER: number;\n  ZAR: number;\n  ZMK: number;\n  ZMW: number;\n  ZWL: number;\n}\n\ninterface ITransactionError {\n  code: number;\n  type: string;\n  info: string;\n}\n\ninterface IQuery {\n  from: string;\n  to: string;\n  amount: number;\n}\n\ninterface IInfo {\n  timestamp: number;\n  rate: number;\n}\n\nexport type ITransaction = {\n  success: boolean;\n} & (\n  | {\n      success: false;\n      error: ITransactionError;\n    }\n  | {\n      success: true;\n      query?: IQuery;\n      info?: IInfo;\n      timestamp?: number;\n      base?: string;\n      date?: string;\n      rates?: IRates;\n    }\n);\n\nexport interface ISuccessTransaction {\n  success: true;\n  query?: IQuery;\n  info?: IInfo;\n  result?: number;\n  timestamp?: number;\n  base?: string;\n  date?: string;\n  rates?: IRates;\n}\n\nexport interface ITransactionOptions {\n  from: string;\n  to: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransactionOptions.html":{"url":"interfaces/ITransactionOptions.html","title":"interface - ITransactionOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransactionOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/interfaces/transaction.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            from\n                                        \n                                \n                                \n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        interface IRates {\n  AED: number;\n  AFN: number;\n  ALL: number;\n  AMD: number;\n  ANG: number;\n  AOA: number;\n  ARS: number;\n  AUD: number;\n  AWG: number;\n  AZN: number;\n  BAM: number;\n  BBD: number;\n  BDT: number;\n  BGN: number;\n  BHD: number;\n  BIF: number;\n  BMD: number;\n  BND: number;\n  BOB: number;\n  BRL: number;\n  BSD: number;\n  BTC: number;\n  BTN: number;\n  BWP: number;\n  BYN: number;\n  BYR: number;\n  BZD: number;\n  CAD: number;\n  CDF: number;\n  CHF: number;\n  CLF: number;\n  CLP: number;\n  CNY: number;\n  COP: number;\n  CRC: number;\n  CUC: number;\n  CUP: number;\n  CVE: number;\n  CZK: number;\n  DJF: number;\n  DKK: number;\n  DOP: number;\n  DZD: number;\n  EGP: number;\n  ERN: number;\n  ETB: number;\n  EUR: number;\n  FJD: number;\n  FKP: number;\n  GBP: number;\n  GEL: number;\n  GGP: number;\n  GHS: number;\n  GIP: number;\n  GMD: number;\n  GNF: number;\n  GTQ: number;\n  GYD: number;\n  HKD: number;\n  HNL: number;\n  HRK: number;\n  HTG: number;\n  HUF: number;\n  IDR: number;\n  ILS: number;\n  IMP: number;\n  INR: number;\n  IQD: number;\n  IRR: number;\n  ISK: number;\n  JEP: number;\n  JMD: number;\n  JOD: number;\n  JPY: number;\n  KES: number;\n  KGS: number;\n  KHR: number;\n  KMF: number;\n  KPW: number;\n  KRW: number;\n  KWD: number;\n  KYD: number;\n  KZT: number;\n  LAK: number;\n  LBP: number;\n  LKR: number;\n  LRD: number;\n  LSL: number;\n  LTL: number;\n  LVL: number;\n  LYD: number;\n  MAD: number;\n  MDL: number;\n  MGA: number;\n  MKD: number;\n  MMK: number;\n  MNT: number;\n  MOP: number;\n  MRO: number;\n  MUR: number;\n  MVR: number;\n  MWK: number;\n  MXN: number;\n  MYR: number;\n  MZN: number;\n  NAD: number;\n  NGN: number;\n  NIO: number;\n  NOK: number;\n  NPR: number;\n  NZD: number;\n  OMR: number;\n  PAB: number;\n  PEN: number;\n  PGK: number;\n  PHP: number;\n  PKR: number;\n  PLN: number;\n  PYG: number;\n  QAR: number;\n  RON: number;\n  RSD: number;\n  RUB: number;\n  RWF: number;\n  SAR: number;\n  SBD: number;\n  SCR: number;\n  SDG: number;\n  SEK: number;\n  SGD: number;\n  SHP: number;\n  SLE: number;\n  SLL: number;\n  SOS: number;\n  SRD: number;\n  STD: number;\n  SVC: number;\n  SYP: number;\n  SZL: number;\n  THB: number;\n  TJS: number;\n  TMT: number;\n  TND: number;\n  TOP: number;\n  TRY: number;\n  TTD: number;\n  TWD: number;\n  TZS: number;\n  UAH: number;\n  UGX: number;\n  USD: number;\n  UYU: number;\n  UZS: number;\n  VEF: number;\n  VES: number;\n  VND: number;\n  VUV: number;\n  WST: number;\n  XAF: number;\n  XAG: number;\n  XAU: number;\n  XCD: number;\n  XDR: number;\n  XOF: number;\n  XPF: number;\n  YER: number;\n  ZAR: number;\n  ZMK: number;\n  ZMW: number;\n  ZWL: number;\n}\n\ninterface ITransactionError {\n  code: number;\n  type: string;\n  info: string;\n}\n\ninterface IQuery {\n  from: string;\n  to: string;\n  amount: number;\n}\n\ninterface IInfo {\n  timestamp: number;\n  rate: number;\n}\n\nexport type ITransaction = {\n  success: boolean;\n} & (\n  | {\n      success: false;\n      error: ITransactionError;\n    }\n  | {\n      success: true;\n      query?: IQuery;\n      info?: IInfo;\n      timestamp?: number;\n      base?: string;\n      date?: string;\n      rates?: IRates;\n    }\n);\n\nexport interface ISuccessTransaction {\n  success: true;\n  query?: IQuery;\n  info?: IInfo;\n  result?: number;\n  timestamp?: number;\n  base?: string;\n  date?: string;\n  rates?: IRates;\n}\n\nexport interface ITransactionOptions {\n  from: string;\n  to: string;\n  amount: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITransactionRepository.html":{"url":"interfaces/ITransactionRepository.html","title":"interface - ITransactionRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITransactionRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/repositories/transaction.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(transaction: CreateTransactionDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/transaction.repository.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transaction\n                                    \n                                                CreateTransactionDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/transaction.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/transaction.repository.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/transaction.repository.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateTransactionDTO } from '../../infra/controllers/transaction/transaction.dto';\nimport { Transaction } from '../entities/transaction.entity';\n\nexport interface ITransactionRepository {\n  findAll(userId: string): Promise;\n  findOne(id: string): Promise;\n  create(transaction: CreateTransactionDTO): Promise;\n  delete(id: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepository.html":{"url":"interfaces/IUserRepository.html","title":"interface - IUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/repositories/user.repository.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        alreadyExists\n                                    \n                                \n                                \n                                    \n                                        create\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        findAll\n                                    \n                                \n                                \n                                    \n                                        findByKey\n                                    \n                                \n                                \n                                    \n                                        findOne\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alreadyExists\n                        \n                    \n                \n            \n            \n                \nalreadyExists(key: string, value: string, id?: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: CreateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findByKey\n                        \n                    \n                \n            \n            \n                \nfindByKey(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, user: UpdateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/repositories/user.repository.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  CreateUserDTO,\n  UpdateUserDTO,\n} from '../../infra/controllers/user/user.dto';\nimport { User } from '../entities/user.entity';\n\nexport interface IUserRepository {\n  findAll(): Promise;\n  findOne(id: string): Promise;\n  findByKey(key: string, value: string): Promise;\n  create(user: CreateUserDTO): Promise;\n  update(id: string, user: UpdateUserDTO): Promise;\n  delete(id: string): Promise;\n  alreadyExists(key: string, value: string, id?: string): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JWTConfig.html":{"url":"interfaces/JWTConfig.html","title":"interface - JWTConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JWTConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/config/jwt.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getJwtExpirationTime\n                                    \n                                \n                                \n                                    \n                                        getJwtSecret\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtExpirationTime\n                        \n                    \n                \n            \n            \n                \ngetJwtExpirationTime()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/jwt.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJwtSecret\n                        \n                    \n                \n            \n            \n                \ngetJwtSecret()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/jwt.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface JWTConfig {\n  getJwtSecret(): string;\n  getJwtExpirationTime(): string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in server/infra/common/guards/jwt-auth.guard.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/guards/jwt-auth.guard.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/guards/jwt-auth.guard.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  ExecutionContext,\n  Injectable,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { AuthGuard } from '@nestjs/passport';\nimport { IS_PUBLIC_KEY } from './../../../main/decorators/isPublicRoute.decorator';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  constructor(private reflector: Reflector) {\n    super();\n  }\n\n  canActivate(context: ExecutionContext) {\n    const isPublic = this.reflector.getAllAndOverride(IS_PUBLIC_KEY, [\n      context.getHandler(),\n      context.getClass(),\n    ]);\n\n    if (isPublic) return true;\n\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user) {\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/JwtModule.html":{"url":"modules/JwtModule.html","title":"module - JwtModule","body":"\n                   \n\n\n\n\n    Modules\n    JwtModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_JwtModule\n\n\n\ncluster_JwtModule_imports\n\n\n\ncluster_JwtModule_providers\n\n\n\ncluster_JwtModule_exports\n\n\n\n\nJwt\n\nJwt\n\n\n\nJwtModule\n\nJwtModule\n\nJwtModule -->\n\nJwt->JwtModule\n\n\n\n\n\nJwtTokenService \n\nJwtTokenService \n\nJwtTokenService  -->\n\nJwtModule->JwtTokenService \n\n\n\n\n\nJwtTokenService\n\nJwtTokenService\n\nJwtModule -->\n\nJwtTokenService->JwtModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/services/jwt/jwt.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            JwtTokenService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            Jwt\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JwtTokenService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule as Jwt } from '@nestjs/jwt';\nimport { JwtTokenService } from './jwt.service';\n\n@Module({\n  imports: [\n    Jwt.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  providers: [JwtTokenService],\n  exports: [JwtTokenService],\n})\nexport class JwtModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in server/infra/common/strategies/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: IAuth)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/strategies/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IAuth\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { IAuth } from './../../../domain/interfaces/auth.interface';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: IAuth) {\n    return {\n      id: payload.id,\n      username: payload.username,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtTokenService.html":{"url":"injectables/JwtTokenService.html","title":"injectable - JwtTokenService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtTokenService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/services/jwt/jwt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkToken\n                            \n                            \n                                createToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in server/infra/services/jwt/jwt.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/services/jwt/jwt.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createToken\n                        \n                    \n                \n            \n            \n                \ncreateToken(payload: IJwtServicePayload)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/services/jwt/jwt.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                IJwtServicePayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtService } from '@nestjs/jwt';\nimport {\n  IJwtService,\n  IJwtServicePayload,\n} from '../../../domain/interfaces/jwt.interface';\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class JwtTokenService implements IJwtService {\n  constructor(private readonly jwtService: JwtService) {}\n\n  async checkToken(token: string): Promise {\n    return await this.jwtService.verifyAsync(token);\n  }\n\n  createToken(payload: IJwtServicePayload): string {\n    return this.jwtService.sign(payload);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/guards/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/strategies/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginUsecaseProxy: UseCaseProxy, logger: LoggerService, exceptionService: ExceptionsService)\n                    \n                \n                        \n                            \n                                Defined in server/infra/common/strategies/local.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginUsecaseProxy\n                                                  \n                                                        \n                                                                        UseCaseProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        ExceptionsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/strategies/local.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-local';\nimport { ExceptionsService } from '../../exceptions/exceptions.service';\nimport { LoggerService } from '../../logger/logger.service';\nimport { LoginUseCase } from './../../../domain/use-cases/auth/login.usecase';\nimport { AuthUsecasesProxyModule } from './../../usecases-proxy/auth/auth-usecases-proxy.module';\nimport { UseCaseProxy } from './../../usecases-proxy/usecase-proxy';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject(AuthUsecasesProxyModule.LOGIN_USECASES_PROXY)\n    private readonly loginUsecaseProxy: UseCaseProxy,\n    private readonly logger: LoggerService,\n    private readonly exceptionService: ExceptionsService,\n  ) {\n    super({\n      passReqToCallback: true,\n      usernameField: 'email',\n    });\n  }\n\n  public async validate(email: string, password: string): Promise {\n    if (!email || !password) {\n      this.logger.warn(\n        'LocalStrategy',\n        `Email or password is missing, BadRequestException`,\n      );\n      this.exceptionService.throwUnauthorizedException({\n        message: 'Email or password is missing.',\n      });\n    }\n\n    const user = await this.loginUsecaseProxy\n      .getInstance()\n      .execute({ email, password });\n\n    if (!user) {\n      this.logger.warn('LocalStrategy', `Invalid email or password`);\n\n      this.exceptionService.throwUnauthorizedException({\n        message: 'Invalid email or password.',\n      });\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Log.html":{"url":"entities/Log.html","title":"entity - Log","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Log\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/entities/log.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                contentLength\n                            \n                            \n                                    Public\n                                duration\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                hostname\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                ip\n                            \n                            \n                                    Public\n                                method\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                referer\n                            \n                            \n                                    Public\n                                requestedAt\n                            \n                            \n                                    Public\n                                statusCode\n                            \n                            \n                                    Public\n                                userAgent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        contentLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptionalStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hostname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ip\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        method\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        path\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        referer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requestedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        statusCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumberColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userAgent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/log.entity.ts:27\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsOptionalStringColumn } from 'src/main/decorators/columns/isOptionalStringColumn.decorator';\nimport { IsRequiredNumberColumn } from 'src/main/decorators/columns/isRequiredNumberColumn.decorator';\nimport { IsRequiredStringColumn } from 'src/main/decorators/columns/isRequiredStringColumn.decorator';\nimport { Entity, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Log {\n  @PrimaryGeneratedColumn('uuid')\n  public id: string;\n\n  @IsRequiredStringColumn()\n  public ip: string;\n\n  @IsRequiredStringColumn()\n  public method: string;\n\n  @IsRequiredStringColumn()\n  public path: string;\n\n  @IsRequiredNumberColumn()\n  public statusCode: number;\n\n  @IsOptionalStringColumn()\n  public contentLength: string;\n\n  @IsRequiredStringColumn()\n  public userAgent: string;\n\n  @IsRequiredStringColumn()\n  public hostname: string;\n\n  @IsRequiredStringColumn()\n  public referer: string;\n\n  @IsRequiredStringColumn()\n  public body: string;\n\n  @IsRequiredStringColumn()\n  public headers: string;\n\n  @IsRequiredStringColumn()\n  public requestedAt: string;\n\n  @IsRequiredStringColumn()\n  public duration: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerMiddleware.html":{"url":"injectables/LoggerMiddleware.html","title":"injectable - LoggerMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/middlewares/logger.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/middlewares/logger.middleware.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NestMiddleware } from '@nestjs/common';\nimport { NextFunction, Request, Response } from 'express';\nimport { Log } from 'src/domain/entities/log.entity';\nimport { getRepository } from 'typeorm';\n\n@Injectable()\nexport class LoggerMiddleware implements NestMiddleware {\n  use(request: Request, response: Response, next: NextFunction) {\n    const { ip, method, baseUrl, body, headers } = request;\n    const userAgent = request.get('user-agent') || '';\n    // eslint-disable-next-line @typescript-eslint/no-var-requires\n    const hostname = require('os').hostname();\n    const referer = request.get('referer') || '';\n    const start = new Date();\n\n    response.on('close', async () => {\n      const { statusCode } = response;\n      const contentLength = response.get('content-length');\n\n      const duration = new Date().getTime() - new Date(start).getTime();\n\n      await getRepository(Log).save({\n        ip,\n        method,\n        path: baseUrl,\n        userAgent,\n        hostname,\n        referer,\n        statusCode,\n        contentLength,\n        body: JSON.stringify(body),\n        headers: JSON.stringify(headers),\n        requestedAt: String(start),\n        duration: String(duration) + 'ms',\n      });\n    });\n\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LoggerService } from './logger.service';\n\n@Module({\n  providers: [LoggerService],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/logger/logger.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Logger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                verbose\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: EnvironmentConfigService)\n                    \n                \n                        \n                            \n                                Defined in server/infra/logger/logger.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        EnvironmentConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/logger/logger.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(context: string, message: string, trace?: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/logger/logger.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/logger/logger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        verbose\n                        \n                    \n                \n            \n            \n                \n                    \n                    verbose(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn(context: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/logger/logger.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { ILogger } from '../../domain/logger/logger.interface';\nimport { EnvironmentConfigService } from '../config/environment-config/environment-config.service';\n\n@Injectable()\nexport class LoggerService extends Logger implements ILogger {\n  constructor(private readonly config: EnvironmentConfigService) {\n    super();\n  }\n\n  public debug(context: string, message: string) {\n    if (this.config.getEnvironment() === 'development') {\n      super.debug(`[DEBUG] ${message}`, context);\n    }\n  }\n\n  public log(context: string, message: string) {\n    super.log(`[INFO] ${message}`, context);\n  }\n\n  public error(context: string, message: string, trace?: string) {\n    super.error(`[ERROR] ${message}`, trace, context);\n  }\n\n  public warn(context: string, message: string) {\n    super.warn(`[WARN] ${message}`, context);\n  }\n\n  public verbose(context: string, message: string) {\n    if (this.config.getEnvironment() === 'development') {\n      super.verbose(`[VERBOSE] ${message}`, context);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUseCase.html":{"url":"classes/LoginUseCase.html","title":"class - LoginUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/auth/login.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                            \n                                    Private\n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, jwtService: IJwtService, bcryptService: IBcryptService, exceptionService: IExceptionService, userRepository: IUserRepository)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/auth/login.usecase.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                        IJwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        IBcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(credentials: AuthDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/auth/login.usecase.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    credentials\n                                    \n                                                AuthDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/auth/login.usecase.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { AuthDTO } from '../../../infra/controllers/auth/auth.dto';\nimport { AuthPresenter } from '../../../infra/controllers/auth/auth.presenter';\nimport { User } from '../../entities/user.entity';\nimport { IBcryptService } from '../../interfaces/bcrypt.interface';\nimport { IExceptionService } from '../../interfaces/exceptions.interface';\nimport { IJwtService } from '../../interfaces/jwt.interface';\nimport { ILogger } from '../../logger/logger.interface';\nimport { IUserRepository } from '../../repositories/user.repository';\n\nexport class LoginUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly jwtService: IJwtService,\n    private readonly bcryptService: IBcryptService,\n    private readonly exceptionService: IExceptionService,\n    private readonly userRepository: IUserRepository,\n  ) {}\n\n  public async execute(credentials: AuthDTO): Promise {\n    const userValidated: Omit = await this.validateUser(\n      credentials.email,\n      credentials.password,\n    );\n\n    if (!userValidated)\n      this.exceptionService.throwNotFoundException({\n        message: 'User not found!',\n      });\n\n    const accessToken = this.jwtService.createToken({\n      id: userValidated.id,\n      username: userValidated.username,\n    });\n\n    this.logger.log(`LoginUseCases execute()`, `User have been logged in!`);\n\n    return new AuthPresenter({ accessToken });\n  }\n\n  private async validateUser(email: string, password: string) {\n    const user = await this.userRepository.findByKey('email', email);\n\n    if (!user)\n      this.exceptionService.throwNotFoundException({\n        message: 'User not found!',\n      });\n\n    if (await this.bcryptService.checkHash(password, user.password)) {\n      delete user.password;\n\n      return user;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestResponse.html":{"url":"classes/NestResponse.html","title":"class - NestResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/core/http/nestResponse.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                body\n                            \n                            \n                                    Public\n                                headers\n                            \n                            \n                                    Public\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(response: NestResponse)\n                    \n                \n                        \n                            \n                                Defined in server/domain/core/http/nestResponse.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        response\n                                                  \n                                                        \n                                                                        NestResponse\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        body\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in server/domain/core/http/nestResponse.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        headers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in server/domain/core/http/nestResponse.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in server/domain/core/http/nestResponse.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class NestResponse {\n  public status: number;\n  public headers: object;\n  public body: object;\n\n  constructor(response: NestResponse) {\n    Object.assign(this, response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NestResponseBuilder.html":{"url":"classes/NestResponseBuilder.html","title":"class - NestResponseBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NestResponseBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/core/http/nestResponse.builder.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                response\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                build\n                            \n                            \n                                    Public\n                                withBody\n                            \n                            \n                                    Public\n                                withHeaders\n                            \n                            \n                                    Public\n                                withStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        response\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NestResponse\n\n                    \n                \n                \n                    \n                        Default value : {\n    status: HttpStatus.OK,\n    headers: {},\n    body: {},\n  }\n                    \n                \n                    \n                        \n                                Defined in server/domain/core/http/nestResponse.builder.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        build\n                        \n                    \n                \n            \n            \n                \n                    \n                    build()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/core/http/nestResponse.builder.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         NestResponse\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        withBody\n                        \n                    \n                \n            \n            \n                \n                    \n                    withBody(body: object)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/core/http/nestResponse.builder.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NestResponseBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        withHeaders\n                        \n                    \n                \n            \n            \n                \n                    \n                    withHeaders(headers: object)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/core/http/nestResponse.builder.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    headers\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NestResponseBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        withStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    withStatus(status: number)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/core/http/nestResponse.builder.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         NestResponseBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { NestResponse } from './nestResponse';\n\nexport class NestResponseBuilder {\n  private response: NestResponse = {\n    status: HttpStatus.OK,\n    headers: {},\n    body: {},\n  };\n\n  public withStatus(status: number): NestResponseBuilder {\n    this.response.status = status;\n\n    return this;\n  }\n\n  public withHeaders(headers: object): NestResponseBuilder {\n    this.response.headers = headers;\n\n    return this;\n  }\n\n  public withBody(body: object): NestResponseBuilder {\n    this.response.body = body;\n\n    return this;\n  }\n\n  public build(): NestResponse {\n    return new NestResponse(this.response);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RedisConfig.html":{"url":"interfaces/RedisConfig.html","title":"interface - RedisConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RedisConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/config/redis.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getRedisHost\n                                    \n                                \n                                \n                                    \n                                        getRedisPort\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getRedisHost\n                        \n                    \n                \n            \n            \n                \ngetRedisHost()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/redis.interface.ts:2\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRedisPort\n                        \n                    \n                \n            \n            \n                \ngetRedisPort()\n                \n            \n\n\n            \n                \n                    Defined in server/domain/config/redis.interface.ts:3\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface RedisConfig {\n  getRedisHost(): string;\n  getRedisPort(): number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepositoriesModule.html":{"url":"modules/RepositoriesModule.html","title":"module - RepositoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    RepositoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RepositoriesModule\n\n\n\ncluster_RepositoriesModule_exports\n\n\n\ncluster_RepositoriesModule_imports\n\n\n\ncluster_RepositoriesModule_providers\n\n\n\n\nTypeOrmConfigModule\n\nTypeOrmConfigModule\n\n\n\nRepositoriesModule\n\nRepositoriesModule\n\nRepositoriesModule -->\n\nTypeOrmConfigModule->RepositoriesModule\n\n\n\n\n\nDatabaseTransactionRepository \n\nDatabaseTransactionRepository \n\nDatabaseTransactionRepository  -->\n\nRepositoriesModule->DatabaseTransactionRepository \n\n\n\n\n\nDatabaseUserRepository \n\nDatabaseUserRepository \n\nDatabaseUserRepository  -->\n\nRepositoriesModule->DatabaseUserRepository \n\n\n\n\n\nDatabaseTransactionRepository\n\nDatabaseTransactionRepository\n\nRepositoriesModule -->\n\nDatabaseTransactionRepository->RepositoriesModule\n\n\n\n\n\nDatabaseUserRepository\n\nDatabaseUserRepository\n\nRepositoriesModule -->\n\nDatabaseUserRepository->RepositoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/repositories/repositories.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            DatabaseTransactionRepository\n                        \n                        \n                            DatabaseUserRepository\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TypeOrmConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatabaseTransactionRepository\n                        \n                        \n                            DatabaseUserRepository\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Transaction } from '../../domain/entities/transaction.entity';\nimport { User } from '../../domain/entities/user.entity';\nimport { TypeOrmConfigModule } from '../config/typeorm/typeorm.module';\nimport { DatabaseTransactionRepository } from './transaction.repository';\nimport { DatabaseUserRepository } from './user.repository';\n\n@Module({\n  imports: [TypeOrmConfigModule, TypeOrmModule.forFeature([User, Transaction])],\n  providers: [DatabaseUserRepository, DatabaseTransactionRepository],\n  exports: [DatabaseUserRepository, DatabaseTransactionRepository],\n})\nexport class RepositoriesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupContainer.html":{"url":"classes/SetupContainer.html","title":"class - SetupContainer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/utils/setupContainer.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                for\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        for\n                        \n                    \n                \n            \n            \n                \n                    \n                    for(app: INestApplication, appModule: DynamicModule | Type<>)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/utils/setupContainer.utils.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    appModule\n                                    \n                                            DynamicModule | Type<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DynamicModule, INestApplication, Type } from '@nestjs/common';\nimport { useContainer } from 'class-validator';\n\nexport class SetupContainer {\n  static for(app: INestApplication, appModule: DynamicModule | Type) {\n    useContainer(app.select(appModule), { fallbackOnErrors: true });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupDocumentBuilder.html":{"url":"classes/SetupDocumentBuilder.html","title":"class - SetupDocumentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupDocumentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/utils/setupDocumentBuilder.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                for\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        for\n                        \n                    \n                \n            \n            \n                \n                    \n                    for(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/utils/setupDocumentBuilder.utils.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication } from '@nestjs/common';\nimport { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';\n\nexport class SetupDocumentBuilder {\n  static for(app: INestApplication) {\n    const config = new DocumentBuilder()\n      .setTitle('Converter API - recruiting test')\n      .setDescription(\n        'This is a sample of API capable of converting between two currencies using enhanced security fees from an external service. This API is part of a recruitment test for a job position. Contained modules: User, Auth and Transaction.',\n      )\n      .setVersion('1.0')\n      .addTag('User')\n      .addTag('Authentication')\n      .addTag('Transaction')\n      .addBearerAuth()\n      .addBasicAuth()\n      .build();\n\n    const document = SwaggerModule.createDocument(app, config);\n    SwaggerModule.setup('api', app, document);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupGlobalFilters.html":{"url":"classes/SetupGlobalFilters.html","title":"class - SetupGlobalFilters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupGlobalFilters\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/utils/setupGlobalFilters.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                for\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        for\n                        \n                    \n                \n            \n            \n                \n                    \n                    for(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/utils/setupGlobalFilters.utils.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication } from '@nestjs/common';\nimport { AllExceptionsFilter } from '../filters/exception.filter';\n\nexport class SetupGlobalFilters {\n  static for(app: INestApplication) {\n    app.useGlobalFilters(new AllExceptionsFilter());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupGlobalInterceptors.html":{"url":"classes/SetupGlobalInterceptors.html","title":"class - SetupGlobalInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupGlobalInterceptors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/utils/setupGlobalInterceptors.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                for\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        for\n                        \n                    \n                \n            \n            \n                \n                    \n                    for(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/utils/setupGlobalInterceptors.utils.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ClassSerializerInterceptor, INestApplication } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\n\nexport class SetupGlobalInterceptors {\n  static for(app: INestApplication) {\n    app.useGlobalInterceptors(\n      new ClassSerializerInterceptor(app.get(Reflector)),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetupGlobalPipes.html":{"url":"classes/SetupGlobalPipes.html","title":"class - SetupGlobalPipes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetupGlobalPipes\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/utils/setupGlobalPipes.utils.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                for\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        for\n                        \n                    \n                \n            \n            \n                \n                    \n                    for(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/utils/setupGlobalPipes.utils.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { INestApplication, ValidationPipe } from '@nestjs/common';\n\nexport class SetupGlobalPipes {\n  static for(app: INestApplication) {\n    app.useGlobalPipes(new ValidationPipe({ transform: true }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Transaction.html":{"url":"entities/Transaction.html","title":"entity - Transaction","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Transaction\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/entities/transaction.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conversionRate\n                            \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                destinationCurrency\n                            \n                            \n                                    Public\n                                destinationValue\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                sourceCurrency\n                            \n                            \n                                    Public\n                                sourceValue\n                            \n                            \n                                    Public\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conversionRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumberColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumberColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumberColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.id, {onDelete: 'CASCADE'})@JoinColumn({name: 'userId'})\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/transaction.entity.ts:13\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { IsRequiredDateColumn } from 'src/main/decorators/columns/isRequiredDateColumn.decorator';\nimport { IsRequiredNumberColumn } from 'src/main/decorators/columns/isRequiredNumberColumn.decorator';\nimport { IsRequiredStringColumn } from 'src/main/decorators/columns/isRequiredStringColumn.decorator';\nimport { Entity, JoinColumn, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\n@Entity()\nexport class Transaction {\n  @PrimaryGeneratedColumn('uuid')\n  public id: string;\n\n  @IsRequiredStringColumn()\n  public userId: string;\n\n  @IsRequiredStringColumn()\n  public sourceCurrency: string;\n\n  @IsRequiredStringColumn()\n  public destinationCurrency: string;\n\n  @IsRequiredNumberColumn()\n  public sourceValue: number;\n\n  @IsRequiredNumberColumn()\n  public destinationValue: number;\n\n  @IsRequiredNumberColumn()\n  public conversionRate: number;\n\n  @IsRequiredDateColumn()\n  public dateTime: Date;\n\n  @ManyToOne(() => User, (user) => user.id, { onDelete: 'CASCADE' })\n  @JoinColumn({ name: 'userId' })\n  public user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TransactionController.html":{"url":"controllers/TransactionController.html","title":"controller - TransactionController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TransactionController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/transaction/transaction.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                transactions\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(request: IAuthRequest, options: TransactionOptionsDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@UseGuards(undefined)@PostApiResponse(TransactionPresenter)\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/transaction/transaction.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IAuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                TransactionOptionsDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@DeleteApiResponse('/:id')\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/transaction/transaction.controller.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(request: IAuthRequest)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(undefined)@GetApiResponse(TransactionPresenter)\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/transaction/transaction.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                                IAuthRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GetApiResponse(TransactionPresenter, ':id')\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/transaction/transaction.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  HttpCode,\n  Inject,\n  Param,\n  Req,\n  UseGuards\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiTags } from '@nestjs/swagger';\nimport { Transaction } from 'src/domain/entities/transaction.entity';\nimport { IAuthRequest } from 'src/domain/interfaces/authRequest.interface';\nimport { Public } from 'src/main/decorators/isPublicRoute.decorator';\nimport {\n  CreateTransactionUseCase,\n  DeleteTransactionUseCase,\n  FindAllTransactionUseCase,\n  FindOneTransactionUseCase\n} from '../../../domain/use-cases/transaction/index';\nimport { DeleteApiResponse } from '../../../main/decorators/requests/deleteApiResponse.decorator';\nimport { GetApiResponse } from '../../../main/decorators/requests/getApiResponse.decorator';\nimport { PostApiResponse } from '../../../main/decorators/requests/postApiResponse.decorator';\nimport { TransactionUsecasesProxyModule } from '../../usecases-proxy/transaction/transaction-usecases-proxy.module';\nimport { UseCaseProxy } from '../../usecases-proxy/usecase-proxy';\nimport { TransactionOptionsDTO } from './transaction.dto';\nimport { TransactionPresenter } from './transaction.presenter';\n\n@ApiTags('Transaction')\n@Controller('transactions')\nexport class TransactionController {\n  constructor(\n    @Inject(TransactionUsecasesProxyModule.GET_TRANSACTIONS_USECASES_PROXY)\n    private readonly findAllTransactionUseCase: UseCaseProxy,\n    @Inject(TransactionUsecasesProxyModule.GET_TRANSACTION_USECASES_PROXY)\n    private readonly findOneTransactionUseCase: UseCaseProxy,\n    @Inject(TransactionUsecasesProxyModule.POST_TRANSACTION_USECASES_PROXY)\n    private readonly createTransactionUseCase: UseCaseProxy,\n    @Inject(TransactionUsecasesProxyModule.DELETE_TRANSACTION_USECASES_PROXY)\n    private readonly deleteTransactionUseCase: UseCaseProxy,\n  ) {}\n\n  @UseGuards(AuthGuard('jwt'))\n  @GetApiResponse(TransactionPresenter)\n  public async findAll(\n    @Req() request: IAuthRequest,\n  ): Promise {\n    const userId: string = request.user.id;\n\n    const transactions = await this.findAllTransactionUseCase\n      .getInstance()\n      .execute(userId);\n\n    return transactions.map(\n      (transaction) => new TransactionPresenter(transaction),\n    );\n  }\n\n  @GetApiResponse(TransactionPresenter, ':id')\n  public async findOne(@Param('id') id: string): Promise {\n    const transaction = await this.findOneTransactionUseCase\n      .getInstance()\n      .execute(id);\n    return new TransactionPresenter(transaction);\n  }\n\n  @Public()\n  @UseGuards(AuthGuard('jwt'))\n  @PostApiResponse(TransactionPresenter)\n  public async create(\n    @Req() request: IAuthRequest,\n    @Body() options: TransactionOptionsDTO,\n  ): Promise {\n    const createOptions = new TransactionOptionsDTO({\n      ...options,\n      userId: request.user.id,\n    });\n\n    const { userId, from, to, amount } = createOptions;\n\n    const createdTransaction = await this.createTransactionUseCase\n      .getInstance()\n      .execute(userId, from, to, amount);\n\n    return new TransactionPresenter(createdTransaction);\n  }\n\n  @HttpCode(204)\n  @DeleteApiResponse('/:id')\n  public async delete(@Param('id') id: string): Promise {\n    return await this.deleteTransactionUseCase.getInstance().execute(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionOptionsDTO.html":{"url":"classes/TransactionOptionsDTO.html","title":"class - TransactionOptionsDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionOptionsDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/transaction/transaction.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                amount\n                            \n                            \n                                    Public\n                                from\n                            \n                            \n                                    Public\n                                to\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(props: TransactionOptionsDTO)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        props\n                                                  \n                                                        \n                                                                        TransactionOptionsDTO\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        amount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptionalString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptionalString } from 'src/main/decorators/validators/isOptionalString.decorator';\nimport { IsRequiredDate } from 'src/main/decorators/validators/isRequiredDate.decorator';\nimport { IsRequiredNumber } from 'src/main/decorators/validators/isRequiredNumber.decorator';\nimport { IsRequiredString } from 'src/main/decorators/validators/isRequiredString.decorator';\n\nexport class CreateTransactionDTO {\n  @IsRequiredString()\n  public userId: string;\n\n  @IsRequiredString()\n  public sourceCurrency: string;\n\n  @IsRequiredString()\n  public destinationCurrency: string;\n\n  @IsRequiredNumber()\n  public sourceValue: number;\n\n  @IsRequiredNumber()\n  public destinationValue: number;\n\n  @IsRequiredNumber()\n  public conversionRate: number;\n\n  @IsRequiredDate()\n  public dateTime: Date | string;\n\n  constructor(props: CreateTransactionDTO) {\n    Object.assign(this, props);\n  }\n}\n\nexport class TransactionOptionsDTO {\n  @IsOptionalString()\n  public userId: string;\n\n  @IsRequiredString()\n  public from: string;\n\n  @IsRequiredString()\n  public to: string;\n\n  @IsRequiredNumber()\n  public amount: number;\n\n  constructor(props: TransactionOptionsDTO) {\n    Object.assign(this, props);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TransactionPresenter.html":{"url":"classes/TransactionPresenter.html","title":"class - TransactionPresenter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TransactionPresenter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/transaction/transaction.presenter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                conversionRate\n                            \n                            \n                                    Public\n                                dateTime\n                            \n                            \n                                    Public\n                                destinationCurrency\n                            \n                            \n                                    Public\n                                destinationValue\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                sourceCurrency\n                            \n                            \n                                    Public\n                                sourceValue\n                            \n                            \n                                    Public\n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(Transaction: TransactionPresenter)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        Transaction\n                                                  \n                                                        \n                                                                        TransactionPresenter\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        conversionRate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dateTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        destinationValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceCurrency\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sourceValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/transaction/transaction.presenter.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TransactionPresenter {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public userId: string;\n\n  @ApiProperty()\n  public sourceCurrency: string;\n\n  @ApiProperty()\n  public destinationCurrency: string;\n\n  @ApiProperty()\n  public sourceValue: number;\n\n  @ApiProperty()\n  public destinationValue: number;\n\n  @ApiProperty()\n  public conversionRate: number;\n\n  @ApiProperty()\n  public dateTime: Date;\n\n  constructor(Transaction: TransactionPresenter) {\n    Object.assign(this, Transaction);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TransactionUsecasesProxyModule.html":{"url":"modules/TransactionUsecasesProxyModule.html","title":"module - TransactionUsecasesProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    TransactionUsecasesProxyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TransactionUsecasesProxyModule\n\n\n\ncluster_TransactionUsecasesProxyModule_imports\n\n\n\n\nApiConfigModule\n\nApiConfigModule\n\n\n\nTransactionUsecasesProxyModule\n\nTransactionUsecasesProxyModule\n\nTransactionUsecasesProxyModule -->\n\nApiConfigModule->TransactionUsecasesProxyModule\n\n\n\n\n\nCacheConfigModule\n\nCacheConfigModule\n\nTransactionUsecasesProxyModule -->\n\nCacheConfigModule->TransactionUsecasesProxyModule\n\n\n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nTransactionUsecasesProxyModule -->\n\nEnvironmentConfigModule->TransactionUsecasesProxyModule\n\n\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nTransactionUsecasesProxyModule -->\n\nExceptionsModule->TransactionUsecasesProxyModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nTransactionUsecasesProxyModule -->\n\nLoggerModule->TransactionUsecasesProxyModule\n\n\n\n\n\nRepositoriesModule\n\nRepositoriesModule\n\nTransactionUsecasesProxyModule -->\n\nRepositoriesModule->TransactionUsecasesProxyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/usecases-proxy/transaction/transaction-usecases-proxy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            ApiConfigModule\n                        \n                        \n                            CacheConfigModule\n                        \n                        \n                            EnvironmentConfigModule\n                        \n                        \n                            ExceptionsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RepositoriesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/usecases-proxy/transaction/transaction-usecases-proxy.module.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { EnvironmentConfigService } from 'src/infra/config/environment-config/environment-config.service';\nimport { ApiConfigModule } from 'src/infra/services/api/api.module';\nimport { ApiConfigService } from 'src/infra/services/api/api.service';\nimport {\n  CreateTransactionUseCase,\n  DeleteTransactionUseCase,\n  FindAllTransactionUseCase,\n  FindOneTransactionUseCase,\n} from '../../../domain/use-cases/transaction';\nimport { EnvironmentConfigModule } from '../../config/environment-config/environment-config.module';\nimport { CacheConfigModule } from '../../config/redis/cache.module';\nimport { CacheService } from '../../config/redis/cache.service';\nimport { ExceptionsModule } from '../../exceptions/exceptions.module';\nimport { ExceptionsService } from '../../exceptions/exceptions.service';\nimport { LoggerModule } from '../../logger/logger.module';\nimport { LoggerService } from '../../logger/logger.service';\nimport { RepositoriesModule } from '../../repositories/repositories.module';\nimport { DatabaseTransactionRepository } from '../../repositories/transaction.repository';\nimport { UseCaseProxy } from '../usecase-proxy';\n\n@Module({\n  imports: [\n    LoggerModule,\n    EnvironmentConfigModule,\n    RepositoriesModule,\n    ExceptionsModule,\n    CacheConfigModule,\n    ApiConfigModule,\n  ],\n})\nexport class TransactionUsecasesProxyModule {\n  static GET_TRANSACTION_USECASES_PROXY = 'getTransactionUsecasesProxy';\n  static GET_TRANSACTIONS_USECASES_PROXY = 'getTransactionsUsecasesProxy';\n  static POST_TRANSACTION_USECASES_PROXY = 'postTransactionUsecasesProxy';\n  static DELETE_TRANSACTION_USECASES_PROXY = 'deleteTransactionUsecasesProxy';\n\n  static register(): DynamicModule {\n    return {\n      module: TransactionUsecasesProxyModule,\n      providers: [\n        {\n          inject: [DatabaseTransactionRepository, CacheService],\n          provide:\n            TransactionUsecasesProxyModule.GET_TRANSACTIONS_USECASES_PROXY,\n          useFactory: (\n            repository: DatabaseTransactionRepository,\n            cacheService: CacheService,\n          ) =>\n            new UseCaseProxy(\n              new FindAllTransactionUseCase(repository, cacheService),\n            ),\n        },\n        {\n          inject: [\n            DatabaseTransactionRepository,\n            ExceptionsService,\n            CacheService,\n          ],\n          provide:\n            TransactionUsecasesProxyModule.GET_TRANSACTION_USECASES_PROXY,\n          useFactory: (\n            repository: DatabaseTransactionRepository,\n            exceptionService: ExceptionsService,\n            cacheService: CacheService,\n          ) =>\n            new UseCaseProxy(\n              new FindOneTransactionUseCase(\n                repository,\n                exceptionService,\n                cacheService,\n              ),\n            ),\n        },\n        {\n          inject: [\n            LoggerService,\n            DatabaseTransactionRepository,\n            ExceptionsService,\n            ApiConfigService,\n            EnvironmentConfigService,\n          ],\n          provide:\n            TransactionUsecasesProxyModule.POST_TRANSACTION_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            repository: DatabaseTransactionRepository,\n            exceptionService: ExceptionsService,\n            service: ApiConfigService,\n            config: EnvironmentConfigService,\n          ) =>\n            new UseCaseProxy(\n              new CreateTransactionUseCase(\n                logger,\n                repository,\n                exceptionService,\n                service,\n                config,\n              ),\n            ),\n        },\n        {\n          inject: [\n            LoggerService,\n            DatabaseTransactionRepository,\n            ExceptionsService,\n          ],\n          provide:\n            TransactionUsecasesProxyModule.DELETE_TRANSACTION_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            repository: DatabaseTransactionRepository,\n            exceptionService: ExceptionsService,\n          ) =>\n            new UseCaseProxy(\n              new DeleteTransactionUseCase(\n                logger,\n                repository,\n                exceptionService,\n              ),\n            ),\n        },\n      ],\n      exports: [\n        TransactionUsecasesProxyModule.GET_TRANSACTIONS_USECASES_PROXY,\n        TransactionUsecasesProxyModule.GET_TRANSACTION_USECASES_PROXY,\n        TransactionUsecasesProxyModule.POST_TRANSACTION_USECASES_PROXY,\n        TransactionUsecasesProxyModule.DELETE_TRANSACTION_USECASES_PROXY,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformResponseInterceptor.html":{"url":"injectables/TransformResponseInterceptor.html","title":"injectable - TransformResponseInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformResponseInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/common/interceptor/transformResponse.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpAdapter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(adapterHost: HttpAdapterHost)\n                    \n                \n                        \n                            \n                                Defined in server/infra/common/interceptor/transformResponse.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        adapterHost\n                                                  \n                                                        \n                                                                    HttpAdapterHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in server/infra/common/interceptor/transformResponse.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        httpAdapter\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AbstractHttpAdapter\n\n                    \n                \n                    \n                        \n                                Defined in server/infra/common/interceptor/transformResponse.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  CallHandler,\n  ExecutionContext,\n  Injectable,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { AbstractHttpAdapter, HttpAdapterHost } from '@nestjs/core';\nimport { map, Observable } from 'rxjs';\nimport { NestResponse } from 'src/domain/core/http/nestResponse';\n\n@Injectable()\nexport class TransformResponseInterceptor implements NestInterceptor {\n  private httpAdapter: AbstractHttpAdapter;\n\n  //if you use Fastify or Express, you can use this method to get the underlying HTTP adapter\n  constructor(adapterHost: HttpAdapterHost) {\n    this.httpAdapter = adapterHost.httpAdapter;\n  }\n\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler,\n  ): Observable | Promise> {\n    return next.handle().pipe(\n      map((response: NestResponse) => {\n        if (response instanceof NestResponse) {\n          const currentContext = context.switchToHttp();\n          const currentResponse = currentContext.getResponse();\n          const { status, headers, body } = response;\n\n          const headerNames = Object.getOwnPropertyNames(headers);\n\n          headerNames.forEach((headerName) => {\n            const headerValue = headers[headerName];\n            this.httpAdapter.setHeader(\n              currentResponse,\n              headerName,\n              headerValue,\n            );\n          });\n\n          this.httpAdapter.status(currentResponse, status);\n\n          return body;\n        }\n\n        return response;\n      }),\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TypeOrmConfigModule.html":{"url":"modules/TypeOrmConfigModule.html","title":"module - TypeOrmConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    TypeOrmConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/config/typeorm/typeorm.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule, TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport { EnvironmentConfigModule } from '../environment-config/environment-config.module';\nimport { EnvironmentConfigService } from '../environment-config/environment-config.service';\n\nexport const getTypeOrmModuleOptions = (\n  config: EnvironmentConfigService,\n): TypeOrmModuleOptions =>\n  ({\n    type: config.getDatabaseType(),\n    host: config.getDatabaseHost(),\n    port: config.getDatabasePort(),\n    username: config.getDatabaseUser(),\n    password: config.getDatabasePassword(),\n    database: config.getDatabaseName(),\n    entities: ['dist/**/*.entity{.ts,.js}'],\n    synchronize: config.getDatabaseSync(),\n    ssl: config.getEnvironment() === 'production',\n    logging: config.getEnvironment() === 'development',\n    extra:\n      config.getEnvironment() === 'production'\n        ? {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          }\n        : {},\n  } as TypeOrmModuleOptions);\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [EnvironmentConfigModule],\n      inject: [EnvironmentConfigService],\n      useFactory: getTypeOrmModuleOptions,\n    }),\n  ],\n})\nexport class TypeOrmConfigModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDTO.html":{"url":"classes/UpdateUserDTO.html","title":"class - UpdateUserDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/user/user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                email\n                            \n                            \n                                    Public\n                                    Optional\n                                password\n                            \n                            \n                                    Public\n                                    Optional\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptionalString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptionalString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptionalString()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.dto.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsOptionalString } from 'src/main/decorators/validators/isOptionalString.decorator';\nimport { IsRequiredEmail } from 'src/main/decorators/validators/isRequiredEmail.decorator';\nimport { IsRequiredString } from 'src/main/decorators/validators/isRequiredString.decorator';\n\nexport class CreateUserDTO {\n  @IsRequiredString()\n  public username: string;\n\n  @IsRequiredEmail()\n  public email: string;\n\n  @IsRequiredString()\n  public password: string;\n}\n\nexport class UpdateUserDTO {\n  @IsOptionalString()\n  public username?: string;\n\n  @IsOptionalString()\n  public email?: string;\n\n  @IsOptionalString()\n  public password?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserUseCase.html":{"url":"classes/UpdateUserUseCase.html","title":"class - UpdateUserUseCase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserUseCase\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/use-cases/user/update-user.usecase.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                execute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(logger: ILogger, repository: IUserRepository, bcryptService: IBcryptService, exceptionService: IExceptionService)\n                    \n                \n                        \n                            \n                                Defined in server/domain/use-cases/user/update-user.usecase.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        ILogger\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        bcryptService\n                                                  \n                                                        \n                                                                        IBcryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        exceptionService\n                                                  \n                                                        \n                                                                        IExceptionService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        execute\n                        \n                    \n                \n            \n            \n                \n                    \n                    execute(id: string, user: UpdateUserDTO)\n                \n            \n\n\n            \n                \n                    Defined in server/domain/use-cases/user/update-user.usecase.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpStatus } from '@nestjs/common';\nimport { IExceptionService } from 'src/domain/interfaces/exceptions.interface';\nimport { UpdateUserDTO } from './../../../infra/controllers/user/user.dto';\nimport { User } from './../../entities/user.entity';\nimport { IBcryptService } from './../../interfaces/bcrypt.interface';\nimport { ILogger } from './../../logger/logger.interface';\nimport { IUserRepository } from './../../repositories/user.repository';\n\nexport class UpdateUserUseCase {\n  constructor(\n    private readonly logger: ILogger,\n    private readonly repository: IUserRepository,\n    private readonly bcryptService: IBcryptService,\n    private readonly exceptionService: IExceptionService,\n  ) {}\n\n  public async execute(id: string, user: UpdateUserDTO): Promise {\n    if (await this.repository.alreadyExists('email', user.email, id))\n      this.exceptionService.throwForbiddenException({\n        message: 'Email already exists in app!',\n        statusCode: HttpStatus.FORBIDDEN,\n      });\n\n    if (user.password)\n      user.password = await this.bcryptService.createHash(user.password);\n\n    const updatedUser = await this.repository.update(id, user);\n\n    this.logger.log(\n      'UpdateUserUseCases execute()',\n      `User ${id} have been updated`,\n    );\n\n    return updatedUser;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UseCaseProxy.html":{"url":"classes/UseCaseProxy.html","title":"class - UseCaseProxy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UseCaseProxy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/usecases-proxy/usecase-proxy.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getInstance\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useCase: T)\n                    \n                \n                        \n                            \n                                Defined in server/infra/usecases-proxy/usecase-proxy.ts:1\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useCase\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getInstance\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInstance()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/usecases-proxy/usecase-proxy.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class UseCaseProxy {\n  constructor(private readonly useCase: T) {}\n\n  public getInstance(): T {\n    return this.useCase;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/domain/entities/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                password\n                            \n                            \n                                    Public\n                                    Optional\n                                transactions\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Optional\n                        transactions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Transaction[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, transaction => transaction.user, {cascade: true, onDelete: 'CASCADE', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsRequiredStringColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/domain/entities/user.entity.ts:17\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  Entity,\n  OneToMany,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { IsRequiredStringColumn } from '../../main/decorators/columns/isRequiredStringColumn.decorator';\nimport { Transaction } from './transaction.entity';\n\n@Entity()\nexport class User {\n  @PrimaryGeneratedColumn('uuid')\n  public id: string;\n\n  @IsRequiredStringColumn()\n  public username: string;\n\n  @IsRequiredStringColumn()\n  public email: string;\n\n  @IsRequiredStringColumn()\n  public password: string;\n\n  @CreateDateColumn()\n  public createdAt: Date;\n\n  @UpdateDateColumn()\n  public updatedAt: Date;\n\n  @OneToMany(() => Transaction, (transaction) => transaction.user, {\n    cascade: true,\n    onDelete: 'CASCADE',\n    nullable: true,\n  })\n  public transactions?: Transaction[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: CreateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Public()@PostApiResponse(UserPresenter, '', undefined)\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/user/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                CreateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(204)@DeleteApiResponse('/:id')\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/user/user.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GetApiResponse(UserPresenter)\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/user/user.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @GetApiResponse(UserPresenter, ':id')\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/user/user.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, user: UpdateUserDTO)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @PutApiResponse(UserPresenter, '/:id')\n                \n            \n\n            \n                \n                    Defined in server/infra/controllers/user/user.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                UpdateUserDTO\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, HttpCode, Inject, Param } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/domain/entities/user.entity';\nimport { Public } from 'src/main/decorators/isPublicRoute.decorator';\nimport { DeleteApiResponse } from '../../../main/decorators/requests/deleteApiResponse.decorator';\nimport { GetApiResponse } from '../../../main/decorators/requests/getApiResponse.decorator';\nimport { PostApiResponse } from '../../../main/decorators/requests/postApiResponse.decorator';\nimport { PutApiResponse } from '../../../main/decorators/requests/putApiResponse.decorator';\nimport { UserUsecasesProxyModule } from '../../usecases-proxy/user/user-usecases-proxy.module';\nimport {\n  CreateUserUseCase,\n  DeleteUserUseCase,\n  FindAllUserUseCase,\n  FindOneUserUseCase,\n  UpdateUserUseCase\n} from './../../../domain/use-cases/user/index';\nimport { UseCaseProxy } from './../../usecases-proxy/usecase-proxy';\nimport { CreateUserDTO, UpdateUserDTO } from './user.dto';\nimport { UserPresenter } from './user.presenter';\n\n@ApiTags('User')\n@Controller('users')\nexport class UserController {\n  constructor(\n    @Inject(UserUsecasesProxyModule.GET_USERS_USECASES_PROXY)\n    private readonly findAllUserUseCase: UseCaseProxy,\n    @Inject(UserUsecasesProxyModule.GET_USER_USECASES_PROXY)\n    private readonly findOneUserUseCase: UseCaseProxy,\n    @Inject(UserUsecasesProxyModule.POST_USER_USECASES_PROXY)\n    private readonly createUserUseCase: UseCaseProxy,\n    @Inject(UserUsecasesProxyModule.PUT_USER_USECASES_PROXY)\n    private readonly updateUserUseCase: UseCaseProxy,\n    @Inject(UserUsecasesProxyModule.DELETE_USER_USECASES_PROXY)\n    private readonly deleteUserUseCase: UseCaseProxy,\n  ) {}\n\n  @GetApiResponse(UserPresenter)\n  public async findAll(): Promise {\n    const users = await this.findAllUserUseCase.getInstance().execute();\n    return users.map((user) => new UserPresenter(user));\n  }\n\n  @GetApiResponse(UserPresenter, ':id')\n  public async findOne(@Param('id') id: string): Promise {\n    const user = await this.findOneUserUseCase.getInstance().execute(id);\n    return new UserPresenter(user);\n  }\n\n  @Public()\n  @PostApiResponse(UserPresenter, '', false)\n  public async create(@Body() user: CreateUserDTO): Promise {\n    const createdUser = await this.createUserUseCase\n      .getInstance()\n      .execute(user);\n\n    return new UserPresenter(createdUser);\n  }\n\n  @PutApiResponse(UserPresenter, '/:id')\n  public async update(\n    @Param('id') id: string,\n    @Body() user: UpdateUserDTO,\n  ): Promise {\n    const updatedUser = await this.updateUserUseCase\n      .getInstance()\n      .execute(id, user);\n\n    return new UserPresenter(updatedUser);\n  }\n\n  @HttpCode(204)\n  @DeleteApiResponse('/:id')\n  public async delete(@Param('id') id: string): Promise {\n    return await this.deleteUserUseCase.getInstance().execute(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserPresenter.html":{"url":"classes/UserPresenter.html","title":"class - UserPresenter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserPresenter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            server/infra/controllers/user/user.presenter.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createdAt\n                            \n                            \n                                    Public\n                                email\n                            \n                            \n                                    Public\n                                id\n                            \n                            \n                                    Public\n                                updatedAt\n                            \n                            \n                                    Public\n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(user: User)\n                    \n                \n                        \n                            \n                                Defined in server/infra/controllers/user/user.presenter.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        User\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.presenter.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.presenter.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.presenter.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.presenter.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in server/infra/controllers/user/user.presenter.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/domain/entities/user.entity';\n\nexport class UserPresenter {\n  @ApiProperty()\n  public id: string;\n\n  @ApiProperty()\n  public username: string;\n\n  @ApiProperty()\n  public email: string;\n\n  @ApiProperty()\n  public createdAt: Date;\n\n  @ApiProperty()\n  public updatedAt: Date;\n\n  constructor(user: User) {\n    delete user.password;\n    Object.assign(this, user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserUsecasesProxyModule.html":{"url":"modules/UserUsecasesProxyModule.html","title":"module - UserUsecasesProxyModule","body":"\n                   \n\n\n\n\n    Modules\n    UserUsecasesProxyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserUsecasesProxyModule\n\n\n\ncluster_UserUsecasesProxyModule_imports\n\n\n\n\nBcryptModule\n\nBcryptModule\n\n\n\nUserUsecasesProxyModule\n\nUserUsecasesProxyModule\n\nUserUsecasesProxyModule -->\n\nBcryptModule->UserUsecasesProxyModule\n\n\n\n\n\nCacheConfigModule\n\nCacheConfigModule\n\nUserUsecasesProxyModule -->\n\nCacheConfigModule->UserUsecasesProxyModule\n\n\n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nUserUsecasesProxyModule -->\n\nEnvironmentConfigModule->UserUsecasesProxyModule\n\n\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nUserUsecasesProxyModule -->\n\nExceptionsModule->UserUsecasesProxyModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nUserUsecasesProxyModule -->\n\nLoggerModule->UserUsecasesProxyModule\n\n\n\n\n\nRepositoriesModule\n\nRepositoriesModule\n\nUserUsecasesProxyModule -->\n\nRepositoriesModule->UserUsecasesProxyModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            server/infra/usecases-proxy/user/user-usecases-proxy.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BcryptModule\n                        \n                        \n                            CacheConfigModule\n                        \n                        \n                            EnvironmentConfigModule\n                        \n                        \n                            ExceptionsModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RepositoriesModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register()\n                \n            \n\n\n            \n                \n                    Defined in server/infra/usecases-proxy/user/user-usecases-proxy.module.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     DynamicModule\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport {\n  CreateUserUseCase,\n  DeleteUserUseCase,\n  FindAllUserUseCase,\n  FindOneUserUseCase,\n  FindUserByKeyUseCase,\n  UpdateUserUseCase,\n} from '../../../domain/use-cases/user';\nimport { EnvironmentConfigModule } from '../../config/environment-config/environment-config.module';\nimport { CacheConfigModule } from '../../config/redis/cache.module';\nimport { CacheService } from '../../config/redis/cache.service';\nimport { ExceptionsModule } from '../../exceptions/exceptions.module';\nimport { ExceptionsService } from '../../exceptions/exceptions.service';\nimport { LoggerModule } from '../../logger/logger.module';\nimport { LoggerService } from '../../logger/logger.service';\nimport { RepositoriesModule } from '../../repositories/repositories.module';\nimport { DatabaseUserRepository } from '../../repositories/user.repository';\nimport { BcryptModule } from '../../services/bcrypt/bcrypt.module';\nimport { BcryptService } from '../../services/bcrypt/bcrypt.service';\nimport { UseCaseProxy } from '../usecase-proxy';\n\n@Module({\n  imports: [\n    LoggerModule,\n    EnvironmentConfigModule,\n    RepositoriesModule,\n    BcryptModule,\n    ExceptionsModule,\n    CacheConfigModule,\n  ],\n})\nexport class UserUsecasesProxyModule {\n  static GET_USER_USECASES_PROXY = 'getUserUsecasesProxy';\n  static GET_USERS_USECASES_PROXY = 'getUsersUsecasesProxy';\n  static FIND_USER_BY_KEY_USECASES_PROXY = 'findUserByKeyUsecasesProxy';\n  static POST_USER_USECASES_PROXY = 'postUserUsecasesProxy';\n  static DELETE_USER_USECASES_PROXY = 'deleteUserUsecasesProxy';\n  static PUT_USER_USECASES_PROXY = 'putUserUsecasesProxy';\n\n  static register(): DynamicModule {\n    return {\n      module: UserUsecasesProxyModule,\n      providers: [\n        {\n          inject: [DatabaseUserRepository, CacheService],\n          provide: UserUsecasesProxyModule.GET_USERS_USECASES_PROXY,\n          useFactory: (\n            repository: DatabaseUserRepository,\n            cacheService: CacheService,\n          ) =>\n            new UseCaseProxy(new FindAllUserUseCase(repository, cacheService)),\n        },\n        {\n          inject: [DatabaseUserRepository, ExceptionsService, CacheService],\n          provide: UserUsecasesProxyModule.GET_USER_USECASES_PROXY,\n          useFactory: (\n            repository: DatabaseUserRepository,\n            exceptionService: ExceptionsService,\n            cacheService: CacheService,\n          ) =>\n            new UseCaseProxy(\n              new FindOneUserUseCase(\n                repository,\n                exceptionService,\n                cacheService,\n              ),\n            ),\n        },\n        {\n          inject: [DatabaseUserRepository, ExceptionsService, CacheService],\n          provide: UserUsecasesProxyModule.FIND_USER_BY_KEY_USECASES_PROXY,\n          useFactory: (\n            repository: DatabaseUserRepository,\n            exceptionService: ExceptionsService,\n            cacheService: CacheService,\n          ) =>\n            new UseCaseProxy(\n              new FindUserByKeyUseCase(\n                repository,\n                exceptionService,\n                cacheService,\n              ),\n            ),\n        },\n        {\n          inject: [\n            LoggerService,\n            DatabaseUserRepository,\n            BcryptService,\n            ExceptionsService,\n          ],\n          provide: UserUsecasesProxyModule.POST_USER_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            repository: DatabaseUserRepository,\n            bcryptService: BcryptService,\n            exceptionService: ExceptionsService,\n          ) =>\n            new UseCaseProxy(\n              new CreateUserUseCase(\n                logger,\n                repository,\n                bcryptService,\n                exceptionService,\n              ),\n            ),\n        },\n        {\n          inject: [\n            LoggerService,\n            DatabaseUserRepository,\n            BcryptService,\n            ExceptionsService,\n          ],\n          provide: UserUsecasesProxyModule.PUT_USER_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            repository: DatabaseUserRepository,\n            bcryptService: BcryptService,\n            exceptionService: ExceptionsService,\n          ) =>\n            new UseCaseProxy(\n              new UpdateUserUseCase(\n                logger,\n                repository,\n                bcryptService,\n                exceptionService,\n              ),\n            ),\n        },\n        {\n          inject: [LoggerService, DatabaseUserRepository, ExceptionsService],\n          provide: UserUsecasesProxyModule.DELETE_USER_USECASES_PROXY,\n          useFactory: (\n            logger: LoggerService,\n            repository: DatabaseUserRepository,\n            exceptionService: ExceptionsService,\n          ) =>\n            new UseCaseProxy(\n              new DeleteUserUseCase(logger, repository, exceptionService),\n            ),\n        },\n      ],\n      exports: [\n        UserUsecasesProxyModule.GET_USERS_USECASES_PROXY,\n        UserUsecasesProxyModule.GET_USER_USECASES_PROXY,\n        UserUsecasesProxyModule.FIND_USER_BY_KEY_USECASES_PROXY,\n        UserUsecasesProxyModule.POST_USER_USECASES_PROXY,\n        UserUsecasesProxyModule.PUT_USER_USECASES_PROXY,\n        UserUsecasesProxyModule.DELETE_USER_USECASES_PROXY,\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                server/domain/config/ambient.interface.ts\n            \n            interface\n            AmbientConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/domain/config/api.interface.ts\n            \n            interface\n            ApiConfig\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/domain/config/database.interface.ts\n            \n            interface\n            DatabaseConfig\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/domain/config/jwt.interface.ts\n            \n            interface\n            JWTConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/config/redis.interface.ts\n            \n            interface\n            RedisConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/core/http/nestResponse.builder.ts\n            \n            class\n            NestResponseBuilder\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/domain/core/http/nestResponse.ts\n            \n            class\n            NestResponse\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/domain/entities/log.entity.ts\n            \n            entity\n            Log\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/domain/entities/transaction.entity.ts\n            \n            entity\n            Transaction\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/domain/entities/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/domain/interfaces/api.interface.ts\n            \n            interface\n            IApiService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/domain/interfaces/auth.interface.ts\n            \n            interface\n            IAuth\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/interfaces/authRequest.interface.ts\n            \n            interface\n            IAuthRequest\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/domain/interfaces/bcrypt.interface.ts\n            \n            interface\n            IBcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/interfaces/cache.interface.ts\n            \n            interface\n            ICacheManager\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/interfaces/exceptions.interface.ts\n            \n            interface\n            IExceptionService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/domain/interfaces/exceptions.interface.ts\n            \n            interface\n            IFormatExceptionMessage\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/interfaces/jwt.interface.ts\n            \n            interface\n            IJwtService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/interfaces/jwt.interface.ts\n            \n            interface\n            IJwtServicePayload\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            IInfo\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            IQuery\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            IRates\n            \n                0 %\n                (0/171)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            ISuccessTransaction\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            ITransactionError\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/interfaces/transaction.interface.ts\n            \n            interface\n            ITransactionOptions\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/logger/logger.interface.ts\n            \n            interface\n            ILogger\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/domain/repositories/auth.repository.ts\n            \n            interface\n            IAuthRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/repositories/transaction.repository.ts\n            \n            interface\n            ITransactionRepository\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/domain/repositories/user.repository.ts\n            \n            interface\n            IUserRepository\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                server/domain/use-cases/auth/login.usecase.ts\n            \n            class\n            LoginUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/use-cases/transaction/create-transaction.usecase.ts\n            \n            class\n            CreateTransactionUseCase\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/domain/use-cases/transaction/delete-transaction.usecase.ts\n            \n            class\n            DeleteTransactionUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/transaction/find-all-transactions.usecase.ts\n            \n            class\n            FindAllTransactionUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/transaction/find-one-transaction.usecase.ts\n            \n            class\n            FindOneTransactionUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/create-user.usecase.ts\n            \n            class\n            CreateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/delete-user.usecase.ts\n            \n            class\n            DeleteUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/find-all-users.usecase.ts\n            \n            class\n            FindAllUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/find-one-user.usecase.ts\n            \n            class\n            FindOneUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/find-user-by-key.usecase.ts\n            \n            class\n            FindUserByKeyUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/domain/use-cases/user/update-user.usecase.ts\n            \n            class\n            UpdateUserUseCase\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/common/filters/exception.filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/common/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/common/guards/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/infra/common/interceptor/transformResponse.interceptor.ts\n            \n            injectable\n            TransformResponseInterceptor\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/common/middlewares/logger.middleware.ts\n            \n            injectable\n            LoggerMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/common/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/common/strategies/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/common/utils/setupContainer.utils.ts\n            \n            class\n            SetupContainer\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/common/utils/setupDocumentBuilder.utils.ts\n            \n            class\n            SetupDocumentBuilder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/common/utils/setupGlobalFilters.utils.ts\n            \n            class\n            SetupGlobalFilters\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/common/utils/setupGlobalInterceptors.utils.ts\n            \n            class\n            SetupGlobalInterceptors\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/common/utils/setupGlobalPipes.utils.ts\n            \n            class\n            SetupGlobalPipes\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/config/environment-config/environment-config.service.ts\n            \n            injectable\n            EnvironmentConfigService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                server/infra/config/environment-config/environment-config.validation.ts\n            \n            class\n            EnvironmentVariables\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                server/infra/config/environment-config/environment-config.validation.ts\n            \n            function\n            validate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/infra/config/redis/cache.module.ts\n            \n            variable\n            getRedisModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/infra/config/redis/cache.service.ts\n            \n            injectable\n            CacheService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/config/typeorm/typeorm.module.ts\n            \n            variable\n            getTypeOrmModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/infra/controllers/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                server/infra/controllers/auth/auth.dto.ts\n            \n            class\n            AuthDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/controllers/auth/auth.presenter.ts\n            \n            class\n            AuthPresenter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/controllers/transaction/transaction.controller.ts\n            \n            controller\n            TransactionController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                server/infra/controllers/transaction/transaction.dto.ts\n            \n            class\n            CreateTransactionDTO\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/infra/controllers/transaction/transaction.dto.ts\n            \n            class\n            TransactionOptionsDTO\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/infra/controllers/transaction/transaction.presenter.ts\n            \n            class\n            TransactionPresenter\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                server/infra/controllers/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/infra/controllers/user/user.dto.ts\n            \n            class\n            CreateUserDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/controllers/user/user.dto.ts\n            \n            class\n            UpdateUserDTO\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/controllers/user/user.presenter.ts\n            \n            class\n            UserPresenter\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/infra/exceptions/exceptions.service.ts\n            \n            injectable\n            ExceptionsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/infra/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                server/infra/repositories/transaction.repository.ts\n            \n            injectable\n            DatabaseTransactionRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                server/infra/repositories/user.repository.ts\n            \n            injectable\n            DatabaseUserRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                server/infra/services/api/api.module.ts\n            \n            variable\n            getAPIModuleOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/infra/services/api/api.service.ts\n            \n            injectable\n            ApiConfigService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/services/bcrypt/bcrypt.service.ts\n            \n            injectable\n            BcryptService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/infra/services/jwt/jwt.service.ts\n            \n            injectable\n            JwtTokenService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                server/infra/usecases-proxy/usecase-proxy.ts\n            \n            class\n            UseCaseProxy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                server/main.ts\n            \n            function\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isOptionalCreateDateColumn.decorator.ts\n            \n            variable\n            IsOptionalCreateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isOptionalDateColumn.decorator.ts\n            \n            variable\n            IsOptionalDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isOptionalStringColumn.decorator.ts\n            \n            variable\n            IsOptionalStringColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isOptionalUpdateDateColumn.decorator.ts\n            \n            variable\n            IsOptionalUpdateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isOptionalnumberColumn.decorator.ts\n            \n            variable\n            IsOptionalNumberColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isRequiredCreateDateColumn.decorator.ts\n            \n            variable\n            IsRequiredCreateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isRequiredDateColumn.decorator.ts\n            \n            variable\n            IsRequiredDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isRequiredNumberColumn.decorator.ts\n            \n            variable\n            IsRequiredNumberColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isRequiredStringColumn.decorator.ts\n            \n            variable\n            IsRequiredStringColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/columns/isRequiredUpdateDateColumn.decorator.ts\n            \n            variable\n            IsOptionalUpdateDateColumn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/isPublicRoute.decorator.ts\n            \n            variable\n            IS_PUBLIC_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/isPublicRoute.decorator.ts\n            \n            variable\n            Public\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/requests/deleteApiResponse.decorator.ts\n            \n            variable\n            DeleteApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/requests/getApiResponse.decorator.ts\n            \n            variable\n            GetApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/requests/indexApiResponse.decorator.ts\n            \n            variable\n            IndexApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/requests/postApiResponse.decorator.ts\n            \n            variable\n            PostApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/requests/putApiResponse.decorator.ts\n            \n            variable\n            PutApiResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isOptionalNumber.decorator.ts\n            \n            variable\n            IsOptionalNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isOptionalString.decorator.ts\n            \n            variable\n            IsOptionalString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isRequiredDate.decorator.ts\n            \n            variable\n            IsRequiredDate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isRequiredEmail.decorator.ts\n            \n            variable\n            IsRequiredEmail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isRequiredNumber.decorator.ts\n            \n            variable\n            IsRequiredNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                server/main/decorators/validators/isRequiredString.decorator.ts\n            \n            variable\n            IsRequiredString\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^1.0.0\n        \n            @nestjs/common : ^9.2.1\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^9.2.1\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^9.2.1\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.3\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            axios : ^1.2.1\n        \n            bcrypt : ^5.1.0\n        \n            cache-manager : ^5.1.4\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            redis : ^3.1.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.6.0\n        \n            typeorm : ^0.2.42\n        \n            uuidv4 : ^6.2.13\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Environment   (server/.../environment-config.validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/infra/config/environment-config/environment-config.validation.ts\n    \n        \n            \n                \n                    \n                        \n                        Environment\n                    \n                \n                        \n                            \n                                 Development\n                            \n                        \n                        \n                            \n                                Value : development\n                            \n                        \n                        \n                            \n                                 Production\n                            \n                        \n                        \n                            \n                                Value : production\n                            \n                        \n                        \n                            \n                                 Local\n                            \n                        \n                        \n                            \n                                Value : local\n                            \n                        \n                        \n                            \n                                 Test\n                            \n                        \n                        \n                            \n                                Value : test\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            main   (server/.../main.ts)\n                        \n                        \n                            validate   (server/.../environment-config.validation.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n            \n                \nmain()\n                \n            \n\n\n\n\n        \n    \n    server/infra/config/environment-config/environment-config.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validate\n                        \n                    \n                \n            \n            \n                \nvalidate(config: Record)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nConversor de moedas\nVoc� dever� implementar uma API Rest que seja capaz de realizar a convers�o entre duas moedas\nutilizando taxas de convers�es atualizadas de um servi�o externo.\nPara realiza��o da convers�o � necess�rio o ID do usu�rio que deseja realizar a convers�o.\nA API dever� registrar cada transa��o de convers�o com todas as informa��es relacionadas e tamb�m\ndisponibilizar um endpoint para consulta das transa��es realizadas por um usu�rio.\nO projeto dever� ser feito em Node.js com TypeScript.\n\nDeve ser poss�vel realizar a convers�o entre 4 moedas no m�nimo (BRL, USD, EUR, JPY);\nAs taxas de convers�o devem ser obtidas de [https://api.exchangeratesapi.io/latest?base=USD];\nAs transa��es de convers�o devem ser persistidas no banco de dados (embedded) contendo:\nID do usu�rio;\nMoeda origem;\nValor origem;\nMoeda destino;\nTaxa de convers�o utilizada;\nData/Hora UTC;\n\n\nUma transa��o com sucesso deve retornar:\nID da transa��o\nID do usu�rio;\nMoeda origem;\nValor origem;\nMoeda destino;\nValor destino;\nTaxa de convers�o utilizada;\nData/Hora UTC;\n\n\nUma transa��o com falha conhecida deve retornar um erro HTTP 400 com a descri��o da falha;\nDever� existir um endpoint para listagem de todas as transa��es realizadas por usu�rio;\nDeve haver uma cobertura satisfat�ria de testes;\nDeve-se adicionar a esse arquivo explica��es sobre como rodar a aplica��o, e uma apresenta��o sobre o\nprojeto: prop�sito, features, motiva��o das principais escolhas de tecnologias, e separa��o das camadas;\nTodo o c�digo deve ser em ingl�s;\nDisponibilizar o c�digo apenas nesse reposit�rio, sem nenhuma c�pia p�blica, para evitar pl�gio;\n\nItens desej�veis\n\nLogs\nTratamento de exce��es\nDocumenta��o\nCoes�o de commits\nMensagens de commits claras\nConfigura��o de lint\nTestes unit�rios\nTestes de integra��o\nDocumenta��o dos endpoints\nEstar rodando e dispon�vel (Ex: Heroku, ou similar)\nCI/CD\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        ApiConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthUsecasesProxyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BcryptModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CacheConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ControllersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EnvironmentConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ExceptionsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        JwtModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepositoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TransactionUsecasesProxyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TypeOrmConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserUsecasesProxyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ApiConfigModule\n\n\n\ncluster_ApiConfigModule_exports\n\n\n\ncluster_ApiConfigModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthUsecasesProxyModule\n\n\n\ncluster_AuthUsecasesProxyModule_imports\n\n\n\ncluster_BcryptModule\n\n\n\ncluster_BcryptModule_exports\n\n\n\ncluster_BcryptModule_providers\n\n\n\ncluster_CacheConfigModule\n\n\n\ncluster_CacheConfigModule_exports\n\n\n\ncluster_CacheConfigModule_providers\n\n\n\ncluster_ControllersModule\n\n\n\ncluster_ControllersModule_imports\n\n\n\ncluster_EnvironmentConfigModule\n\n\n\ncluster_EnvironmentConfigModule_exports\n\n\n\ncluster_ExceptionsModule\n\n\n\ncluster_ExceptionsModule_exports\n\n\n\ncluster_ExceptionsModule_providers\n\n\n\ncluster_JwtModule\n\n\n\ncluster_JwtModule_imports\n\n\n\ncluster_JwtModule_exports\n\n\n\ncluster_JwtModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_RepositoriesModule\n\n\n\ncluster_RepositoriesModule_imports\n\n\n\ncluster_RepositoriesModule_exports\n\n\n\ncluster_RepositoriesModule_providers\n\n\n\n\nApiConfigService \n\nApiConfigService \n\n\n\nApiConfigModule\n\nApiConfigModule\n\nApiConfigService  -->\n\nApiConfigModule->ApiConfigService \n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nApiConfigModule->AppModule\n\n\n\n\n\nTransactionUsecasesProxyModule\n\nTransactionUsecasesProxyModule\n\nTransactionUsecasesProxyModule -->\n\nApiConfigModule->TransactionUsecasesProxyModule\n\n\n\n\n\nApiConfigService\n\nApiConfigService\n\nApiConfigModule -->\n\nApiConfigService->ApiConfigModule\n\n\n\n\n\nEnvironmentConfigService\n\nEnvironmentConfigService\n\nApiConfigModule -->\n\nEnvironmentConfigService->ApiConfigModule\n\n\n\n\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule\n\nEnvironmentConfigModule -->\n\nEnvironmentConfigService->EnvironmentConfigModule\n\n\n\n\n\nBcryptModule\n\nBcryptModule\n\nAppModule -->\n\nBcryptModule->AppModule\n\n\n\n\n\nAuthUsecasesProxyModule\n\nAuthUsecasesProxyModule\n\nAuthUsecasesProxyModule -->\n\nBcryptModule->AuthUsecasesProxyModule\n\n\n\n\n\nBcryptService \n\nBcryptService \n\nBcryptService  -->\n\nBcryptModule->BcryptService \n\n\n\n\n\nUserUsecasesProxyModule\n\nUserUsecasesProxyModule\n\nUserUsecasesProxyModule -->\n\nBcryptModule->UserUsecasesProxyModule\n\n\n\nAppModule -->\n\nEnvironmentConfigModule->AppModule\n\n\n\nAuthUsecasesProxyModule -->\n\nEnvironmentConfigModule->AuthUsecasesProxyModule\n\n\n\nTransactionUsecasesProxyModule -->\n\nEnvironmentConfigModule->TransactionUsecasesProxyModule\n\n\n\nUserUsecasesProxyModule -->\n\nEnvironmentConfigModule->UserUsecasesProxyModule\n\n\n\n\n\nEnvironmentConfigService \n\nEnvironmentConfigService \n\nEnvironmentConfigService  -->\n\nEnvironmentConfigModule->EnvironmentConfigService \n\n\n\n\n\nExceptionsModule\n\nExceptionsModule\n\nAppModule -->\n\nExceptionsModule->AppModule\n\n\n\nAuthUsecasesProxyModule -->\n\nExceptionsModule->AuthUsecasesProxyModule\n\n\n\nTransactionUsecasesProxyModule -->\n\nExceptionsModule->TransactionUsecasesProxyModule\n\n\n\nUserUsecasesProxyModule -->\n\nExceptionsModule->UserUsecasesProxyModule\n\n\n\n\n\nExceptionsService \n\nExceptionsService \n\nExceptionsService  -->\n\nExceptionsModule->ExceptionsService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\nAuthUsecasesProxyModule -->\n\nLoggerModule->AuthUsecasesProxyModule\n\n\n\nTransactionUsecasesProxyModule -->\n\nLoggerModule->TransactionUsecasesProxyModule\n\n\n\nUserUsecasesProxyModule -->\n\nLoggerModule->UserUsecasesProxyModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAppModule -->\n\nJwtStrategy->AppModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAppModule -->\n\nLocalStrategy->AppModule\n\n\n\n\n\nJwtModule\n\nJwtModule\n\nAuthUsecasesProxyModule -->\n\nJwtModule->AuthUsecasesProxyModule\n\n\n\n\n\nJwtTokenService \n\nJwtTokenService \n\nJwtTokenService  -->\n\nJwtModule->JwtTokenService \n\n\n\n\n\nRepositoriesModule\n\nRepositoriesModule\n\nAuthUsecasesProxyModule -->\n\nRepositoriesModule->AuthUsecasesProxyModule\n\n\n\nTransactionUsecasesProxyModule -->\n\nRepositoriesModule->TransactionUsecasesProxyModule\n\n\n\nUserUsecasesProxyModule -->\n\nRepositoriesModule->UserUsecasesProxyModule\n\n\n\n\n\nDatabaseTransactionRepository \n\nDatabaseTransactionRepository \n\nDatabaseTransactionRepository  -->\n\nRepositoriesModule->DatabaseTransactionRepository \n\n\n\n\n\nDatabaseUserRepository \n\nDatabaseUserRepository \n\nDatabaseUserRepository  -->\n\nRepositoriesModule->DatabaseUserRepository \n\n\n\n\n\nControllersModule\n\nControllersModule\n\nControllersModule -->\n\nAuthUsecasesProxyModule->ControllersModule\n\n\n\n\n\nBcryptService\n\nBcryptService\n\nBcryptModule -->\n\nBcryptService->BcryptModule\n\n\n\n\n\nCacheService \n\nCacheService \n\n\n\nCacheConfigModule\n\nCacheConfigModule\n\nCacheService  -->\n\nCacheConfigModule->CacheService \n\n\n\nTransactionUsecasesProxyModule -->\n\nCacheConfigModule->TransactionUsecasesProxyModule\n\n\n\nUserUsecasesProxyModule -->\n\nCacheConfigModule->UserUsecasesProxyModule\n\n\n\n\n\nCacheService\n\nCacheService\n\nCacheConfigModule -->\n\nCacheService->CacheConfigModule\n\n\n\nControllersModule -->\n\nTransactionUsecasesProxyModule->ControllersModule\n\n\n\nControllersModule -->\n\nUserUsecasesProxyModule->ControllersModule\n\n\n\n\n\nExceptionsService\n\nExceptionsService\n\nExceptionsModule -->\n\nExceptionsService->ExceptionsModule\n\n\n\n\n\nJwt\n\nJwt\n\nJwtModule -->\n\nJwt->JwtModule\n\n\n\n\n\nJwtTokenService\n\nJwtTokenService\n\nJwtModule -->\n\nJwtTokenService->JwtModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nTypeOrmConfigModule\n\nTypeOrmConfigModule\n\nRepositoriesModule -->\n\nTypeOrmConfigModule->RepositoriesModule\n\n\n\n\n\nDatabaseTransactionRepository\n\nDatabaseTransactionRepository\n\nRepositoriesModule -->\n\nDatabaseTransactionRepository->RepositoriesModule\n\n\n\n\n\nDatabaseUserRepository\n\nDatabaseUserRepository\n\nRepositoriesModule -->\n\nDatabaseUserRepository->RepositoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    29 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    24 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : flaviohsprado\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ITransaction   (server/.../transaction.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/domain/interfaces/transaction.interface.ts\n    \n    \n        \n            \n                \n                    \n                    ITransaction\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DeleteApiResponse   (server/.../deleteApiResponse.decorator.ts)\n                        \n                        \n                            getAPIModuleOptions   (server/.../api.module.ts)\n                        \n                        \n                            GetApiResponse   (server/.../getApiResponse.decorator.ts)\n                        \n                        \n                            getRedisModuleConfig   (server/.../cache.module.ts)\n                        \n                        \n                            getTypeOrmModuleOptions   (server/.../typeorm.module.ts)\n                        \n                        \n                            IndexApiResponse   (server/.../indexApiResponse.decorator.ts)\n                        \n                        \n                            IS_PUBLIC_KEY   (server/.../isPublicRoute.decorator.ts)\n                        \n                        \n                            IsOptionalCreateDateColumn   (server/.../isOptionalCreateDateColumn.decorator.ts)\n                        \n                        \n                            IsOptionalDateColumn   (server/.../isOptionalDateColumn.decorator.ts)\n                        \n                        \n                            IsOptionalNumber   (server/.../isOptionalNumber.decorator.ts)\n                        \n                        \n                            IsOptionalNumberColumn   (server/.../isOptionalnumberColumn.decorator.ts)\n                        \n                        \n                            IsOptionalString   (server/.../isOptionalString.decorator.ts)\n                        \n                        \n                            IsOptionalStringColumn   (server/.../isOptionalStringColumn.decorator.ts)\n                        \n                        \n                            IsOptionalUpdateDateColumn   (server/.../isOptionalUpdateDateColumn.decorator.ts)\n                        \n                        \n                            IsOptionalUpdateDateColumn   (server/.../isRequiredUpdateDateColumn.decorator.ts)\n                        \n                        \n                            IsRequiredCreateDateColumn   (server/.../isRequiredCreateDateColumn.decorator.ts)\n                        \n                        \n                            IsRequiredDate   (server/.../isRequiredDate.decorator.ts)\n                        \n                        \n                            IsRequiredDateColumn   (server/.../isRequiredDateColumn.decorator.ts)\n                        \n                        \n                            IsRequiredEmail   (server/.../isRequiredEmail.decorator.ts)\n                        \n                        \n                            IsRequiredNumber   (server/.../isRequiredNumber.decorator.ts)\n                        \n                        \n                            IsRequiredNumberColumn   (server/.../isRequiredNumberColumn.decorator.ts)\n                        \n                        \n                            IsRequiredString   (server/.../isRequiredString.decorator.ts)\n                        \n                        \n                            IsRequiredStringColumn   (server/.../isRequiredStringColumn.decorator.ts)\n                        \n                        \n                            PostApiResponse   (server/.../postApiResponse.decorator.ts)\n                        \n                        \n                            Public   (server/.../isPublicRoute.decorator.ts)\n                        \n                        \n                            PutApiResponse   (server/.../putApiResponse.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    server/main/decorators/requests/deleteApiResponse.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DeleteApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (param?: string) => {\n  return applyDecorators(\n    Delete(param),\n    ApiHeader({\n      name: 'Authorization',\n      description: 'Bearer token',\n      required: true,\n      example:\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImlkIjoiZGE2ZGI0N2MtN2ZlYS00ZDc0LThjYWUtZjA2Mjg1N2JiMGMyIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.YLqRWhmGpB9ymV3ukLZ11AqST-PWZbJEUzX0YUhVt9I',\n    }),\n    ApiOkResponse({\n      description: 'The object has been successfully deleted.',\n    }),\n    ApiBadRequestResponse({\n      description:\n        'Client specified an invalid argument, request body or query param.',\n    }),\n    ApiUnauthorizedResponse({\n      description: 'The user is unauthorized.',\n    }),\n    ApiForbiddenResponse({\n      description: 'Authenticated user is not allowed to access this resource.',\n    }),\n    ApiNotFoundResponse({\n      description: 'The resource was not found.',\n    }),\n    ApiInternalServerErrorResponse({\n      description: 'Internal server error.',\n    }),\n    ApiRequestTimeoutResponse({\n      description: 'Request timeout.',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/infra/services/api/api.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAPIModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  config: EnvironmentConfigService,\n): Promise => ({\n  config: {\n    accessKey: config.getAccessKey(),\n  },\n})\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/requests/getApiResponse.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        GetApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  param?: string,\n) => {\n  return applyDecorators(\n    Get(param),\n    ApiHeader({\n      name: 'Authorization',\n      description: 'Bearer token',\n      required: true,\n      example:\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImlkIjoiZGE2ZGI0N2MtN2ZlYS00ZDc0LThjYWUtZjA2Mjg1N2JiMGMyIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.YLqRWhmGpB9ymV3ukLZ11AqST-PWZbJEUzX0YUhVt9I',\n    }),\n    ApiOkResponse({\n      description: 'The record has been successfully getted.',\n      type: model,\n    }),\n    ApiBadRequestResponse({\n      description:\n        'Client specified an invalid argument, request body or query param.',\n    }),\n    ApiUnauthorizedResponse({\n      description: 'The user is unauthorized.',\n    }),\n    ApiForbiddenResponse({\n      description: 'Authenticated user is not allowed to access this resource.',\n    }),\n    ApiNotFoundResponse({\n      description: 'The resource was not found.',\n    }),\n    ApiInternalServerErrorResponse({\n      description: 'Internal server error.',\n    }),\n    ApiRequestTimeoutResponse({\n      description: 'Request timeout.',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/infra/config/redis/cache.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getRedisModuleConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (config: EnvironmentConfigService): any =>\n  CacheModule.register({\n    store: redisStore,\n    host: config.getRedisHost(),\n    port: config.getRedisPort(),\n    ttl: 60,\n  })\n                    \n                \n\n\n        \n    \n\n    server/infra/config/typeorm/typeorm.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTypeOrmModuleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  config: EnvironmentConfigService,\n): TypeOrmModuleOptions =>\n  ({\n    type: config.getDatabaseType(),\n    host: config.getDatabaseHost(),\n    port: config.getDatabasePort(),\n    username: config.getDatabaseUser(),\n    password: config.getDatabasePassword(),\n    database: config.getDatabaseName(),\n    entities: ['dist/**/*.entity{.ts,.js}'],\n    synchronize: config.getDatabaseSync(),\n    ssl: config.getEnvironment() === 'production',\n    logging: config.getEnvironment() === 'development',\n    extra:\n      config.getEnvironment() === 'production'\n        ? {\n            ssl: {\n              rejectUnauthorized: false,\n            },\n          }\n        : {},\n  } as TypeOrmModuleOptions)\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/requests/indexApiResponse.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IndexApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(model: TModel) => {\n  return applyDecorators(\n    Get(),\n    ApiHeader({\n      name: 'Authorization',\n      description: 'Bearer token',\n      required: true,\n      example:\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImlkIjoiZGE2ZGI0N2MtN2ZlYS00ZDc0LThjYWUtZjA2Mjg1N2JiMGMyIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.YLqRWhmGpB9ymV3ukLZ11AqST-PWZbJEUzX0YUhVt9I',\n    }),\n    ApiOkResponse({\n      description: 'The records has been successfully getted.',\n      type: model,\n    }),\n    ApiBadRequestResponse({\n      description:\n        'Client specified an invalid argument, request body or query param.',\n    }),\n    ApiUnauthorizedResponse({\n      description: 'The user is unauthorized.',\n    }),\n    ApiForbiddenResponse({\n      description: 'Authenticated user is not allowed to access this resource.',\n    }),\n    ApiNotFoundResponse({\n      description: 'The resource was not found.',\n    }),\n    ApiInternalServerErrorResponse({\n      description: 'Internal server error.',\n    }),\n    ApiRequestTimeoutResponse({\n      description: 'Request timeout.',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/isPublicRoute.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IS_PUBLIC_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'isPublic'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => SetMetadata(IS_PUBLIC_KEY, true)\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isOptionalCreateDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalCreateDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    IsOptional(),\n    IsString({\n      message: '$property must be a string',\n    }),\n    CreateDateColumn({ nullable: true, ...props }),\n    ApiProperty({\n      required: false,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isOptionalDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    Column({ type: 'date', nullable: true, ...props }),\n    IsDate(),\n    ApiProperty(),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isOptionalNumber.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(IsNumber({}), ApiProperty({}));\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isOptionalnumberColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalNumberColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(\n    Column({\n      type: 'decimal',\n      transformer: {\n        from(value: string) {\n          return parseFloat(value);\n        },\n        to(value: number) {\n          return value;\n        },\n      },\n      nullable: true,\n    }),\n    ApiProperty({ type: 'number', nullable: true }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isOptionalString.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(\n    IsOptional(),\n    IsString(),\n    ApiProperty({\n      required: false,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isOptionalStringColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalStringColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    IsOptional(),\n    IsString(),\n    Column({ nullable: true, ...props }),\n    ApiProperty({\n      required: false,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isOptionalUpdateDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalUpdateDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    IsOptional(),\n    IsString({\n      message: '$property must be a string',\n    }),\n    UpdateDateColumn({ nullable: true, ...props }),\n    ApiProperty({\n      required: false,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isRequiredUpdateDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsOptionalUpdateDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    IsNotEmpty(),\n    IsString(),\n    UpdateDateColumn({ nullable: false, ...props }),\n    ApiProperty({\n      required: true,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isRequiredCreateDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredCreateDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    IsNotEmpty({\n      message: '$property must not be empty',\n    }),\n    IsString({\n      message: '$property must be a string',\n    }),\n    CreateDateColumn({ nullable: false, ...props }),\n    ApiProperty({\n      required: true,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isRequiredDate.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredDate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(IsDate(), IsNotEmpty(), ApiProperty({}));\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isRequiredDateColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredDateColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    Column({ type: 'date', ...props }),\n    IsDate(),\n    IsNotEmpty({\n      message: '$property must not be empty',\n    }),\n    ApiProperty(),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isRequiredEmail.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredEmail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(IsString(), IsEmail(), IsNotEmpty(), ApiProperty({}));\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isRequiredNumber.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredNumber\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(IsNumber(), IsNotEmpty(), ApiProperty({}));\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isRequiredNumberColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredNumberColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    Column({\n      ...props,\n      type: 'decimal',\n      transformer: {\n        from(value: string) {\n          return parseFloat(value);\n        },\n        to(value: number) {\n          return value;\n        },\n      },\n    }),\n    ApiProperty({ type: 'number' }),\n    IsNotEmpty({\n      message: '$property must not be empty',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/validators/isRequiredString.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  return applyDecorators(IsString(), IsNotEmpty(), ApiProperty({}));\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/columns/isRequiredStringColumn.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsRequiredStringColumn\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (props?: ColumnOptions) => {\n  return applyDecorators(\n    Column(props),\n    IsString({\n      message: '$property must be a string',\n    }),\n    IsNotEmpty({\n      message: '$property must not be empty',\n    }),\n    ApiProperty({\n      required: true,\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/requests/postApiResponse.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PostApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  param?: string,\n  required = true,\n) => {\n  return applyDecorators(\n    Post(param),\n    ApiHeader({\n      name: 'Authorization',\n      description: 'Bearer token',\n      required,\n      example:\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImlkIjoiZGE2ZGI0N2MtN2ZlYS00ZDc0LThjYWUtZjA2Mjg1N2JiMGMyIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.YLqRWhmGpB9ymV3ukLZ11AqST-PWZbJEUzX0YUhVt9I',\n    }),\n    ApiCreatedResponse({\n      description: 'The object has been successfully created.',\n      type: model,\n    }),\n    ApiOkResponse({\n      description: 'The object has been successfully retrieved',\n      type: model,\n    }),\n    ApiBadRequestResponse({\n      description:\n        'Client specified an invalid argument, request body or query param.',\n    }),\n    ApiUnauthorizedResponse({\n      description: 'The user is unauthorized.',\n    }),\n    ApiForbiddenResponse({\n      description: 'Authenticated user is not allowed to access this resource.',\n    }),\n    ApiNotFoundResponse({\n      description: 'The resource was not found.',\n    }),\n    ApiInternalServerErrorResponse({\n      description: 'Internal server error.',\n    }),\n    ApiRequestTimeoutResponse({\n      description: 'Request timeout.',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n    server/main/decorators/requests/putApiResponse.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PutApiResponse\n                        \n                    \n                \n            \n                \n                    \n                        Default value : >(\n  model: TModel,\n  param: string,\n) => {\n  return applyDecorators(\n    Put(param),\n    ApiHeader({\n      name: 'Authorization',\n      description: 'Bearer token',\n      required: true,\n      example:\n        'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImlkIjoiZGE2ZGI0N2MtN2ZlYS00ZDc0LThjYWUtZjA2Mjg1N2JiMGMyIn0.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.YLqRWhmGpB9ymV3ukLZ11AqST-PWZbJEUzX0YUhVt9I',\n    }),\n    ApiOkResponse({\n      description: 'The object has been successfully updated.',\n      type: model,\n    }),\n    ApiBadRequestResponse({\n      description:\n        'Client specified an invalid argument, request body or query param.',\n    }),\n    ApiUnauthorizedResponse({\n      description: 'The user is unauthorized.',\n    }),\n    ApiForbiddenResponse({\n      description: 'Authenticated user is not allowed to access this resource.',\n    }),\n    ApiNotFoundResponse({\n      description: 'The resource was not found.',\n    }),\n    ApiInternalServerErrorResponse({\n      description: 'Internal server error.',\n    }),\n    ApiRequestTimeoutResponse({\n      description: 'Request timeout.',\n    }),\n  );\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
